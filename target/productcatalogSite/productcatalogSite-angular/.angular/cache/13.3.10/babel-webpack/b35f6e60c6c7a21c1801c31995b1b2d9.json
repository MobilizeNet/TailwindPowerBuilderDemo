{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1365);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1339:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.mobile.pane\");\n    /***/\n  },\n\n  /***/\n  1365:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1339)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"mobile.splitview\",\n        name: \"SplitView\",\n        category: \"mobile\",\n        description: \"The mobile SplitView is a tablet-specific view that consists of two or more mobile Pane widgets.\",\n        depends: [\"mobile.pane\"]\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            ui = kendo.mobile.ui,\n            Widget = ui.Widget,\n            EXPANED_PANE_SHIM = \"<div class='km-expanded-pane-shim'></div>\",\n            View = ui.View;\n        var SplitView = View.extend({\n          init: function (element, options) {\n            var that = this,\n                pane,\n                modalViews;\n            Widget.fn.init.call(that, element, options);\n            element = that.element;\n            $.extend(that, options);\n\n            that._id();\n\n            if (!that.options.$angular) {\n              that._layout();\n\n              that._overlay();\n            } else {\n              that._overlay();\n            }\n\n            that._style();\n\n            modalViews = element.children(that._locate(\"modalview\"));\n\n            if (!that.options.$angular) {\n              kendo.mobile.init(modalViews);\n            } else {\n              modalViews.each(function (idx, element) {\n                kendo.compileMobileDirective($(element), options.$angular[0]);\n              });\n            }\n\n            that.panes = [];\n            that._paramsHistory = [];\n\n            if (!that.options.$angular) {\n              that.content.children(kendo.roleSelector(\"pane\")).each(function () {\n                pane = kendo.initWidget(this, {}, ui.roles);\n                that.panes.push(pane);\n              });\n            } else {\n              that.element.children(kendo.directiveSelector(\"pane\")).each(function () {\n                pane = kendo.compileMobileDirective($(this), options.$angular[0]);\n                that.panes.push(pane);\n              });\n              that.element.children(kendo.directiveSelector(\"header footer\")).each(function () {\n                kendo.compileMobileDirective($(this), options.$angular[0]);\n              });\n            }\n\n            that.expandedPaneShim = $(EXPANED_PANE_SHIM).appendTo(that.element);\n            that._shimUserEvents = new kendo.UserEvents(that.expandedPaneShim, {\n              fastTap: true,\n              tap: function () {\n                that.collapsePanes();\n              }\n            });\n          },\n          _locate: function (selectors) {\n            return this.options.$angular ? kendo.directiveSelector(selectors) : kendo.roleSelector(selectors);\n          },\n          options: {\n            name: \"SplitView\",\n            style: \"horizontal\"\n          },\n          expandPanes: function () {\n            this.element.addClass(\"km-expanded-splitview\");\n          },\n          collapsePanes: function () {\n            this.element.removeClass(\"km-expanded-splitview\");\n          },\n          // Implement view interface\n          _layout: function () {\n            var that = this,\n                element = that.element;\n            that.transition = kendo.attrValue(element, \"transition\");\n\n            kendo.mobile.ui.View.prototype._layout.call(this);\n\n            kendo.mobile.init(this.header.add(this.footer));\n            that.element.addClass(\"km-splitview\");\n            that.content.addClass(\"km-split-content\");\n          },\n          _style: function () {\n            var style = this.options.style,\n                element = this.element,\n                styles;\n\n            if (style) {\n              styles = style.split(\" \");\n              $.each(styles, function () {\n                element.addClass(\"km-split-\" + this);\n              });\n            }\n          },\n          showStart: function () {\n            var that = this;\n            that.element.css(\"display\", \"\");\n\n            if (!that.inited) {\n              that.inited = true;\n              $.each(that.panes, function () {\n                if (this.options.initial) {\n                  this.navigateToInitial();\n                } else {\n                  this.navigate(\"\");\n                }\n              });\n              that.trigger(\"init\", {\n                view: that\n              });\n            } else {\n              this._invokeNgController();\n            }\n\n            that.trigger(\"show\", {\n              view: that\n            });\n          }\n        });\n        ui.plugin(SplitView);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}