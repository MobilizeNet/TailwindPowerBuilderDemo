{"ast":null,"code":"import BaseTooltip from './base-tooltip';\nimport { Point } from '../../core';\nimport { grep, setDefaultOptions } from '../../common';\n\nclass SharedTooltip extends BaseTooltip {\n  constructor(plotArea, options) {\n    super(plotArea.chartService, options);\n    this.plotArea = plotArea;\n    this.formatService = plotArea.chartService.format;\n  }\n\n  showAt(points, coords) {\n    const tooltipPoints = grep(points, function (point) {\n      const tooltip = point.series.tooltip;\n      const excluded = tooltip && tooltip.visible === false;\n      return !excluded;\n    });\n\n    if (tooltipPoints.length > 0) {\n      const point = tooltipPoints[0];\n      const slot = this.plotArea.categoryAxis.getSlot(point.categoryIx);\n      const anchor = coords ? this._slotAnchor(coords, slot) : this._defaultAnchor(point, slot);\n      this.show({\n        anchor: anchor,\n        shared: true,\n        points: points,\n        category: point.category,\n        categoryText: this.formatService.auto(this.options.categoryFormat, point.category),\n        series: this.plotArea.series\n      }, this.options);\n    }\n  }\n\n  _slotAnchor(point, slot) {\n    const axis = this.plotArea.categoryAxis;\n    const align = {\n      horizontal: \"left\",\n      vertical: \"center\"\n    };\n\n    if (!axis.options.vertical) {\n      point.x = slot.center().x;\n    }\n\n    return {\n      point: point,\n      align: align\n    };\n  }\n\n  _defaultAnchor(point, slot) {\n    const box = point.owner.pane.chartsBox();\n    const vertical = this.plotArea.categoryAxis.options.vertical;\n    const center = box.center();\n    const slotCenter = slot.center();\n    const align = {\n      horizontal: \"center\",\n      vertical: \"center\"\n    };\n    let centerPoint;\n\n    if (vertical) {\n      centerPoint = new Point(center.x, slotCenter.y);\n    } else {\n      centerPoint = new Point(slotCenter.x, center.y);\n    }\n\n    return {\n      point: centerPoint,\n      align: align\n    };\n  }\n\n}\n\nsetDefaultOptions(SharedTooltip, {\n  categoryFormat: '{0:d}'\n});\nexport default SharedTooltip;","map":null,"metadata":{},"sourceType":"module"}