{"ast":null,"code":"var Constants = function () {\n  function Constants() {}\n\n  Constants.EventAggregator = 'eventAggregator';\n  Constants.ViewManager = 'viewManager';\n  Constants.ViewResolver = 'viewResolver';\n  Constants.ModelResolver = 'modelResolver';\n  Constants.Server = 'server';\n  Constants.Library = 'library';\n  Constants.Buffer = 'buffer';\n  Constants.Action = 'action';\n  Constants.Invoker = 'invoker';\n  Constants.NotifyBuffer = 'notifyBuffer';\n  Constants.UrlResolver = 'urlResolver';\n  Constants.ModelFactory = 'modelFactory';\n  Constants.ModalFactory = 'modalFactory';\n  Constants.RequestBuilder = 'requestBuilder';\n  Constants.DeltaHandler = 'deltaHandler';\n  Constants.TypeService = 'typeService';\n  Constants.WorkQueue = 'workQueue';\n  Constants.CommandWorker = 'commandWorker';\n  Constants.CommandFactory = 'commandFactory';\n  return Constants;\n}();\n\nexport { Constants };\n\nvar ContentType = function () {\n  function ContentType() {}\n\n  ContentType.applicationJson = 'application/json;charset=utf-8';\n  ContentType.multipartFormdata = 'multipart/form-data';\n  return ContentType;\n}();\n\nexport { ContentType };\n\nvar Events = function () {\n  function Events() {}\n\n  Events.Change = 'change';\n  Events.ActionComplete = 'actionComplete';\n  Events.ActionError = 'actionError';\n  Events.ActionSending = 'ActionSending';\n  Events.ApplyDeltas = 'applyDeltas';\n  Events.Error = 'error';\n  Events.AddToWorkQueue = 'addToWorkQueue';\n  Events.ExecWorkQueue = 'execToWorkQueue';\n  Events.PreActionCommandGeneratorRegistration = 'preActionCommandGeneratorRegistration';\n  Events.PreActionCommandGeneratorDeregistration = 'preActionCommandGeneratorDeregistration';\n  Events.ApplicationRestart = 'applicationRestart';\n  Events.ReloadPendingViews = 'reloadPendingViews';\n  Events.SetDMText = 'setDMText';\n  Events.DeletePendingActions = 'DeletePendingActions';\n  Events.ArrangeWindow = 'arrangeWindow';\n  Events.GridPrint = 'gridPrint';\n  Events.StylesChanged = 'stylesChanged';\n  Events.UpdateRanges = 'updateRanges';\n  Events.ModalExecution = 'modalExecution';\n  return Events;\n}();\n\nexport { Events };\nexport var Resolve = /*#__PURE__*/(() => {\n  (function (Resolve) {\n    Resolve[Resolve[\"Singleton\"] = 0] = \"Singleton\";\n    Resolve[Resolve[\"Request\"] = 1] = \"Request\";\n  })(Resolve || (Resolve = {}));\n\n  return Resolve;\n})(); //# sourceMappingURL=data:application/json;base64,","map":null,"metadata":{},"sourceType":"module"}