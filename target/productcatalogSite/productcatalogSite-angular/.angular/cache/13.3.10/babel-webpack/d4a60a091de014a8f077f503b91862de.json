{"ast":null,"code":"import { COORD_PRECISION } from '../common/constants';\nimport { Class, rad, round } from '../common';\n\nclass Point extends Class {\n  constructor(x, y) {\n    super();\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  clone() {\n    return new Point(this.x, this.y);\n  }\n\n  equals(point) {\n    return point && this.x === point.x && this.y === point.y;\n  }\n\n  rotate(center, degrees) {\n    const theta = rad(degrees);\n    const cosT = Math.cos(theta);\n    const sinT = Math.sin(theta);\n    const {\n      x: cx,\n      y: cy\n    } = center;\n    const {\n      x,\n      y\n    } = this;\n    this.x = round(cx + (x - cx) * cosT + (y - cy) * sinT, COORD_PRECISION);\n    this.y = round(cy + (y - cy) * cosT - (x - cx) * sinT, COORD_PRECISION);\n    return this;\n  }\n\n  multiply(a) {\n    this.x *= a;\n    this.y *= a;\n    return this;\n  }\n\n  distanceTo(point) {\n    const dx = this.x - point.x;\n    const dy = this.y - point.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  static onCircle(center, angle, radius) {\n    const radians = rad(angle);\n    return new Point(center.x - radius * Math.cos(radians), center.y - radius * Math.sin(radians));\n  }\n\n}\n\nexport default Point;","map":null,"metadata":{},"sourceType":"module"}