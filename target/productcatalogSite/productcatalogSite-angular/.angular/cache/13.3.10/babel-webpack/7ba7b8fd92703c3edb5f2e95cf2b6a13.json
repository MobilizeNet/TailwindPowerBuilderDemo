{"ast":null,"code":"'use strict';\n\nfunction round(method, number, precision) {\n  if (typeof number !== 'number') {\n    throw new TypeError('Expected value to be a number');\n  }\n\n  if (precision === Infinity) {\n    return number;\n  }\n\n  if (!Number.isInteger(precision)) {\n    throw new TypeError('Expected precision to be an integer');\n  }\n\n  const isRoundingAndNegative = method === 'round' && number < 0;\n\n  if (isRoundingAndNegative) {\n    number = Math.abs(number);\n  }\n\n  const power = 10 ** precision;\n  let result = Math[method](Number((number * power).toPrecision(15))) / power;\n\n  if (isRoundingAndNegative) {\n    result = -result;\n  }\n\n  return result;\n}\n\nmodule.exports = round.bind(undefined, 'round');\nmodule.exports.up = round.bind(undefined, 'ceil');\nmodule.exports.down = round.bind(undefined, 'floor');","map":null,"metadata":{},"sourceType":"script"}