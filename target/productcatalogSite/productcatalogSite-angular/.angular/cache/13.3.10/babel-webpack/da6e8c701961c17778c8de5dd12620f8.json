{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1021);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1021:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1022)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      (function ($, undefined) {\n        // Imports ================================================================\n        var kendo = window.kendo;\n        var Editor = kendo.ui.editor;\n        var dom = Editor.Dom;\n        var extend = $.extend;\n        var fontSizeMappings = 'xx-small,x-small,small,medium,large,x-large,xx-large'.split(',');\n        var quoteRe = /\"/g; //\"\n\n        var brRe = /<br[^>]*>/i;\n        var pixelRe = /^\\d+(\\.\\d*)?(px)?$/i;\n        var emptyPRe = /<p>(?:&nbsp;)?<\\/p>/i;\n        var cssDeclaration = /(\\*?[-#\\/\\*\\\\\\w]+(?:\\[[0-9a-z_-]+\\])?)\\s*:\\s*((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/g;\n        var sizzleAttr = /^sizzle-\\d+/i;\n        var scriptAttr = /^k-script-/i;\n        var onerrorRe = /\\s*onerror\\s*=\\s*(?:'|\")?([^'\">\\s]*)(?:'|\")?/i;\n        var br = '<br class=\"k-br\">';\n        var bomSpan = \"<span class='k-br'>\\ufeff</span>\";\n        var div = document.createElement(\"div\");\n        div.innerHTML = \" <hr>\";\n        var supportsLeadingWhitespace = div.firstChild.nodeType === 3;\n        div = null;\n        var isFunction = kendo.isFunction;\n        var TD = \"td\";\n        var Serializer = {\n          toEditableHtml: function (html) {\n            return (html || \"\").replace(/<!\\[CDATA\\[(.*)?\\]\\]>/g, \"<!--[CDATA[$1]]-->\").replace(/<(\\/?)script([^>]*)>/ig, \"<$1k:script$2>\").replace(/<img([^>]*)>/ig, function (match) {\n              return match.replace(onerrorRe, \"\");\n            }).replace(/(<\\/?img[^>]*>)[\\r\\n\\v\\f\\t ]+/ig, \"$1\").replace(/^<(table|blockquote)/i, br + '<$1').replace(/^[\\s]*(&nbsp;|\\u00a0)/i, '$1').replace(/<\\/(table|blockquote)>$/i, '</$1>' + br);\n          },\n          _toEditableImmutables: function (body) {\n            var immutable = Editor.Immutables.immutable,\n                emptyTextNode = dom.emptyTextNode,\n                first = body.firstChild,\n                last = body.lastChild;\n\n            while (emptyTextNode(first)) {\n              first = first.nextSibling;\n            }\n\n            while (emptyTextNode(last)) {\n              last = last.previousSibling;\n            }\n\n            if (first && immutable(first)) {\n              $(bomSpan).prependTo(body);\n            }\n\n            if (last && immutable(last)) {\n              $(bomSpan).appendTo(body);\n            }\n          },\n          _fillEmptyElements: function (body) {\n            // fills empty elements to allow them to be focused\n            $(body).find(\"p,td\").each(function () {\n              var p = $(this);\n\n              if (/^\\s*$/g.test(p.text()) && !p.find(\"img,input\").length) {\n                var node = this;\n\n                while (node.children[0] && node.children[0].nodeType != 3) {\n                  node = node.children[0];\n                }\n\n                if (node.nodeType == 1 && !dom.empty[dom.name(node)]) {\n                  if (dom.is(node, \"td\")) {\n                    node.innerHTML = kendo.ui.editor.emptyTableCellContent;\n                  } else {\n                    node.innerHTML = kendo.ui.editor.emptyElementContent;\n                  }\n                }\n              }\n            });\n          },\n          _removeSystemElements: function (body) {\n            // removes persisted system elements\n            $(\".k-paste-container\", body).remove();\n          },\n          _resetOrderedLists: function (root) {\n            // fix for IE9 OL bug -- https://connect.microsoft.com/IE/feedback/details/657695/ordered-list-numbering-changes-from-correct-to-0-0\n            var ols = root.getElementsByTagName(\"ol\"),\n                i,\n                ol,\n                originalStart;\n\n            for (i = 0; i < ols.length; i++) {\n              ol = ols[i];\n              originalStart = ol.getAttribute(\"start\");\n              ol.setAttribute(\"start\", 1);\n\n              if (originalStart) {\n                ol.setAttribute(\"start\", originalStart);\n              } else {\n                ol.removeAttribute(originalStart);\n              }\n            }\n          },\n          _preventScriptExecution: function (root) {\n            $(root).find(\"*\").each(function () {\n              var attributes = this.attributes;\n              var attribute, i, l, name;\n              var attributesToRemove = [];\n\n              for (i = 0, l = attributes.length; i < l; i++) {\n                attribute = attributes[i];\n                name = attribute.nodeName;\n\n                if (attribute.specified && /^on/i.test(name)) {\n                  this.setAttribute(\"k-script-\" + name, attribute.value);\n                  attributesToRemove.push(name);\n                }\n              }\n\n              for (i = 0, l = attributesToRemove.length; i < l; i++) {\n                this.removeAttribute(attributesToRemove[i]);\n              }\n            });\n          },\n          htmlToDom: function (html, root, options) {\n            var browser = kendo.support.browser;\n            var msie = browser.msie;\n            var o = options || {};\n            var immutables = o.immutables;\n            html = Serializer.toEditableHtml(html);\n\n            if (isFunction(o.custom)) {\n              html = o.custom(html) || html;\n            }\n\n            root.innerHTML = html;\n\n            if (immutables) {\n              immutables.deserialize(root);\n            }\n\n            if (msie) {\n              // unicode characters denormalize the DOM tree in IE9\n              dom.normalize(root);\n\n              Serializer._resetOrderedLists(root);\n            }\n\n            Serializer._preventScriptExecution(root);\n\n            Serializer._fillEmptyElements(root);\n\n            Serializer._removeSystemElements(root);\n\n            Serializer._toEditableImmutables(root); // add k-table class to all tables\n\n\n            $(\"table\", root).addClass(\"k-table\");\n            return root;\n          },\n          domToXhtml: function (root, options) {\n            var result = [];\n            var immutables = options && options.immutables;\n\n            function semanticFilter(attributes) {\n              return $.grep(attributes, function (attr) {\n                return attr.name != \"style\";\n              });\n            }\n\n            function mapStart(node, tag) {\n              result.push('<' + tag);\n              attr(node);\n              result.push('>');\n            }\n\n            var tagMap = {\n              iframe: {\n                start: function (node) {\n                  mapStart(node, \"iframe\");\n                },\n                end: function () {\n                  result.push('</iframe>');\n                }\n              },\n              'k:script': {\n                start: function (node) {\n                  mapStart(node, \"script\");\n                },\n                end: function () {\n                  result.push('</script>');\n                },\n                skipEncoding: true\n              },\n              span: {\n                canOptimize: true,\n                semantic: true,\n                start: function (node) {\n                  var style = node.style;\n                  var attributes = specifiedAttributes(node);\n                  var semanticAttributes = semanticFilter(attributes);\n\n                  if (semanticAttributes.length) {\n                    result.push(\"<span\");\n                    attr(node, semanticAttributes);\n                    result.push(\">\");\n                  }\n\n                  if (style.textDecoration == \"underline\") {\n                    result.push(\"<u>\");\n                  }\n\n                  var font = [];\n\n                  if (style.color) {\n                    font.push('color=\"' + dom.toHex(style.color) + '\"');\n                  }\n\n                  if (style.fontFamily) {\n                    font.push('face=\"' + style.fontFamily + '\"');\n                  }\n\n                  if (style.fontSize) {\n                    var size = $.inArray(style.fontSize, fontSizeMappings);\n                    font.push('size=\"' + size + '\"');\n                  }\n\n                  if (font.length) {\n                    result.push(\"<font \" + font.join(\" \") + \">\");\n                  }\n                },\n                end: function (node) {\n                  var style = node.style;\n\n                  if (style.color || style.fontFamily || style.fontSize) {\n                    result.push(\"</font>\");\n                  }\n\n                  if (style.textDecoration == \"underline\") {\n                    result.push(\"</u>\");\n                  }\n\n                  if (semanticFilter(specifiedAttributes(node)).length) {\n                    result.push(\"</span>\");\n                  }\n                }\n              },\n              strong: {\n                semantic: true,\n                start: function (node) {\n                  mapStart(node, \"b\");\n                },\n                end: function () {\n                  result.push('</b>');\n                }\n              },\n              em: {\n                semantic: true,\n                start: function (node) {\n                  mapStart(node, \"i\");\n                },\n                end: function () {\n                  result.push('</i>');\n                }\n              },\n              b: {\n                semantic: false,\n                start: function (node) {\n                  mapStart(node, \"strong\");\n                },\n                end: function () {\n                  result.push('</strong>');\n                }\n              },\n              i: {\n                semantic: false,\n                start: function (node) {\n                  mapStart(node, \"em\");\n                },\n                end: function () {\n                  result.push('</em>');\n                }\n              },\n              u: {\n                semantic: false,\n                start: function (node) {\n                  result.push('<span');\n                  var attributes = specifiedAttributes(node);\n                  var style = $(attributes).filter(function (i, item) {\n                    return item.name == \"style\";\n                  })[0];\n                  var styleObj = {\n                    nodeName: \"style\",\n                    value: \"text-decoration:underline;\"\n                  };\n\n                  if (style) {\n                    styleObj.value = style.value;\n\n                    if (!/text-decoration/i.test(styleObj.value)) {\n                      styleObj.value = \"text-decoration:underline;\" + styleObj.value;\n                    }\n\n                    attributes.splice($.inArray(style, attributes), 1);\n                  }\n\n                  attributes.push(styleObj);\n                  attr(node, attributes);\n                  result.push('>');\n                },\n                end: function () {\n                  result.push('</span>');\n                }\n              },\n              font: {\n                canOptimize: true,\n                semantic: false,\n                start: function (node) {\n                  result.push('<span style=\"');\n                  var color = node.getAttribute('color');\n                  var size = fontSizeMappings[node.getAttribute('size')];\n                  var face = node.getAttribute('face');\n\n                  if (color) {\n                    result.push('color:');\n                    result.push(dom.toHex(color));\n                    result.push(';');\n                  }\n\n                  if (face) {\n                    result.push('font-family:');\n                    result.push(face);\n                    result.push(';');\n                  }\n\n                  if (size) {\n                    result.push('font-size:');\n                    result.push(size);\n                    result.push(';');\n                  }\n\n                  result.push('\">');\n                },\n                end: function () {\n                  result.push('</span>');\n                }\n              }\n            };\n            tagMap.script = tagMap[\"k:script\"];\n            options = options || {};\n\n            if (typeof options.semantic == \"undefined\") {\n              options.semantic = true;\n            }\n\n            function cssProperties(cssText) {\n              var trim = kendo.trim;\n              var css = trim(cssText);\n              var match;\n              var property, value;\n              var properties = [];\n              cssDeclaration.lastIndex = 0;\n\n              while (true) {\n                match = cssDeclaration.exec(css);\n\n                if (!match) {\n                  break;\n                }\n\n                property = trim(match[1].toLowerCase());\n                value = trim(match[2]);\n\n                if (property == \"font-size-adjust\" || property == \"font-stretch\") {\n                  continue;\n                }\n\n                if (property.indexOf('color') >= 0) {\n                  value = dom.toHex(value);\n                } else if (property.indexOf('font') >= 0) {\n                  value = value.replace(quoteRe, \"'\");\n                } else if (/\\burl\\(/g.test(value)) {\n                  value = value.replace(quoteRe, \"\");\n                }\n\n                properties.push({\n                  property: property,\n                  value: value\n                });\n              }\n\n              return properties;\n            }\n\n            function styleAttr(cssText) {\n              var properties = cssProperties(cssText);\n              var i;\n\n              for (i = 0; i < properties.length; i++) {\n                result.push(properties[i].property);\n                result.push(':');\n                result.push(properties[i].value);\n                result.push(';');\n              }\n            }\n\n            function specifiedAttributes(node) {\n              var result = [];\n              var attributes = node.attributes;\n              var attribute, i, l;\n              var name, value, specified;\n\n              for (i = 0, l = attributes.length; i < l; i++) {\n                attribute = attributes[i];\n                name = attribute.nodeName;\n                value = attribute.value;\n                specified = attribute.specified; // In IE < 8 the 'value' attribute is not returned as 'specified'. The same goes for type=\"text\"\n\n                if (name == 'value' && 'value' in node && node.value) {\n                  specified = true;\n                } else if (name == 'type' && value == 'text') {\n                  specified = true;\n                } else if (name == \"class\" && !value) {\n                  specified = false;\n                } else if (sizzleAttr.test(name)) {\n                  specified = false;\n                } else if (name == 'complete') {\n                  specified = false;\n                } else if (name == 'altHtml') {\n                  specified = false;\n                } else if (name == 'start' && dom.is(node, \"ul\")) {\n                  specified = false;\n                } else if (name == 'start' && dom.is(node, \"ol\") && value == \"1\") {\n                  specified = false;\n                } else if (name.indexOf('_moz') >= 0) {\n                  specified = false;\n                } else if (scriptAttr.test(name)) {\n                  specified = !!options.scripts;\n                } else if (name == 'data-role' && value == 'resizable' && (dom.is(node, \"tr\") || dom.is(node, \"td\"))) {\n                  specified = false;\n                }\n\n                if (specified) {\n                  result.push(attribute);\n                }\n              }\n\n              return result;\n            }\n\n            function attr(node, attributes) {\n              var i, l, attribute, name, value;\n              attributes = attributes || specifiedAttributes(node);\n\n              if (dom.is(node, 'img')) {\n                var width = node.style.width,\n                    height = node.style.height,\n                    $node = $(node);\n\n                if (width && pixelRe.test(width)) {\n                  $node.attr('width', parseInt(width, 10));\n                  dom.unstyle(node, {\n                    width: undefined\n                  });\n                }\n\n                if (height && pixelRe.test(height)) {\n                  $node.attr('height', parseInt(height, 10));\n                  dom.unstyle(node, {\n                    height: undefined\n                  });\n                }\n              }\n\n              if (!attributes.length) {\n                return;\n              } // Remove the following if everything seems to be in order.\n              // https://github.com/telerik/kendo-ui-core/issues/3639\n              // attributes.sort(function (a, b) {\n              //     return a.nodeName > b.nodeName ? 1 : a.nodeName < b.nodeName ? -1 : 0;\n              // });\n\n\n              for (i = 0, l = attributes.length; i < l; i++) {\n                attribute = attributes[i];\n                name = attribute.nodeName;\n                value = attribute.value;\n\n                if (name == \"class\" && value == \"k-table\") {\n                  continue;\n                }\n\n                name = name.replace(scriptAttr, \"\");\n                result.push(' ');\n                result.push(name);\n                result.push('=\"');\n\n                if (name == 'style') {\n                  styleAttr(value || node.style.cssText);\n                } else if (name == 'src' || name == 'href') {\n                  result.push(kendo.htmlEncode(node.getAttribute(name, 2)));\n                } else {\n                  result.push(dom.fillAttrs[name] ? name : value);\n                }\n\n                result.push('\"');\n              }\n            }\n\n            function children(node, skip, skipEncoding) {\n              for (var childNode = node.firstChild; childNode; childNode = childNode.nextSibling) {\n                child(childNode, skip, skipEncoding);\n              }\n            }\n\n            function text(node) {\n              return node.nodeValue.replace(/\\ufeff/g, \"\");\n            }\n\n            function isEmptyBomNode(node) {\n              if (dom.isBom(node)) {\n                do {\n                  node = node.parentNode;\n\n                  if (dom.is(node, TD) && node.childNodes.length === 1) {\n                    return true;\n                  }\n\n                  if (node.childNodes.length !== 1) {\n                    return false;\n                  }\n                } while (!dom.isBlock(node));\n\n                return true;\n              }\n\n              return false;\n            }\n\n            function child(node, skip, skipEncoding) {\n              var nodeType = node.nodeType,\n                  tagName,\n                  mapper,\n                  parent,\n                  value,\n                  previous,\n                  jqNode;\n\n              if (immutables && Editor.Immutables.immutable(node)) {\n                result.push(immutables.serialize(node));\n              } else if (nodeType == 1) {\n                tagName = dom.name(node);\n                jqNode = $(node);\n\n                if (jqNode.hasClass(\"k-element-resize-handle-wrapper\") || jqNode.hasClass(\"k-column-resize-handle-wrapper\") || jqNode.hasClass(\"k-row-resize-handle-wrapper\")) {\n                  return;\n                }\n\n                if (!tagName || dom.insignificant(node)) {\n                  return;\n                }\n\n                if (!options.scripts && (tagName == \"script\" || tagName == \"k:script\")) {\n                  return;\n                }\n\n                mapper = tagMap[tagName];\n\n                if (mapper) {\n                  if (mapper.canOptimize && options.optimizeTags && shouldOptimize(node)) {\n                    children(node, false, mapper.skipEncoding);\n                    return;\n                  }\n\n                  if (typeof mapper.semantic == \"undefined\" || options.semantic ^ mapper.semantic) {\n                    mapper.start(node);\n                    children(node, false, mapper.skipEncoding);\n                    mapper.end(node);\n                    return;\n                  }\n                }\n\n                result.push('<');\n                result.push(tagName);\n                attr(node);\n\n                if (dom.empty[tagName]) {\n                  result.push(' />');\n                } else {\n                  result.push('>');\n                  children(node, skip || dom.is(node, 'pre'));\n                  result.push('</');\n                  result.push(tagName);\n                  result.push('>');\n                }\n              } else if (nodeType == 3) {\n                if (isEmptyBomNode(node)) {\n                  result.push('&nbsp;');\n                  return;\n                }\n\n                value = text(node);\n\n                if (!skip && supportsLeadingWhitespace) {\n                  parent = node.parentNode;\n                  previous = node.previousSibling;\n\n                  if (!previous) {\n                    previous = (dom.isInline(parent) ? parent : node).previousSibling;\n                  }\n\n                  if (!previous || previous.innerHTML === \"\" || dom.isBlock(previous)) {\n                    if (options.keepEOL) {\n                      value = value.replace(/[\\r\\n\\v\\f\\t ]+/, ' ');\n                    } else {\n                      value = value.replace(/^[\\r\\n\\v\\f\\t ]+/, '');\n                    }\n                  }\n\n                  value = value.replace(/ +/, ' ');\n                }\n\n                result.push(skipEncoding ? value : dom.encode(value, options));\n              } else if (nodeType == 4) {\n                result.push('<![CDATA[');\n                result.push(node.data);\n                result.push(']]>');\n              } else if (nodeType == 8) {\n                if (node.data.indexOf('[CDATA[') < 0) {\n                  result.push('<!--');\n                  result.push(node.data);\n                  result.push('-->');\n                } else {\n                  result.push('<!');\n                  result.push(node.data);\n                  result.push('>');\n                }\n              }\n            }\n\n            function shouldOptimize(node) {\n              return node.attributes.length === 0;\n            }\n\n            function textOnly(root) {\n              var childrenCount = root.childNodes.length;\n              var textChild = childrenCount && root.firstChild.nodeType == 3;\n              return textChild && (childrenCount == 1 || childrenCount == 2 && dom.insignificant(root.lastChild));\n            }\n\n            function runCustom() {\n              if (kendo.isFunction(options.custom)) {\n                result = options.custom(result) || result;\n              }\n            }\n\n            if (textOnly(root)) {\n              result = dom.encode(text(root.firstChild).replace(/[\\r\\n\\v\\f\\t ]+/, ' '), options);\n              runCustom();\n              return result;\n            }\n\n            children(root);\n            result = result.join('');\n            runCustom(); // if serialized dom contains only whitespace elements, consider it empty (required field validation)\n\n            if (result.replace(brRe, \"\").replace(emptyPRe, \"\") === \"\") {\n              return \"\";\n            }\n\n            return result;\n          }\n        };\n        extend(Editor, {\n          Serializer: Serializer\n        });\n      })(window.kendo.jQuery);\n    }, __webpack_require__(3));\n    /***/\n\n  },\n\n  /***/\n  1022:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./dom\");\n    /***/\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}