{"ast":null,"code":"var EventAggregator = function () {\n  function EventAggregator() {\n    this.events = {};\n    this.seed = 0;\n  }\n\n  EventAggregator.prototype.publish = function (event, data, eventName) {\n    if (this.events[event]) {\n      for (var _i = 0, _a = this.events[event]; _i < _a.length; _i++) {\n        var subscriber = _a[_i];\n        eventName ? subscriber.lambda({\n          data: data,\n          eventName: eventName\n        }) : subscriber.lambda(data);\n      }\n    }\n  };\n\n  EventAggregator.prototype.subscribe = function (event, lambda) {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n\n    ++this.seed;\n    var token = this.seed.toString();\n    this.events[event].push({\n      lambda: lambda,\n      token: token\n    });\n    return token;\n  };\n\n  EventAggregator.prototype.unSubscribe = function (token) {\n    for (var event_1 in this.events) {\n      if (this.events.hasOwnProperty(event_1)) {\n        var mySubscribes = this.events[event_1];\n\n        for (var index = 0; index < mySubscribes.length; index++) {\n          if (mySubscribes[index].token === token) {\n            mySubscribes.splice(index, 1);\n            return token;\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n\n  return EventAggregator;\n}();\n\nexport { EventAggregator }; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnRBZ2dyZWdhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0FwcGxpY2F0aW9uL0V2ZW50QWdncmVnYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvQkE7SUFFSTtRQUNJLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBQ2xCLENBQUM7SUFNRCxpQ0FBTyxHQUFQLFVBQVEsS0FBYSxFQUFFLElBQVUsRUFBRSxTQUFrQjtRQUNqRCxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDcEIsS0FBeUIsVUFBa0IsRUFBbEIsS0FBQSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFsQixjQUFrQixFQUFsQixJQUFrQixFQUFFO2dCQUF4QyxJQUFNLFVBQVUsU0FBQTtnQkFDakIsU0FBUyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEVBQUMsSUFBSSxNQUFBLEVBQUUsU0FBUyxXQUFBLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQzlFO1NBQ0o7SUFDTCxDQUFDO0lBRUQsbUNBQVMsR0FBVCxVQUFVLEtBQWEsRUFBRSxNQUEyQjtRQUNoRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNyQixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQztTQUMzQjtRQUNELEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQztRQUNaLElBQU0sS0FBSyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUMsTUFBTSxRQUFBLEVBQUUsS0FBSyxPQUFBLEVBQUMsQ0FBQyxDQUFDO1FBQ3pDLE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxxQ0FBVyxHQUFYLFVBQVksS0FBYTtRQUNyQixLQUFLLElBQU0sT0FBSyxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDN0IsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxPQUFLLENBQUMsRUFBRTtnQkFDbkMsSUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFLLENBQUMsQ0FBQztnQkFDeEMsS0FBSyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxHQUFHLFlBQVksQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUU7b0JBQ3RELElBQUksWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLEtBQUssS0FBSyxLQUFLLEVBQUU7d0JBQ3JDLFlBQVksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO3dCQUM5QixPQUFPLEtBQUssQ0FBQztxQkFDaEI7aUJBQ0o7YUFDSjtTQUNKO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUNMLHNCQUFDO0FBQUQsQ0FBQyxBQTNDRCxJQTJDQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4qIENvcHlyaWdodCAoQykgTW9iaWxpemUuTmV0IDxpbmZvQG1vYmlsaXplLm5ldD4gLSBBbGwgUmlnaHRzIFJlc2VydmVkXHJcbipcclxuKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgTW9iaWxpemUgRnJhbWV3b3Jrcywgd2hpY2ggaXNcclxuKiBwcm9wcmlldGFyeSBhbmQgY29uZmlkZW50aWFsLlxyXG4qXHJcbiogTk9USUNFOiAgQWxsIGluZm9ybWF0aW9uIGNvbnRhaW5lZCBoZXJlaW4gaXMsIGFuZCByZW1haW5zXHJcbiogdGhlIHByb3BlcnR5IG9mIE1vYmlsaXplLk5ldCBDb3Jwb3JhdGlvbi5cclxuKiBUaGUgaW50ZWxsZWN0dWFsIGFuZCB0ZWNobmljYWwgY29uY2VwdHMgY29udGFpbmVkIGhlcmVpbiBhcmVcclxuKiBwcm9wcmlldGFyeSB0byBNb2JpbGl6ZS5OZXQgQ29ycG9yYXRpb24gYW5kIG1heSBiZSBjb3ZlcmVkXHJcbiogYnkgVS5TLiBQYXRlbnRzLCBhbmQgYXJlIHByb3RlY3RlZCBieSB0cmFkZSBzZWNyZXQgb3IgY29weXJpZ2h0IGxhdy5cclxuKiBEaXNzZW1pbmF0aW9uIG9mIHRoaXMgaW5mb3JtYXRpb24gb3IgcmVwcm9kdWN0aW9uIG9mIHRoaXMgbWF0ZXJpYWxcclxuKiBpcyBzdHJpY3RseSBmb3JiaWRkZW4gdW5sZXNzIHByaW9yIHdyaXR0ZW4gcGVybWlzc2lvbiBpcyBvYnRhaW5lZFxyXG4qIGZyb20gTW9iaWxpemUuTmV0IENvcnBvcmF0aW9uLlxyXG4qXHJcbiogVGhpcyBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIGRlZmluZWQgaW5cclxuKiBmaWxlICdMSUNFTlNFLnR4dCcsIHdoaWNoIGlzIHBhcnQgb2YgdGhpcyBzb3VyY2UgY29kZSBwYWNrYWdlLlxyXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cclxuaW1wb3J0IHsgSUV2ZW50QWdncmVnYXRvciB9IGZyb20gJy4uL0NvbnRyYWN0JztcclxuXHJcbmV4cG9ydCBjbGFzcyBFdmVudEFnZ3JlZ2F0b3IgaW1wbGVtZW50cyBJRXZlbnRBZ2dyZWdhdG9yIHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLmV2ZW50cyA9IHt9O1xyXG4gICAgICAgIHRoaXMuc2VlZCA9IDA7XHJcbiAgICB9XHJcblxyXG4gICAgc2VlZDogbnVtYmVyO1xyXG5cclxuICAgIHByaXZhdGUgcmVhZG9ubHkgZXZlbnRzO1xyXG5cclxuICAgIHB1Ymxpc2goZXZlbnQ6IHN0cmluZywgZGF0YT86IGFueSwgZXZlbnROYW1lPzogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuZXZlbnRzW2V2ZW50XSkge1xyXG4gICAgICAgICAgICBmb3IgKGNvbnN0IHN1YnNjcmliZXIgb2YgdGhpcy5ldmVudHNbZXZlbnRdKSB7XHJcbiAgICAgICAgICAgICAgICBldmVudE5hbWUgPyBzdWJzY3JpYmVyLmxhbWJkYSh7ZGF0YSwgZXZlbnROYW1lfSkgOiBzdWJzY3JpYmVyLmxhbWJkYShkYXRhKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdWJzY3JpYmUoZXZlbnQ6IHN0cmluZywgbGFtYmRhOiAoZGF0YTogYW55KSA9PiB2b2lkKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAoIXRoaXMuZXZlbnRzW2V2ZW50XSkge1xyXG4gICAgICAgICAgICB0aGlzLmV2ZW50c1tldmVudF0gPSBbXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgKyt0aGlzLnNlZWQ7XHJcbiAgICAgICAgY29uc3QgdG9rZW4gPSAodGhpcy5zZWVkKS50b1N0cmluZygpO1xyXG4gICAgICAgIHRoaXMuZXZlbnRzW2V2ZW50XS5wdXNoKHtsYW1iZGEsIHRva2VufSk7XHJcbiAgICAgICAgcmV0dXJuIHRva2VuO1xyXG4gICAgfVxyXG5cclxuICAgIHVuU3Vic2NyaWJlKHRva2VuOiBzdHJpbmcpOiBhbnkge1xyXG4gICAgICAgIGZvciAoY29uc3QgZXZlbnQgaW4gdGhpcy5ldmVudHMpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuZXZlbnRzLmhhc093blByb3BlcnR5KGV2ZW50KSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgbXlTdWJzY3JpYmVzID0gdGhpcy5ldmVudHNbZXZlbnRdO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IG15U3Vic2NyaWJlcy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAobXlTdWJzY3JpYmVzW2luZGV4XS50b2tlbiA9PT0gdG9rZW4pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXlTdWJzY3JpYmVzLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0b2tlbjtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","map":null,"metadata":{},"sourceType":"module"}