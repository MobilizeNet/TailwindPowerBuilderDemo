{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1681);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  20:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../kendo.core\");\n    /***/\n  },\n\n  /***/\n  1681:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(20)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      (function (kendo) {\n        var AxisManager = kendo.Class.extend({\n          init: function (sheet) {\n            this._sheet = sheet;\n          },\n          forEachSelectedColumn: function (callback) {\n            var sheet = this._sheet;\n            sheet.batch(function () {\n              sheet.select().forEachColumnIndex(function (index, i) {\n                callback(sheet, index, i);\n              });\n            }, {\n              layout: true,\n              recalc: true\n            });\n          },\n          forEachSelectedRow: function (callback) {\n            var sheet = this._sheet;\n            sheet.batch(function () {\n              sheet.select().forEachRowIndex(function (index, i) {\n                callback(sheet, index, i);\n              });\n            }, {\n              layout: true,\n              recalc: true\n            });\n          },\n          includesHiddenColumns: function (ref) {\n            return this._sheet._grid._columns.includesHidden(ref.topLeft.col, ref.bottomRight.col);\n          },\n          includesHiddenRows: function (ref) {\n            return this._sheet._grid._rows.includesHidden(ref.topLeft.row, ref.bottomRight.row);\n          },\n          selectionIncludesHiddenColumns: function () {\n            return this.includesHiddenColumns(this._sheet.select());\n          },\n          selectionIncludesHiddenRows: function () {\n            return this.includesHiddenRows(this._sheet.select());\n          },\n          deleteSelectedColumns: function () {\n            var indexes = [],\n                delta = 0;\n            this.forEachSelectedColumn(function (sheet, index) {\n              index -= delta;\n\n              if (sheet.isHiddenColumn(index)) {\n                return;\n              }\n\n              delta++;\n              var formulas = [];\n              indexes.unshift({\n                index: index,\n                formulas: formulas,\n                width: sheet.columnWidth(index)\n              });\n\n              sheet._saveModifiedFormulas(formulas, function () {\n                sheet.deleteColumn(index);\n              });\n            });\n            return indexes;\n          },\n          deleteSelectedRows: function () {\n            var indexes = [],\n                delta = 0;\n            this.forEachSelectedRow(function (sheet, index) {\n              index -= delta;\n\n              if (sheet.isHiddenRow(index)) {\n                return;\n              }\n\n              delta++;\n              var formulas = [];\n              indexes.unshift({\n                index: index,\n                formulas: formulas,\n                height: sheet.rowHeight(index)\n              });\n\n              sheet._saveModifiedFormulas(formulas, function () {\n                sheet.deleteRow(index);\n              });\n            });\n            return indexes;\n          },\n          hideSelectedColumns: function () {\n            this.forEachSelectedColumn(function (sheet, index) {\n              sheet.hideColumn(index);\n            });\n            var sheet = this._sheet;\n            var ref = sheet.select().toRangeRef();\n            var left = ref.topLeft.col;\n            var right = ref.bottomRight.col;\n            var sel = null;\n\n            while (true) {\n              var hasRight = right < sheet._columns._count;\n              var hasLeft = left >= 0;\n\n              if (!hasLeft && !hasRight) {\n                break;\n              }\n\n              if (hasRight && !sheet.isHiddenColumn(right)) {\n                sel = right;\n                break;\n              }\n\n              if (hasLeft && !sheet.isHiddenColumn(left)) {\n                sel = left;\n                break;\n              }\n\n              left--;\n              right++;\n            }\n\n            if (sel !== null) {\n              ref = new kendo.spreadsheet.RangeRef(new kendo.spreadsheet.CellRef(0, sel), new kendo.spreadsheet.CellRef(sheet._rows._count - 1, sel));\n              sheet.range(ref).select();\n            }\n          },\n          hideSelectedRows: function () {\n            this.forEachSelectedRow(function (sheet, index) {\n              sheet.hideRow(index);\n            });\n            var sheet = this._sheet;\n            var ref = sheet.select().toRangeRef();\n            var top = ref.topLeft.row;\n            var bottom = ref.bottomRight.row;\n            var sel = null;\n\n            while (true) {\n              var hasBottom = bottom < sheet._rows._count;\n              var hasTop = top >= 0;\n\n              if (!hasTop && !hasBottom) {\n                break;\n              }\n\n              if (hasBottom && !sheet.isHiddenRow(bottom)) {\n                sel = bottom;\n                break;\n              }\n\n              if (hasTop && !sheet.isHiddenRow(top)) {\n                sel = top;\n                break;\n              }\n\n              top--;\n              bottom++;\n            }\n\n            if (sel !== null) {\n              ref = new kendo.spreadsheet.RangeRef(new kendo.spreadsheet.CellRef(sel, 0), new kendo.spreadsheet.CellRef(sel, sheet._columns._count - 1));\n              sheet.range(ref).select();\n            }\n          },\n          unhideSelectedColumns: function () {\n            this.forEachSelectedColumn(function (sheet, index) {\n              sheet.unhideColumn(index);\n            });\n          },\n          unhideSelectedRows: function () {\n            this.forEachSelectedRow(function (sheet, index) {\n              sheet.unhideRow(index);\n            });\n          },\n          addColumnLeft: function () {\n            var sheet = this._sheet;\n            var base,\n                count = 0;\n            sheet.batch(function () {\n              sheet.select().forEachColumnIndex(function (index) {\n                if (!base) {\n                  base = index;\n                }\n\n                sheet.insertColumn(base);\n                ++count;\n              });\n            }, {\n              recalc: true,\n              layout: true\n            });\n            return {\n              base: base,\n              count: count\n            };\n          },\n          addColumnRight: function () {\n            var sheet = this._sheet;\n            var base,\n                count = 0;\n            sheet.batch(function () {\n              sheet.select().forEachColumnIndex(function (index) {\n                base = index + 1;\n                ++count;\n              });\n\n              for (var i = 0; i < count; ++i) {\n                sheet.insertColumn(base);\n              }\n            }, {\n              recalc: true,\n              layout: true\n            });\n            return {\n              base: base,\n              count: count\n            };\n          },\n          addRowAbove: function () {\n            var sheet = this._sheet;\n            var base,\n                count = 0;\n            var selectedRows = sheet.select();\n            sheet.batch(function () {\n              selectedRows.forEachRowIndex(function (index) {\n                if (!base) {\n                  base = index;\n                }\n\n                sheet.insertRow(base);\n                ++count;\n              });\n            }, {\n              recalc: true,\n              layout: true\n            });\n            return {\n              base: base,\n              count: count\n            };\n          },\n          addRowBelow: function () {\n            var sheet = this._sheet;\n            var base,\n                count = 0;\n            sheet.batch(function () {\n              sheet.select().forEachRowIndex(function (index) {\n                base = index + 1;\n                ++count;\n              });\n\n              for (var i = 0; i < count; ++i) {\n                sheet.insertRow(base);\n              }\n            }, {\n              recalc: true,\n              layout: true\n            });\n            return {\n              base: base,\n              count: count\n            };\n          }\n        });\n        kendo.spreadsheet.AxisManager = AxisManager;\n      })(kendo);\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}