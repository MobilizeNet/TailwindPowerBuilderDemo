{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1725);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  5:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../kendo.data\");\n    /***/\n  },\n\n  /***/\n  20:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../kendo.core\");\n    /***/\n  },\n\n  /***/\n  1691:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./sheet\");\n    /***/\n  },\n\n  /***/\n  1725:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(20), __webpack_require__(5), __webpack_require__(1691)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      (function (kendo) {\n        var identity = function (o) {\n          return o;\n        };\n\n        var SheetDataSourceBinder = kendo.Class.extend({\n          init: function (options) {\n            this.options = kendo.jQuery.extend({}, this.options, options);\n            this.columns = this._normalizeColumns(this.options.columns);\n\n            this._sheet();\n\n            this._dataSource();\n\n            this._header();\n\n            this._boundRowsCount = 0;\n            this.dataSource.fetch();\n          },\n          _sheet: function () {\n            this.sheet = this.options.sheet;\n            this._sheetChangeHandler = this._sheetChange.bind(this);\n            this._sheetDeleteRowHandler = this._sheetDeleteRow.bind(this);\n            this._sheetInsertRowHandler = this._sheetInsertRow.bind(this);\n            this.sheet.bind(\"change\", this._sheetChangeHandler).bind(\"afterDeleteRow\", this._sheetDeleteRowHandler).bind(\"afterInsertRow\", this._sheetInsertRowHandler);\n          },\n          _sheetInsertRow: function (e) {\n            if (e.index !== undefined) {\n              this.dataSource.insert(Math.max(e.index - 1, 0), {});\n            }\n          },\n          _sheetDeleteRow: function (e) {\n            if (e.index !== undefined) {\n              var dataSource = this.dataSource;\n              var model = dataSource.view()[e.index - 1];\n\n              if (model) {\n                dataSource.remove(model);\n              }\n            }\n          },\n          _header: function () {\n            this.sheet.batch(function () {\n              this.columns.forEach(function (column, index) {\n                this.sheet.range(0, index).value(column.title);\n              }.bind(this));\n            }.bind(this));\n          },\n          _sheetChange: function (e) {\n            if (e.insertRow || e.deleteRow) {\n              // these actions are handled via custom events\n              return;\n            }\n\n            if (e.recalc && e.ref) {\n              var UnionRef = kendo.spreadsheet.UnionRef;\n              var dataSource = this.dataSource;\n              var data = dataSource.view();\n              var columns = this.columns;\n              var values = [];\n              var sheet = this.sheet;\n              var fields, getters, normalizedRef, i, rangeRef, normalizedRefs;\n\n              var setValues = function (ref) {\n                ref = ref.toRangeRef();\n                var record;\n                var valueIndex = 0;\n\n                for (var ri = ref.topLeft.row; ri <= ref.bottomRight.row; ri++) {\n                  record = data[ri - 1]; // skip header row\n\n                  if (!record) {\n                    record = dataSource.insert(ri - 1, {});\n                    data = dataSource.view();\n                  }\n\n                  var colValueIndex = 0;\n\n                  for (var ci = ref.topLeft.col; ci <= ref.bottomRight.col && ci < columns.length; ci++) {\n                    var currentValue = values[i][valueIndex][colValueIndex++];\n                    record.set(columns[ci].field, getters[ci](currentValue));\n                  }\n\n                  valueIndex++;\n                }\n              };\n\n              if (dataSource.reader.model) {\n                fields = dataSource.reader.model.fields;\n              }\n\n              if (!columns.length && data.length) {\n                columns = Object.keys(data[0].toJSON());\n              }\n\n              getters = columns.map(function (column) {\n                var field = column.field;\n\n                if (field && fields && fields[field] && fields[field].type == \"date\") {\n                  return kendo.spreadsheet.numberToDate;\n                }\n\n                return identity;\n              });\n              this._skipRebind = true;\n              normalizedRef = sheet._grid.normalize(e.ref);\n\n              if (!(normalizedRef instanceof UnionRef)) {\n                normalizedRef = new UnionRef([normalizedRef]);\n              }\n\n              normalizedRefs = normalizedRef.refs;\n              normalizedRefs.forEach(function (ref) {\n                values.push(sheet.range(ref).values());\n              });\n\n              for (i = 0; i < normalizedRefs.length; i++) {\n                rangeRef = normalizedRefs[i];\n                rangeRef.forEach(setValues);\n              }\n\n              this._boundRowsCount = dataSource.view().length;\n              this._skipRebind = false;\n            }\n          },\n          _normalizeColumns: function (columns) {\n            return columns.map(function (column) {\n              var field = column.field || column;\n              return {\n                field: field,\n                title: column.title || field\n              };\n            });\n          },\n          _dataSource: function () {\n            var options = this.options;\n            var dataSource = options.dataSource;\n            dataSource = Array.isArray(dataSource) ? {\n              data: dataSource\n            } : dataSource;\n\n            if (this.dataSource && this._changeHandler) {\n              this.dataSource.unbind(\"change\", this._changeHandler).unbind(\"progress\", this._progressHandler).unbind(\"error\", this._errorHandler);\n            } else {\n              this._changeHandler = this._change.bind(this);\n              this._progressHandler = this._requestStart.bind(this);\n              this._errorHandler = this._error.bind(this);\n            }\n\n            this.dataSource = kendo.data.DataSource.create(dataSource).bind(\"change\", this._changeHandler).bind(\"progress\", this._progressHandler).bind(\"error\", this._errorHandler);\n          },\n          _error: function () {\n            this._progress(false);\n          },\n          _requestStart: function () {\n            this._progress(true);\n          },\n          _progress: function (toggle) {\n            this.sheet.trigger(\"progress\", {\n              toggle: toggle\n            });\n          },\n          _change: function () {\n            if (this._skipRebind) {\n              return;\n            }\n\n            if (this.sheet.trigger(\"dataBinding\")) {\n              return;\n            }\n\n            var data = this.dataSource.view();\n            var columns = this.columns;\n\n            if (!columns.length && data.length) {\n              this.columns = columns = this._normalizeColumns(Object.keys(data[0].toJSON()));\n\n              this._header();\n            }\n\n            var getters = columns.map(function (column) {\n              return kendo.getter(column.field);\n            });\n            this.sheet.batch(function () {\n              var length = Math.max(data.length, this._boundRowsCount, this.sheet._grid.rowCount - 1);\n\n              for (var idx = 0; idx < length; idx++) {\n                for (var getterIdx = 0; getterIdx < getters.length; getterIdx++) {\n                  var value = data[idx] ? getters[getterIdx](data[idx]) : null; //skip header row\n\n                  this.sheet.range(idx + 1, getterIdx).value(value);\n                }\n              }\n            }.bind(this));\n            this._boundRowsCount = data.length;\n\n            this._progress(false);\n\n            this.sheet.trigger(\"dataBound\");\n          },\n          destroy: function () {\n            this.dataSource.unbind(\"change\", this._changeHandler).unbind(\"progress\", this._progressHandler).unbind(\"error\", this._errorHandler);\n            this.sheet.unbind(\"change\", this._sheetChangeHandler).unbind(\"deleteRow\", this._sheetDeleteRowHandler).unbind(\"insertRow\", this._sheetInsertRowHandler);\n          },\n          options: {\n            columns: []\n          }\n        });\n        kendo.spreadsheet.SheetDataSourceBinder = SheetDataSourceBinder;\n      })(kendo);\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}