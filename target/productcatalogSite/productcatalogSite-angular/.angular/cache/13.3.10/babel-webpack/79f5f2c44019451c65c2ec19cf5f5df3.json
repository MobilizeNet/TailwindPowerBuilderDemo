{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1311);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1311:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1312)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"html.button\",\n        name: \"Html.Button\",\n        category: \"web\",\n        description: \"HTML rendering utility for Kendo UI for jQuery.\",\n        depends: [\"html.base\"],\n        features: []\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            HTMLBase = kendo.html.HTMLBase,\n            KBUTTON = \"k-button\",\n            KBUTTONICON = \"k-button-icon\",\n            KBUTTONTEXT = \"k-button-text\";\n\n        var renderButton = function (element, options) {\n          if (arguments[0] === undefined || $.isPlainObject(arguments[0])) {\n            options = element;\n            element = $(\"<button></button>\");\n          }\n\n          return new HTMLButton(element, options).html();\n        };\n\n        var HTMLButton = HTMLBase.extend({\n          init: function (element, options) {\n            var that = this;\n            HTMLBase.fn.init.call(that, element, options);\n            that.wrapper = that.element.addClass(KBUTTON);\n\n            if (!that.element.attr(\"type\")) {\n              that.element.attr(\"type\", that.options.type);\n            }\n\n            that._addClasses();\n\n            that.iconElement();\n\n            that._textElement();\n          },\n          options: {\n            name: \"HTMLButton\",\n            type: \"button\",\n            icon: \"\",\n            iconClass: \"\",\n            spriteCssClass: \"\",\n            imageUrl: \"\",\n            size: \"medium\",\n            rounded: \"medium\",\n            fillMode: \"solid\",\n            themeColor: \"base\",\n            stylingOptions: [\"size\", \"rounded\", \"fillMode\", \"themeColor\"]\n          },\n          iconElement: function () {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                icon = options.icon,\n                iconClass = options.iconClass,\n                spriteCssClass = options.spriteCssClass,\n                imageUrl = options.imageUrl,\n                span,\n                img,\n                isEmpty;\n\n            if (spriteCssClass || imageUrl || icon || iconClass) {\n              isEmpty = true;\n              element.contents().filter(function () {\n                return !$(this).hasClass(\"k-sprite\") && !$(this).hasClass(\"k-icon\") && !$(this).hasClass(\"k-image\");\n              }).each(function (idx, el) {\n                if (el.nodeType == 1 || el.nodeType == 3 && kendo.trim(el.nodeValue).length > 0) {\n                  isEmpty = false;\n                }\n              });\n            }\n\n            if (isEmpty) {\n              that.element.addClass(\"k-icon-button\");\n            }\n\n            if (imageUrl) {\n              img = element.children(\"img.k-image\").first();\n\n              if (!img[0]) {\n                img = $('<img alt=\"icon\" class=\"k-image\" />').prependTo(element);\n              }\n\n              img.attr(\"src\", imageUrl);\n              img.addClass(KBUTTONICON);\n            } else if (icon || iconClass) {\n              span = element.children(\"span.k-icon\").first();\n\n              if (!span[0]) {\n                span = $('<span></span>').prependTo(element);\n              }\n\n              span.attr(\"class\", icon ? \"k-icon k-i-\" + icon : iconClass);\n              span.addClass(KBUTTONICON);\n            } else if (spriteCssClass) {\n              span = element.children(\"span.k-sprite\").first();\n\n              if (!span[0]) {\n                span = $('<span class=\"k-sprite\"></span>').prependTo(element);\n              }\n\n              span.addClass(spriteCssClass + \" \" + KBUTTONICON);\n            }\n          },\n          _textElement: function () {\n            var element = this.element;\n            element.contents().filter(function () {\n              return !$(this).hasClass(KBUTTONICON) && !$(this).hasClass(\"k-sprite\") && !$(this).hasClass(\"k-icon\") && !$(this).hasClass(\"k-image\");\n            }).each(function (idx, el) {\n              if (el.nodeType == 1 || el.nodeType == 3 && kendo.trim(el.nodeValue).length > 0) {\n                if (el.nodeType === 3) {\n                  var parent = el.parentNode;\n                  var newSpan = document.createElement('span');\n                  newSpan.appendChild(document.createTextNode(el.nodeValue));\n                  parent.replaceChild(newSpan, el);\n                  el = newSpan;\n                }\n\n                el.classList.add(KBUTTONTEXT);\n              }\n            });\n          }\n        });\n        $.extend(kendo.html, {\n          renderButton: renderButton,\n          HTMLButton: HTMLButton\n        });\n        kendo.cssProperties.registerPrefix(\"HTMLButton\", \"k-button-\");\n        kendo.cssProperties.registerValues(\"HTMLButton\", [{\n          prop: \"fillMode\",\n          values: kendo.cssProperties.fillModeValues.concat([\"link\"])\n        }, {\n          prop: \"rounded\",\n          values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  },\n\n  /***/\n  1312:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.html.base\");\n    /***/\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}