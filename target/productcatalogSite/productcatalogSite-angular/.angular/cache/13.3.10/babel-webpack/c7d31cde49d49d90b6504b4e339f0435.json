{"ast":null,"code":"import { Inject } from '../Application';\nimport { Constants, RequestType } from '../Contract';\nimport { Request } from '.';\n\nvar RequestBuilder = function () {\n  function RequestBuilder(inject) {\n    if (inject === void 0) {\n      inject = null;\n    }\n\n    this.inject = inject;\n    this.inject = inject || Inject.Instance;\n    this.library = this.inject.resolve(Constants.Library);\n  }\n\n  RequestBuilder.prototype.create = function (action) {\n    var request;\n\n    switch (action.requestConfig.requestType) {\n      case RequestType.ModelRequest:\n        request = new Request();\n        request.vm = action.item ? action.item.UniqueID : '';\n        this.library.dom.extend(request, action.parameters);\n        break;\n\n      case RequestType.RawRequest:\n        request = action.parameters;\n        break;\n\n      default:\n        request = new Request();\n        request.parameters = action.parameters;\n        break;\n    }\n\n    return request;\n  };\n\n  return RequestBuilder;\n}();\n\nexport { RequestBuilder }; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVxdWVzdEJ1aWxkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvU2VydmVyL1JlcXVlc3RCdWlsZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtCQSxPQUFPLEVBQWUsTUFBTSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckQsT0FBTyxFQUFFLFNBQVMsRUFBc0MsV0FBVyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXpGLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxHQUFHLENBQUM7QUFFNUI7SUFFSSx3QkFBb0IsTUFBc0I7UUFBdEIsdUJBQUEsRUFBQSxhQUFzQjtRQUF0QixXQUFNLEdBQU4sTUFBTSxDQUFnQjtRQUN0QyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQ3hDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzFELENBQUM7SUFJRCwrQkFBTSxHQUFOLFVBQU8sTUFBbUI7UUFDdEIsSUFBSSxPQUFZLENBQUM7UUFDakIsUUFBUSxNQUFNLENBQUMsYUFBYSxDQUFDLFdBQVcsRUFBRTtZQUN0QyxLQUFLLFdBQVcsQ0FBQyxZQUFZO2dCQUN6QixPQUFPLEdBQUcsSUFBSSxPQUFPLEVBQUUsQ0FBQztnQkFDeEIsT0FBTyxDQUFDLEVBQUUsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO2dCQUNyRCxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztnQkFDcEQsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLFVBQVU7Z0JBQ3ZCLE9BQU8sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDO2dCQUM1QixNQUFNO1lBQ1Y7Z0JBQ0ksT0FBTyxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7Z0JBQ3hCLE9BQU8sQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQztnQkFDdkMsTUFBTTtTQUNiO1FBQ0QsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQztJQUNMLHFCQUFDO0FBQUQsQ0FBQyxBQTNCRCxJQTJCQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4qIENvcHlyaWdodCAoQykgTW9iaWxpemUuTmV0IDxpbmZvQG1vYmlsaXplLm5ldD4gLSBBbGwgUmlnaHRzIFJlc2VydmVkXHJcbipcclxuKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgTW9iaWxpemUgRnJhbWV3b3Jrcywgd2hpY2ggaXNcclxuKiBwcm9wcmlldGFyeSBhbmQgY29uZmlkZW50aWFsLlxyXG4qXHJcbiogTk9USUNFOiAgQWxsIGluZm9ybWF0aW9uIGNvbnRhaW5lZCBoZXJlaW4gaXMsIGFuZCByZW1haW5zXHJcbiogdGhlIHByb3BlcnR5IG9mIE1vYmlsaXplLk5ldCBDb3Jwb3JhdGlvbi5cclxuKiBUaGUgaW50ZWxsZWN0dWFsIGFuZCB0ZWNobmljYWwgY29uY2VwdHMgY29udGFpbmVkIGhlcmVpbiBhcmVcclxuKiBwcm9wcmlldGFyeSB0byBNb2JpbGl6ZS5OZXQgQ29ycG9yYXRpb24gYW5kIG1heSBiZSBjb3ZlcmVkXHJcbiogYnkgVS5TLiBQYXRlbnRzLCBhbmQgYXJlIHByb3RlY3RlZCBieSB0cmFkZSBzZWNyZXQgb3IgY29weXJpZ2h0IGxhdy5cclxuKiBEaXNzZW1pbmF0aW9uIG9mIHRoaXMgaW5mb3JtYXRpb24gb3IgcmVwcm9kdWN0aW9uIG9mIHRoaXMgbWF0ZXJpYWxcclxuKiBpcyBzdHJpY3RseSBmb3JiaWRkZW4gdW5sZXNzIHByaW9yIHdyaXR0ZW4gcGVybWlzc2lvbiBpcyBvYnRhaW5lZFxyXG4qIGZyb20gTW9iaWxpemUuTmV0IENvcnBvcmF0aW9uLlxyXG4qXHJcbiogVGhpcyBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIGRlZmluZWQgaW5cclxuKiBmaWxlICdMSUNFTlNFLnR4dCcsIHdoaWNoIGlzIHBhcnQgb2YgdGhpcyBzb3VyY2UgY29kZSBwYWNrYWdlLlxyXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cclxuaW1wb3J0IHsgQWN0aW9uTW9kZWwsIEluamVjdCB9IGZyb20gJy4uL0FwcGxpY2F0aW9uJztcclxuaW1wb3J0IHsgQ29uc3RhbnRzLCBJSW5qZWN0LCBJTGlicmFyeSwgSVJlcXVlc3RCdWlsZGVyLCBSZXF1ZXN0VHlwZSB9IGZyb20gJy4uL0NvbnRyYWN0JztcclxuXHJcbmltcG9ydCB7IFJlcXVlc3QgfSBmcm9tICcuJztcclxuXHJcbmV4cG9ydCBjbGFzcyBSZXF1ZXN0QnVpbGRlciBpbXBsZW1lbnRzIElSZXF1ZXN0QnVpbGRlciB7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3Q6IElJbmplY3QgPSBudWxsKSB7XHJcbiAgICAgICAgdGhpcy5pbmplY3QgPSBpbmplY3QgfHwgSW5qZWN0Lkluc3RhbmNlO1xyXG4gICAgICAgIHRoaXMubGlicmFyeSA9IHRoaXMuaW5qZWN0LnJlc29sdmUoQ29uc3RhbnRzLkxpYnJhcnkpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgbGlicmFyeTogSUxpYnJhcnk7XHJcblxyXG4gICAgY3JlYXRlKGFjdGlvbjogQWN0aW9uTW9kZWwpOiBhbnkge1xyXG4gICAgICAgIGxldCByZXF1ZXN0OiBhbnk7XHJcbiAgICAgICAgc3dpdGNoIChhY3Rpb24ucmVxdWVzdENvbmZpZy5yZXF1ZXN0VHlwZSkge1xyXG4gICAgICAgICAgICBjYXNlIFJlcXVlc3RUeXBlLk1vZGVsUmVxdWVzdDpcclxuICAgICAgICAgICAgICAgIHJlcXVlc3QgPSBuZXcgUmVxdWVzdCgpO1xyXG4gICAgICAgICAgICAgICAgcmVxdWVzdC52bSA9IGFjdGlvbi5pdGVtID8gYWN0aW9uLml0ZW0uVW5pcXVlSUQgOiAnJztcclxuICAgICAgICAgICAgICAgIHRoaXMubGlicmFyeS5kb20uZXh0ZW5kKHJlcXVlc3QsIGFjdGlvbi5wYXJhbWV0ZXJzKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFJlcXVlc3RUeXBlLlJhd1JlcXVlc3Q6XHJcbiAgICAgICAgICAgICAgICByZXF1ZXN0ID0gYWN0aW9uLnBhcmFtZXRlcnM7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIHJlcXVlc3QgPSBuZXcgUmVxdWVzdCgpO1xyXG4gICAgICAgICAgICAgICAgcmVxdWVzdC5wYXJhbWV0ZXJzID0gYWN0aW9uLnBhcmFtZXRlcnM7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlcXVlc3Q7XHJcbiAgICB9XHJcbn1cclxuIl19","map":null,"metadata":{},"sourceType":"module"}