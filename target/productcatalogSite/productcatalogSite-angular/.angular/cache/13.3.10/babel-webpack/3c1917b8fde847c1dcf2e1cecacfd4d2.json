{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1352);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1112:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.userevents\");\n    /***/\n  },\n\n  /***/\n  1352:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1112)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"mobile.button\",\n        name: \"Button\",\n        category: \"mobile\",\n        description: \"The Button widget navigates between mobile Application views when pressed.\",\n        depends: [\"userevents\"]\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            mobile = kendo.mobile,\n            ui = mobile.ui,\n            Widget = ui.Widget,\n            support = kendo.support,\n            os = support.mobileOS,\n            ANDROID3UP = os.android && os.flatVersion >= 300,\n            CLICK = \"click\",\n            DISABLED = \"disabled\",\n            DISABLEDSTATE = \"km-state-disabled\";\n\n        function highlightButton(widget, event, highlight) {\n          $(event.target).closest(\".km-button,.km-detail\").toggleClass(\"km-state-active\", highlight);\n\n          if (ANDROID3UP && widget.deactivateTimeoutID) {\n            clearTimeout(widget.deactivateTimeoutID);\n            widget.deactivateTimeoutID = 0;\n          }\n        }\n\n        function createBadge(value) {\n          return $('<span class=\"km-badge\">' + value + '</span>');\n        }\n\n        var Button = Widget.extend({\n          init: function (element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            var useTap = that.options.clickOn === \"up\";\n\n            that._wrap();\n\n            that._style();\n\n            if (!useTap) {\n              that.element.attr(\"data-navigate-on-press\", true);\n            }\n\n            that.options.enable = that.options.enable && !that.element.attr(DISABLED);\n            that.enable(that.options.enable);\n            that._userEvents = new kendo.UserEvents(that.element, {\n              allowSelection: !useTap,\n              fastTap: true,\n              press: function (e) {\n                that._activate(e);\n              },\n              release: function (e) {\n                highlightButton(that, e, false);\n\n                if (!useTap) {\n                  e.event.stopPropagation();\n                }\n              }\n            });\n\n            that._userEvents.bind(useTap ? \"tap\" : \"press\", function (e) {\n              that._release(e);\n            });\n\n            if (ANDROID3UP) {\n              that.element.on(\"move\", function (e) {\n                that._timeoutDeactivate(e);\n              });\n            }\n          },\n          destroy: function () {\n            Widget.fn.destroy.call(this);\n\n            this._userEvents.destroy();\n          },\n          events: [CLICK],\n          options: {\n            name: \"Button\",\n            icon: \"\",\n            style: \"\",\n            badge: \"\",\n            clickOn: \"up\",\n            enable: true\n          },\n          badge: function (value) {\n            var badge = this.badgeElement = this.badgeElement || createBadge(value).appendTo(this.element);\n\n            if (value || value === 0) {\n              badge.html(value);\n              return this;\n            }\n\n            if (value === false) {\n              badge.empty().remove();\n              this.badgeElement = false;\n              return this;\n            }\n\n            return badge.html();\n          },\n          enable: function (enable) {\n            var element = this.element;\n\n            if (typeof enable == \"undefined\") {\n              enable = true;\n            }\n\n            this.options.enable = enable;\n\n            if (enable) {\n              element.prop(DISABLED, false);\n            } else {\n              element.attr(DISABLED, DISABLED);\n            }\n\n            element.toggleClass(DISABLEDSTATE, !enable);\n          },\n          _timeoutDeactivate: function (e) {\n            if (!this.deactivateTimeoutID) {\n              this.deactivateTimeoutID = setTimeout(highlightButton, 500, this, e, false);\n            }\n          },\n          _activate: function (e) {\n            var activeElement = document.activeElement,\n                nodeName = activeElement ? activeElement.nodeName : \"\";\n\n            if (this.options.enable) {\n              highlightButton(this, e, true);\n\n              if (nodeName == \"INPUT\" || nodeName == \"TEXTAREA\") {\n                activeElement.blur(); // Hide device keyboard\n              }\n            }\n          },\n          _release: function (e) {\n            var that = this;\n\n            if (e.which > 1) {\n              return;\n            }\n\n            if (!that.options.enable) {\n              e.preventDefault();\n              return;\n            }\n\n            if (that.trigger(CLICK, {\n              target: $(e.target),\n              button: that.element\n            })) {\n              e.preventDefault();\n            }\n          },\n          _style: function () {\n            var style = this.options.style,\n                element = this.element,\n                styles;\n\n            if (style) {\n              styles = style.split(\" \");\n              $.each(styles, function () {\n                element.addClass(\"km-\" + this);\n              });\n            }\n          },\n          _wrap: function () {\n            var that = this,\n                icon = that.options.icon,\n                badge = that.options.badge,\n                iconSpan = '<span class=\"km-icon km-' + icon,\n                element = that.element.addClass(\"km-button\"),\n                span = element.children(\"span:not(.km-icon)\").addClass(\"km-text\"),\n                image = element.find(\"img\").addClass(\"km-image\");\n\n            if (!span[0] && element.html()) {\n              span = element.wrapInner('<span class=\"km-text\" />').children(\"span.km-text\");\n            }\n\n            if (!image[0] && icon) {\n              if (!span[0]) {\n                iconSpan += \" km-notext\";\n              }\n\n              that.iconElement = element.prepend($(iconSpan + '\" />'));\n            }\n\n            if (badge || badge === 0) {\n              that.badgeElement = createBadge(badge).appendTo(element);\n            }\n          }\n        });\n        var BackButton = Button.extend({\n          options: {\n            name: \"BackButton\",\n            style: \"back\"\n          },\n          init: function (element, options) {\n            var that = this;\n            Button.fn.init.call(that, element, options);\n\n            if (typeof that.element.attr(\"href\") === \"undefined\") {\n              that.element.attr(\"href\", \"#:back\");\n            }\n          }\n        });\n        var DetailButton = Button.extend({\n          options: {\n            name: \"DetailButton\",\n            style: \"\"\n          },\n          init: function (element, options) {\n            Button.fn.init.call(this, element, options);\n          },\n          _style: function () {\n            var style = this.options.style + \" detail\",\n                element = this.element;\n\n            if (style) {\n              var styles = style.split(\" \");\n              $.each(styles, function () {\n                element.addClass(\"km-\" + this);\n              });\n            }\n          },\n          _wrap: function () {\n            var that = this,\n                icon = that.options.icon,\n                iconSpan = '<span class=\"km-icon km-' + icon,\n                element = that.element,\n                span = element.children(\"span\"),\n                image = element.find(\"img\").addClass(\"km-image\");\n\n            if (!image[0] && icon) {\n              if (!span[0]) {\n                iconSpan += \" km-notext\";\n              }\n\n              element.prepend($(iconSpan + '\" />'));\n            }\n          }\n        });\n        ui.plugin(Button);\n        ui.plugin(BackButton);\n        ui.plugin(DetailButton);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}