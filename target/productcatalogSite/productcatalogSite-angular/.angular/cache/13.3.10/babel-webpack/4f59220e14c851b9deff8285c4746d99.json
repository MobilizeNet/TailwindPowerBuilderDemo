{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1355);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1112:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.userevents\");\n    /***/\n  },\n\n  /***/\n  1335:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.mobile.view\");\n    /***/\n  },\n\n  /***/\n  1355:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1335), __webpack_require__(1112)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"mobile.drawer\",\n        name: \"Drawer\",\n        category: \"mobile\",\n        description: \"The Kendo Mobile Drawer widget provides slide to reveal global application toolbox\",\n        depends: [\"mobile.view\", \"userevents\"]\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            mobile = kendo.mobile,\n            os = kendo.support.mobileOS,\n            Transition = kendo.effects.Transition,\n            roleSelector = kendo.roleSelector,\n            AXIS = \"x\",\n            ui = mobile.ui,\n            SWIPE_TO_OPEN = !(os.ios && os.majorVersion == 7 && !os.appMode),\n            BEFORE_SHOW = \"beforeShow\",\n            INIT = \"init\",\n            SHOW = \"show\",\n            HIDE = \"hide\",\n            AFTER_HIDE = \"afterHide\",\n            NULL_VIEW = {\n          enable: $.noop\n        };\n        var Drawer = ui.View.extend({\n          init: function (element, options) {\n            // move the drawer to the top, in order to hide it\n            $(element).parent().prepend(element);\n            mobile.ui.Widget.fn.init.call(this, element, options);\n\n            if (!this.options.$angular) {\n              this._layout();\n\n              this._scroller();\n            }\n\n            this._model();\n\n            var pane = this.element.closest(roleSelector(\"pane\")).data(\"kendoMobilePane\"),\n                userEvents;\n\n            if (pane) {\n              this.pane = pane;\n              this.pane.bind(\"viewShow\", function (e) {\n                drawer._viewShow(e);\n              });\n              this.pane.bind(\"sameViewRequested\", function () {\n                drawer.hide();\n              });\n              userEvents = this.userEvents = new kendo.UserEvents(pane.element, {\n                fastTap: true,\n                filter: roleSelector(\"view splitview\"),\n                allowSelection: true\n              });\n            } else {\n              this.currentView = NULL_VIEW;\n              var container = $(this.options.container);\n\n              if (!container) {\n                throw new Error(\"The drawer needs a container configuration option set.\");\n              }\n\n              userEvents = this.userEvents = new kendo.UserEvents(container, {\n                fastTap: true,\n                allowSelection: true\n              });\n\n              this._attachTransition(container);\n            }\n\n            var drawer = this;\n\n            var hide = function (e) {\n              if (drawer.visible) {\n                drawer.hide();\n                e.preventDefault();\n              }\n            };\n\n            if (this.options.swipeToOpen && SWIPE_TO_OPEN) {\n              userEvents.bind(\"press\", function () {\n                drawer.transition.cancel();\n              });\n              userEvents.bind(\"start\", function (e) {\n                drawer._start(e);\n              });\n              userEvents.bind(\"move\", function (e) {\n                drawer._update(e);\n              });\n              userEvents.bind(\"end\", function (e) {\n                drawer._end(e);\n              });\n              userEvents.bind(\"tap\", hide);\n            } else {\n              userEvents.bind(\"press\", hide);\n            }\n\n            this.leftPositioned = this.options.position === \"left\";\n            this.visible = false;\n            this.element.hide().addClass(\"km-drawer\").addClass(this.leftPositioned ? \"km-left-drawer\" : \"km-right-drawer\");\n            this.trigger(INIT);\n          },\n          options: {\n            name: \"Drawer\",\n            position: \"left\",\n            views: [],\n            swipeToOpenViews: [],\n            swipeToOpen: true,\n            title: \"\",\n            container: null\n          },\n          events: [BEFORE_SHOW, HIDE, AFTER_HIDE, INIT, SHOW],\n          show: function () {\n            if (this._activate()) {\n              this._show();\n            }\n          },\n          hide: function () {\n            if (!this.currentView) {\n              return;\n            }\n\n            this.currentView.enable();\n            Drawer.current = null;\n\n            this._moveViewTo(0);\n\n            this.trigger(HIDE, {\n              view: this\n            });\n          },\n          // Alias in order to support popover/modalview etc. interface\n          openFor: function () {\n            if (this.visible) {\n              this.hide();\n            } else {\n              this.show();\n            }\n          },\n          destroy: function () {\n            ui.View.fn.destroy.call(this);\n            this.userEvents.destroy();\n          },\n          _activate: function () {\n            if (this.visible) {\n              return true;\n            }\n\n            var visibleOnCurrentView = this._currentViewIncludedIn(this.options.views);\n\n            if (!visibleOnCurrentView || this.trigger(BEFORE_SHOW, {\n              view: this\n            })) {\n              return false;\n            }\n\n            this._setAsCurrent();\n\n            this.element.show();\n            this.trigger(SHOW, {\n              view: this\n            });\n\n            this._invokeNgController();\n\n            return true;\n          },\n          _currentViewIncludedIn: function (views) {\n            if (!this.pane || !views.length) {\n              return true;\n            }\n\n            var view = this.pane.view();\n            return $.inArray(view.id.replace('#', ''), views) > -1 || $.inArray(view.element.attr(\"id\"), views) > -1;\n          },\n          _show: function () {\n            this.currentView.enable(false);\n            this.visible = true;\n            var offset = this.element.width();\n\n            if (!this.leftPositioned) {\n              offset = -offset;\n            }\n\n            this._moveViewTo(offset);\n          },\n          _setAsCurrent: function () {\n            if (Drawer.last !== this) {\n              if (Drawer.last) {\n                Drawer.last.element.hide();\n              }\n\n              this.element.show();\n            }\n\n            Drawer.last = this;\n            Drawer.current = this;\n          },\n          _moveViewTo: function (offset) {\n            this.userEvents.cancel();\n            this.transition.moveTo({\n              location: offset,\n              duration: 400,\n              ease: Transition.easeOutExpo\n            });\n          },\n          _viewShow: function (e) {\n            if (this.currentView) {\n              this.currentView.enable();\n            }\n\n            if (this.currentView === e.view) {\n              this.hide();\n              return;\n            }\n\n            this.currentView = e.view;\n\n            this._attachTransition(e.view.element);\n          },\n          _attachTransition: function (element) {\n            var that = this,\n                movable = this.movable,\n                currentOffset = movable && movable.x;\n\n            if (this.transition) {\n              this.transition.cancel();\n              this.movable.moveAxis(\"x\", 0);\n            }\n\n            movable = this.movable = new kendo.ui.Movable(element);\n            this.transition = new Transition({\n              axis: AXIS,\n              movable: this.movable,\n              onEnd: function () {\n                if (movable[AXIS] === 0) {\n                  element[0].style.cssText = \"\";\n                  that.element.hide();\n                  that.trigger(AFTER_HIDE);\n                  that.visible = false;\n                }\n              }\n            });\n\n            if (currentOffset) {\n              element.addClass(\"k-fx-hidden\");\n              kendo.animationFrame(function () {\n                element.removeClass(\"k-fx-hidden\");\n                that.movable.moveAxis(AXIS, currentOffset);\n                that.hide();\n              });\n            }\n          },\n          _start: function (e) {\n            var userEvents = e.sender; // ignore non-horizontal swipes\n\n            if (Math.abs(e.x.velocity) < Math.abs(e.y.velocity) || kendo.triggeredByInput(e.event) || !this._currentViewIncludedIn(this.options.swipeToOpenViews)) {\n              userEvents.cancel();\n              return;\n            }\n\n            var leftPositioned = this.leftPositioned,\n                visible = this.visible,\n                canMoveLeft = leftPositioned && visible || !leftPositioned && !Drawer.current,\n                canMoveRight = !leftPositioned && visible || leftPositioned && !Drawer.current,\n                leftSwipe = e.x.velocity < 0;\n\n            if (canMoveLeft && leftSwipe || canMoveRight && !leftSwipe) {\n              if (this._activate()) {\n                userEvents.capture();\n                return;\n              }\n            }\n\n            userEvents.cancel();\n          },\n          _update: function (e) {\n            var movable = this.movable,\n                newPosition = movable.x + e.x.delta,\n                limitedPosition;\n\n            if (this.leftPositioned) {\n              limitedPosition = Math.min(Math.max(0, newPosition), this.element.width());\n            } else {\n              limitedPosition = Math.max(Math.min(0, newPosition), -this.element.width());\n            }\n\n            this.movable.moveAxis(AXIS, limitedPosition);\n            e.event.preventDefault();\n            e.event.stopPropagation();\n          },\n          _end: function (e) {\n            var velocity = e.x.velocity,\n                pastHalf = Math.abs(this.movable.x) > this.element.width() / 2,\n                velocityThreshold = 0.8,\n                shouldShow;\n\n            if (this.leftPositioned) {\n              shouldShow = velocity > -velocityThreshold && (velocity > velocityThreshold || pastHalf);\n            } else {\n              shouldShow = velocity < velocityThreshold && (velocity < -velocityThreshold || pastHalf);\n            }\n\n            if (shouldShow) {\n              this._show();\n            } else {\n              this.hide();\n            }\n          }\n        });\n        ui.plugin(Drawer);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}