{"ast":null,"code":"import { drawing as draw } from '@progress/kendo-drawing';\nimport { ChartElement, Box, rectToBox } from '../../core';\n\nclass LegendLayout extends ChartElement {\n  constructor(options, chartService) {\n    super(options);\n    this.chartService = chartService;\n  }\n\n  render() {\n    const {\n      children,\n      options\n    } = this;\n    const vertical = options.vertical;\n    this.visual = new draw.Layout(null, {\n      spacing: vertical ? 0 : options.spacing,\n      lineSpacing: vertical ? options.spacing : 0,\n      orientation: vertical ? \"vertical\" : \"horizontal\",\n      reverse: options.rtl,\n      alignItems: vertical ? \"start\" : \"center\"\n    });\n\n    for (let idx = 0; idx < children.length; idx++) {\n      let legendItem = children[idx];\n      legendItem.reflow(new Box());\n      legendItem.renderVisual();\n    }\n  }\n\n  reflow(box) {\n    this.visual.rect(box.toRect());\n    this.visual.reflow();\n    const bbox = this.visual.clippedBBox();\n\n    if (bbox) {\n      this.box = rectToBox(bbox);\n    } else {\n      this.box = new Box();\n    }\n  }\n\n  renderVisual() {\n    this.addVisual();\n  }\n\n  createVisual() {}\n\n}\n\nexport default LegendLayout;","map":null,"metadata":{},"sourceType":"module"}