{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1018);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  982:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../main\");\n    /***/\n  },\n\n  /***/\n  1011:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./resizing-utils\");\n    /***/\n  },\n\n  /***/\n  1012:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./table-element-resizing\");\n    /***/\n  },\n\n  /***/\n  1018:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(982), __webpack_require__(1011), __webpack_require__(1012)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      (function (kendo, undefined) {\n        var math = window.Math;\n        var abs = math.abs;\n        var $ = kendo.jQuery;\n        var extend = $.extend;\n        var Editor = kendo.ui.editor;\n        var TableElementResizing = Editor.TableElementResizing;\n        var ResizingUtils = Editor.ResizingUtils;\n        var getScrollBarWidth = ResizingUtils.getScrollBarWidth;\n        var constrain = ResizingUtils.constrain;\n        var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n        var inPercentages = ResizingUtils.inPercentages;\n        var toPercentages = ResizingUtils.toPercentages;\n        var toPixels = ResizingUtils.toPixels;\n        var outerHeight = kendo._outerHeight;\n        var NS = \".kendoEditorRowResizing\";\n        var RESIZE_HANDLE_CLASS = \"k-row-resize-handle\";\n        var RESIZE_HANDLE_MARKER_WRAPPER_CLASS = \"k-row-resize-marker-wrapper\";\n        var RESIZE_MARKER_CLASS = \"k-row-resize-marker\";\n        var BODY = \"body\";\n        var TR = \"tr\";\n        var TBODY = \"tbody\";\n        var THEAD = \"thead\";\n        var COMMA = \",\";\n        var HEIGHT = \"height\";\n        var RowResizing = TableElementResizing.extend({\n          options: {\n            tags: [TR],\n            min: 20,\n            rootElement: null,\n            eventNamespace: NS,\n            rtl: false,\n            handle: {\n              dataAttribute: \"row\",\n              width: 0,\n              height: 10,\n              classNames: {\n                handle: RESIZE_HANDLE_CLASS,\n                marker: RESIZE_MARKER_CLASS\n              },\n              template: '<div class=\"k-row-resize-handle-wrapper\" unselectable=\"on\" contenteditable=\"false\">' + '<div class=\"' + RESIZE_HANDLE_CLASS + '\">' + '<div class=\"' + RESIZE_HANDLE_MARKER_WRAPPER_CLASS + '\">' + '<div class=\"' + RESIZE_MARKER_CLASS + '\"></div>' + '</div>' + '</div>' + '</div>'\n            }\n          },\n          elementBorderHovered: function (tableElement, e) {\n            var that = this;\n            var handleHeight = that.options.handle[HEIGHT];\n            var borderOffset = tableElement.offset().top + outerHeight(tableElement);\n            var mousePosition = e.clientY + $(tableElement[0].ownerDocument).scrollTop();\n\n            if (mousePosition > borderOffset - handleHeight && mousePosition < borderOffset + handleHeight) {\n              return true;\n            } else {\n              return false;\n            }\n          },\n          setResizeHandlePosition: function (row) {\n            var that = this;\n            var options = that.options;\n            var handleHeight = options.handle[HEIGHT];\n            var rootElement = $(options.rootElement);\n            var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n            var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n            var scrollBarWidth = options.rtl ? getScrollBarWidth(rootElement[0]) : 0;\n            var rowOffsetLeft = row.offset().left - (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) - parseFloat(row.css(\"marginLeft\"));\n            var rowOffsetTop = row.offset().top - (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) - parseFloat(row.css(\"marginTop\"));\n            var browser = kendo.support.browser;\n\n            if (options.rtl && (browser.mozilla || browser.webkit && browser.version >= 85)) {\n              scrollLeftOffset = scrollLeftOffset * -1;\n            }\n\n            that.resizeHandle.css({\n              top: rowOffsetTop + outerHeight(row) + scrollTopOffset - handleHeight / 2,\n              left: rowOffsetLeft + (scrollLeftOffset - scrollBarWidth),\n              position: \"absolute\"\n            });\n          },\n          setResizeHandleDimensions: function () {\n            var that = this;\n            var innerTableElement = $(that.element.tHead || that.element.tBodies[0]);\n            that.resizeHandle.css({\n              width: innerTableElement.width(),\n              height: that.options.handle[HEIGHT]\n            });\n          },\n          setResizeHandleDragPosition: function (e) {\n            var that = this;\n            var options = that.options;\n            var min = options.min;\n            var tableHead = $(that.element).children(THEAD);\n            var tableBody = $(that.element).children(TBODY);\n            var topInnerTableElement = tableHead.length > 0 ? tableHead : tableBody;\n            var resizeHandle = $(that.resizeHandle);\n            var row = $(e.currentTarget).data(options.handle.dataAttribute);\n            var $row = $(row);\n            var rootElement = $(options.rootElement);\n            var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n            var tableTopOffset = topInnerTableElement.offset().top - (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) - parseFloat(topInnerTableElement.css(\"marginTop\"));\n            var rowOffsetTop = $row.offset().top - (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) - parseFloat($row.css(\"marginTop\"));\n            var resizeHandleOffsetTop = resizeHandle.offset().top - (Math.max(0, rootElement.offset().top) + parseFloat(rootElement.css(\"borderTopWidth\"))) - parseFloat(resizeHandle.css(\"marginTop\"));\n            var handleOffset = constrain({\n              value: resizeHandleOffsetTop + scrollTopOffset + e.y.delta,\n              min: rowOffsetTop + scrollTopOffset + min,\n              max: tableTopOffset + outerHeight(tableHead) + outerHeight(tableBody) + scrollTopOffset - options.handle[HEIGHT] - min\n            });\n            resizeHandle.css({\n              top: handleOffset\n            });\n          },\n          resize: function (e) {\n            var that = this;\n            var options = that.options;\n            var row = $(e.currentTarget).data(options.handle.dataAttribute);\n            var currentRowHeight = outerHeight($(row));\n            var element = $(that.element);\n            var initialTableHeight = outerHeight(element);\n            var tableHead = element.children(THEAD);\n            var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n            var tableBody = element.children(TBODY);\n            var tableBodyHeight = tableBody.height();\n            var initialStyleHeight = row.style[HEIGHT];\n            var newRowHeight = constrain({\n              value: currentRowHeight + e.y.initialDelta,\n              min: options.min,\n              max: abs(tableHeadHeight + tableBodyHeight - options.min)\n            });\n\n            that._setRowsHeightInPixels();\n\n            row.style[HEIGHT] = toPixels(newRowHeight);\n\n            that._setTableHeight(initialTableHeight + (newRowHeight - currentRowHeight));\n\n            if (inPercentages(initialStyleHeight)) {\n              //resize rows in percentages as late as possible to prevent incorrect precision calculations\n              that._setRowsHeightInPercentages();\n            }\n          },\n          _setRowsHeightInPixels: function () {\n            var that = this;\n            var rows = $(that.element).children(TBODY + COMMA + THEAD).children(TR);\n            var length = rows.length;\n            var currentRowsHeights = rows.map(function () {\n              return outerHeight($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n              rows[i].style[HEIGHT] = toPixels(currentRowsHeights[i]);\n            }\n          },\n          _setRowsHeightInPercentages: function () {\n            var that = this;\n            var tableHead = $(that.element).children(THEAD);\n            var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n            var tableBody = $(that.element).children(TBODY);\n            var tableBodyHeight = tableBody.height();\n            var rows = $(that.element).children(THEAD + COMMA + TBODY).children(TR);\n            var length = rows.length;\n            var currentRowsHeights = rows.map(function () {\n              return outerHeight($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n              rows[i].style[HEIGHT] = toPercentages(calculatePercentageRatio(currentRowsHeights[i], tableHeadHeight + tableBodyHeight));\n            }\n          },\n          _setTableHeight: function (newHeight) {\n            var element = this.element;\n\n            if (inPercentages(element.style[HEIGHT])) {\n              element.style[HEIGHT] = toPercentages(calculatePercentageRatio(newHeight, $(element).parent().height()));\n            } else {\n              element.style[HEIGHT] = toPixels(newHeight);\n            }\n          }\n        });\n\n        RowResizing.create = function (editor) {\n          TableElementResizing.create(editor, {\n            name: \"rowResizing\",\n            type: RowResizing,\n            eventNamespace: NS\n          });\n        };\n\n        RowResizing.dispose = function (editor) {\n          TableElementResizing.dispose(editor, {\n            eventNamespace: NS\n          });\n        };\n\n        extend(Editor, {\n          RowResizing: RowResizing\n        });\n      })(window.kendo);\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}