{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(930);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  925:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../location\");\n    /***/\n  },\n\n  /***/\n  930:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(931), __webpack_require__(925), __webpack_require__(932), __webpack_require__(933)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      (function ($, undefined) {\n        // Imports ================================================================\n        var doc = document,\n            math = Math,\n            indexOf = $.inArray,\n            kendo = window.kendo,\n            Class = kendo.Class,\n            DataSource = kendo.data.DataSource,\n            Tooltip = kendo.ui.Tooltip,\n            dataviz = kendo.dataviz,\n            deepExtend = kendo.deepExtend,\n            map = dataviz.map,\n            Location = map.Location,\n            Layer = map.layers.Layer; // Implementation =========================================================\n\n        var MarkerLayer = Layer.extend({\n          init: function (map, options) {\n            Layer.fn.init.call(this, map, options);\n            this._markerClick = this._markerClick.bind(this);\n            this.element.on(\"click\", \".k-marker\", this._markerClick);\n            this.items = [];\n\n            this._initDataSource();\n          },\n          destroy: function () {\n            Layer.fn.destroy.call(this);\n            this.element.off(\"click\", \".k-marker\", this._markerClick);\n            this.dataSource.unbind(\"change\", this._dataChange);\n            this.clear();\n          },\n          options: {\n            zIndex: 1000,\n            autoBind: true,\n            dataSource: {},\n            locationField: \"location\",\n            titleField: \"title\"\n          },\n          add: function (arg) {\n            if (Array.isArray(arg)) {\n              for (var i = 0; i < arg.length; i++) {\n                this._addOne(arg[i]);\n              }\n            } else {\n              return this._addOne(arg);\n            }\n          },\n          remove: function (marker) {\n            marker.destroy();\n            var index = indexOf(marker, this.items);\n\n            if (index > -1) {\n              this.items.splice(index, 1);\n            }\n          },\n          clear: function () {\n            for (var i = 0; i < this.items.length; i++) {\n              this.items[i].destroy();\n            }\n\n            this.items = [];\n          },\n          update: function (marker) {\n            var loc = marker.location();\n\n            if (loc) {\n              marker.showAt(this.map.locationToView(loc));\n              var args = {\n                marker: marker,\n                layer: this\n              };\n              this.map.trigger(\"markerActivate\", args);\n            }\n          },\n          _reset: function () {\n            Layer.fn._reset.call(this);\n\n            var items = this.items;\n\n            for (var i = 0; i < items.length; i++) {\n              this.update(items[i]);\n            }\n          },\n          bind: function (options, dataItem) {\n            var marker = map.Marker.create(options, this.options);\n            marker.dataItem = dataItem;\n            var args = {\n              marker: marker,\n              layer: this\n            };\n            var cancelled = this.map.trigger(\"markerCreated\", args);\n\n            if (!cancelled) {\n              this.add(marker);\n              return marker;\n            }\n          },\n          setDataSource: function (dataSource) {\n            if (this.dataSource) {\n              this.dataSource.unbind(\"change\", this._dataChange);\n            }\n\n            this.dataSource = kendo.data.DataSource.create(dataSource);\n            this.dataSource.bind(\"change\", this._dataChange);\n\n            if (this.options.autoBind) {\n              this.dataSource.fetch();\n            }\n          },\n          _addOne: function (arg) {\n            var marker = Marker.create(arg, this.options);\n            marker.addTo(this);\n            return marker;\n          },\n          _initDataSource: function () {\n            var dsOptions = this.options.dataSource;\n            this._dataChange = this._dataChange.bind(this);\n            this.dataSource = DataSource.create(dsOptions).bind(\"change\", this._dataChange);\n\n            if (dsOptions && this.options.autoBind) {\n              this.dataSource.fetch();\n            }\n          },\n          _dataChange: function (e) {\n            this._load(e.sender.view());\n          },\n          _load: function (data) {\n            this._data = data;\n            this.clear();\n            var getLocation = kendo.getter(this.options.locationField);\n            var getTitle = kendo.getter(this.options.titleField);\n\n            for (var i = 0; i < data.length; i++) {\n              var dataItem = data[i];\n              this.bind({\n                location: getLocation(dataItem),\n                title: getTitle(dataItem)\n              }, dataItem);\n            }\n          },\n          _markerClick: function (e) {\n            var args = {\n              marker: $(e.target).data(\"kendoMarker\"),\n              layer: this\n            };\n            this.map.trigger(\"markerClick\", args);\n          }\n        });\n        var Marker = Class.extend({\n          init: function (options) {\n            this.options = options || {};\n          },\n          addTo: function (parent) {\n            this.layer = parent.markers || parent;\n            this.layer.items.push(this);\n            this.layer.update(this);\n          },\n          location: function (value) {\n            if (value) {\n              this.options.location = Location.create(value).toArray();\n\n              if (this.layer) {\n                this.layer.update(this);\n              }\n\n              return this;\n            } else {\n              return Location.create(this.options.location);\n            }\n          },\n          showAt: function (point) {\n            this.render();\n            this.element.css({\n              left: math.round(point.x),\n              top: math.round(point.y)\n            });\n\n            if (this.tooltip && this.tooltip.popup) {\n              // TODO: Expose popup/tooltip updatePosition? method\n              this.tooltip.popup._position();\n            }\n          },\n          hide: function () {\n            if (this.element) {\n              this.element.remove();\n              this.element = null;\n            }\n\n            if (this.tooltip) {\n              this.tooltip.destroy();\n              this.tooltip = null;\n            }\n          },\n          destroy: function () {\n            this.layer = null;\n            this.hide();\n          },\n          render: function () {\n            if (!this.element) {\n              var options = this.options;\n              var layer = this.layer;\n              this.element = $(doc.createElement(\"span\")).addClass(\"k-marker k-icon k-i-marker-\" + kendo.toHyphens(options.shape || \"pin\")).attr(\"title\", options.title).attr(options.attributes || {}).data(\"kendoMarker\", this).css(\"zIndex\", options.zIndex);\n\n              if (layer) {\n                layer.element.append(this.element);\n              }\n\n              this.renderTooltip();\n            }\n          },\n          renderTooltip: function () {\n            var marker = this;\n            var title = marker.options.title;\n            var options = marker.options.tooltip || {};\n\n            if (options && Tooltip) {\n              var template = options.template;\n\n              if (template) {\n                var contentTemplate = kendo.template(template);\n\n                options.content = function (e) {\n                  e.location = marker.location();\n                  e.marker = marker;\n                  return contentTemplate(e);\n                };\n              }\n\n              if (title || options.content || options.contentUrl) {\n                this.tooltip = new Tooltip(this.element, options);\n                this.tooltip.marker = this;\n              }\n            }\n          }\n        });\n\n        Marker.create = function (arg, defaults) {\n          if (arg instanceof Marker) {\n            return arg;\n          }\n\n          return new Marker(deepExtend({}, defaults, arg));\n        }; // Exports ================================================================\n\n\n        deepExtend(dataviz, {\n          map: {\n            layers: {\n              marker: MarkerLayer,\n              MarkerLayer: MarkerLayer\n            },\n            Marker: Marker\n          }\n        });\n      })(window.kendo.jQuery);\n    }, __webpack_require__(3));\n    /***/\n\n  },\n\n  /***/\n  931:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./base\");\n    /***/\n  },\n\n  /***/\n  932:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../../../kendo.data\");\n    /***/\n  },\n\n  /***/\n  933:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../../../kendo.tooltip\");\n    /***/\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}