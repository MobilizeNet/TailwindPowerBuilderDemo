{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1354);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1051:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.core\");\n    /***/\n  },\n\n  /***/\n  1354:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1051)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"mobile.collapsible\",\n        name: \"Collapsible\",\n        category: \"mobile\",\n        description: \"The Kendo mobile Collapsible widget provides ability for creating collapsible blocks of content.\",\n        depends: [\"core\", \"userevents\"]\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            ui = kendo.mobile.ui,\n            Widget = ui.Widget,\n            COLLAPSIBLE = \"km-collapsible\",\n            HEADER = \"km-collapsible-header\",\n            CONTENT = \"km-collapsible-content\",\n            INSET = \"km-collapsibleinset\",\n            HEADER_WRAPPER = \"<div data-role='collapsible-header' class='\" + HEADER + \"'></div>\",\n            CONTENT_WRAPPER = \"<div data-role='collapsible-content' class='\" + CONTENT + \"'></div>\",\n            COLLAPSED = \"km-collapsed\",\n            EXPANDED = \"km-expanded\",\n            ANIMATED = \"km-animated\",\n            //icon position\n        LEFT = \"left\",\n            //events\n        EXAPND = \"expand\",\n            COLLAPSE = \"collapse\";\n        var Collapsible = Widget.extend({\n          init: function (element, options) {\n            var that = this,\n                container = $(element);\n            Widget.fn.init.call(that, container, options);\n            container.addClass(COLLAPSIBLE);\n\n            that._buildHeader();\n\n            that.content = container.children().not(that.header).wrapAll(CONTENT_WRAPPER).parent();\n            that._userEvents = new kendo.UserEvents(that.header, {\n              fastTap: true,\n              tap: function () {\n                that.toggle();\n              }\n            });\n            container.addClass(that.options.collapsed ? COLLAPSED : EXPANDED);\n\n            if (that.options.inset) {\n              container.addClass(INSET);\n            }\n\n            if (that.options.animation) {\n              that.content.addClass(ANIMATED);\n              that.content.height(0);\n\n              if (that.options.collapsed) {\n                that.content.hide();\n              }\n            } else if (that.options.collapsed) {\n              that.content.hide();\n            }\n          },\n          events: [EXAPND, COLLAPSE],\n          options: {\n            name: \"Collapsible\",\n            collapsed: true,\n            collapseIcon: \"arrow-n\",\n            expandIcon: \"arrow-s\",\n            iconPosition: LEFT,\n            animation: true,\n            inset: false\n          },\n          destroy: function () {\n            Widget.fn.destroy.call(this);\n\n            this._userEvents.destroy();\n          },\n          expand: function (instant) {\n            var icon = this.options.collapseIcon,\n                content = this.content,\n                ios = kendo.support.mobileOS.ios;\n\n            if (!this.trigger(EXAPND)) {\n              if (icon) {\n                this.header.find(\".km-icon\").removeClass().addClass(\"km-icon km-\" + icon);\n              }\n\n              this.element.removeClass(COLLAPSED).addClass(EXPANDED);\n\n              if (this.options.animation && !instant) {\n                content.off(\"transitionend\");\n                content.show();\n\n                if (ios) {\n                  content.removeClass(ANIMATED);\n                } //required to get the height of the content on iOS\n\n\n                content.height(this._getContentHeight());\n\n                if (ios) {\n                  content.addClass(ANIMATED);\n                }\n\n                kendo.resize(content);\n              } else {\n                content.show();\n              }\n            }\n          },\n          collapse: function (instant) {\n            var icon = this.options.expandIcon,\n                content = this.content;\n\n            if (!this.trigger(COLLAPSE)) {\n              if (icon) {\n                this.header.find(\".km-icon\").removeClass().addClass(\"km-icon km-\" + icon);\n              }\n\n              this.element.removeClass(EXPANDED).addClass(COLLAPSED);\n\n              if (this.options.animation && !instant) {\n                content.one(\"transitionend\", function () {\n                  content.hide();\n                });\n                content.height(0);\n              } else {\n                content.hide();\n              }\n            }\n          },\n          toggle: function (instant) {\n            if (this.isCollapsed()) {\n              this.expand(instant);\n            } else {\n              this.collapse(instant);\n            }\n          },\n          isCollapsed: function () {\n            return this.element.hasClass(COLLAPSED);\n          },\n          resize: function () {\n            if (!this.isCollapsed() && this.options.animation) {\n              this.content.height(this._getContentHeight());\n            }\n          },\n          _buildHeader: function () {\n            var header = this.element.children(\":header\").wrapAll(HEADER_WRAPPER),\n                iconSpan = $('<span class=\"km-icon\"/>'),\n                icon = this.options.collapsed ? this.options.expandIcon : this.options.collapseIcon,\n                iconPosition = this.options.iconPosition;\n\n            if (icon) {\n              header.prepend(iconSpan);\n              iconSpan.addClass(\"km-\" + icon);\n            }\n\n            this.header = header.parent();\n            this.header.addClass(\"km-icon-\" + iconPosition);\n          },\n          _getContentHeight: function () {\n            var style = this.content.attr(\"style\"),\n                height;\n            this.content.css({\n              position: 'absolute',\n              visibility: 'hidden',\n              height: \"auto\"\n            });\n            height = this.content.height();\n            this.content.attr(\"style\", style ? style : \"\");\n            return height;\n          }\n        });\n        ui.plugin(Collapsible);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}