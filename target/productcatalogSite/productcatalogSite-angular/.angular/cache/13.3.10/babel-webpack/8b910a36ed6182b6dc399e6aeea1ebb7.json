{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1740);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  20:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../kendo.core\");\n    /***/\n  },\n\n  /***/\n  1740:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(20)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            Observable = kendo.Observable,\n            extend = $.extend,\n            DOT = \".\",\n            NS = DOT + \"kendoKeboardManager\",\n            KEYDOWN = \"keydown\",\n            ACTION = \"action\";\n        var Keyboard = Observable.extend({\n          init: function (element) {\n            var that = this;\n            that.register = {};\n            that.element = element;\n\n            that._attachEvents();\n\n            Observable.fn.init.call(that);\n          },\n          registerShortcut: function (selector, shortcut, options) {\n            var that = this;\n\n            if (!that.register[selector]) {\n              that.register[selector] = [];\n            }\n\n            if (shortcut.keyCode && isNaN(shortcut.keyCode) && shortcut.keyCode.toUpperCase) {\n              shortcut.keyCode = shortcut.keyCode.toUpperCase().charCodeAt(0);\n            }\n\n            that.register[selector].push({\n              shortcut: extend({\n                keyCode: null,\n                ctrlKey: false,\n                shiftKey: false,\n                altKey: false\n              }, shortcut),\n              options: options\n            });\n          },\n          _attachEvents: function () {\n            var that = this,\n                handler = that._handler.bind(that);\n\n            that.element.on(KEYDOWN + NS, handler);\n          },\n          _handler: function (ev) {\n            var that = this,\n                target = $(ev.target),\n                shortcuts,\n                action;\n\n            for (var selector in that.register) {\n              if (target.is(selector)) {\n                shortcuts = that.register[selector];\n                action = that._getAction(shortcuts, ev);\n\n                if (action) {\n                  that._trigger(action, ev);\n\n                  break;\n                }\n              }\n            }\n          },\n          _trigger: function (action, ev) {\n            var that = this,\n                target = $(ev.target);\n\n            if (action.command) {\n              that.trigger(ACTION, extend({}, ev, {\n                command: action.command,\n                options: extend({}, {\n                  target: target\n                }, action.options)\n              }));\n            }\n\n            if (action.handler) {\n              action.handler(ev);\n            }\n          },\n          _getAction: function (shortcuts, ev) {\n            var that = this;\n\n            for (var i = 0; i < shortcuts.length; i++) {\n              if (that._compareShortcut(shortcuts[i].shortcut, ev)) {\n                return shortcuts[i].options;\n              }\n            }\n          },\n          _compareShortcut: function (shortcut, ev) {\n            var that = this;\n\n            for (var key in shortcut) {\n              var result = false;\n\n              switch (key) {\n                case \"ctrlKey\":\n                  result = shortcut[key] !== that._getShortcutModifier(ev);\n                  break;\n\n                default:\n                  result = shortcut[key] !== ev[key];\n                  break;\n              }\n\n              if (result) {\n                return false;\n              }\n            }\n\n            return true;\n          },\n          _getShortcutModifier: function (ev) {\n            var mac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n            return mac ? ev.metaKey : ev.ctrlKey;\n          },\n          destroy: function () {\n            var that = this;\n            that.element.off(NS);\n          }\n        });\n        extend(kendo.ui.taskboard, {\n          KeyboardManager: Keyboard\n        });\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}