{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1360);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1333:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.mobile.loader\");\n    /***/\n  },\n\n  /***/\n  1335:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.mobile.view\");\n    /***/\n  },\n\n  /***/\n  1360:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1335), __webpack_require__(1333)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"mobile.pane\",\n        name: \"Pane\",\n        category: \"mobile\",\n        description: \"Mobile Pane\",\n        depends: [\"mobile.view\", \"mobile.loader\"],\n        hidden: true\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            mobile = kendo.mobile,\n            roleSelector = kendo.roleSelector,\n            ui = mobile.ui,\n            Widget = ui.Widget,\n            ViewEngine = mobile.ViewEngine,\n            View = ui.View,\n            Loader = mobile.ui.Loader,\n            EXTERNAL = \"external\",\n            HREF = \"href\",\n            DUMMY_HREF = \"#!\",\n            NAVIGATE = \"navigate\",\n            VIEW_SHOW = \"viewShow\",\n            SAME_VIEW_REQUESTED = \"sameViewRequested\",\n            OS = kendo.support.mobileOS,\n            SKIP_TRANSITION_ON_BACK_BUTTON = OS.ios && !OS.appMode && OS.flatVersion >= 700,\n            WIDGET_RELS = /popover|actionsheet|modalview|drawer/,\n            BACK = \"#:back\",\n            attrValue = kendo.attrValue;\n        var Pane = Widget.extend({\n          init: function (element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            options = that.options;\n            element = that.element;\n            element.addClass(\"km-pane\");\n\n            if (that.options.collapsible) {\n              element.addClass(\"km-collapsible-pane\");\n            }\n\n            this.history = [];\n\n            this.historyCallback = function (url, params, backButtonPressed) {\n              var transition = that.transition;\n              that.transition = null; // swiping back in iOS leaves the app in a very broken state if we perform a transition\n\n              if (SKIP_TRANSITION_ON_BACK_BUTTON && backButtonPressed) {\n                transition = \"none\";\n              }\n\n              return that.viewEngine.showView(url, transition, params);\n            };\n\n            this._historyNavigate = function (url) {\n              if (url === BACK) {\n                if (that.history.length === 1) {\n                  return;\n                }\n\n                that.history.pop();\n                url = that.history[that.history.length - 1];\n              } else {\n                that.history.push(url);\n              }\n\n              that.historyCallback(url, kendo.parseQueryStringParams(url));\n            };\n\n            this._historyReplace = function (url) {\n              var params = kendo.parseQueryStringParams(url);\n              that.history[that.history.length - 1] = url;\n              that.historyCallback(url, params);\n            };\n\n            that.loader = new Loader(element, {\n              loading: that.options.loading\n            });\n            that.viewEngine = new ViewEngine({\n              container: element,\n              transition: options.transition,\n              modelScope: options.modelScope,\n              rootNeeded: !options.initial,\n              serverNavigation: options.serverNavigation,\n              remoteViewURLPrefix: options.root || \"\",\n              layout: options.layout,\n              $angular: options.$angular,\n              loader: that.loader,\n              showStart: function () {\n                that.loader.transition();\n                that.closeActiveDialogs();\n              },\n              after: function () {\n                that.loader.transitionDone();\n              },\n              viewShow: function (e) {\n                that.trigger(VIEW_SHOW, e);\n              },\n              loadStart: function () {\n                that.loader.show();\n              },\n              loadComplete: function () {\n                that.loader.hide();\n              },\n              sameViewRequested: function () {\n                that.trigger(SAME_VIEW_REQUESTED);\n              },\n              viewTypeDetermined: function (e) {\n                if (!e.remote || !that.options.serverNavigation) {\n                  that.trigger(NAVIGATE, {\n                    url: e.url\n                  });\n                }\n              }\n            });\n\n            this._setPortraitWidth();\n\n            kendo.onResize(function () {\n              that._setPortraitWidth();\n            });\n\n            that._setupAppLinks();\n          },\n          closeActiveDialogs: function () {\n            var dialogs = this.element.find(roleSelector(\"actionsheet popover modalview\")).filter(\":visible\");\n            dialogs.each(function () {\n              kendo.widgetInstance($(this), ui).close();\n            });\n          },\n          navigateToInitial: function () {\n            var initial = this.options.initial;\n\n            if (initial) {\n              this.navigate(initial);\n            }\n\n            return initial;\n          },\n          options: {\n            name: \"Pane\",\n            portraitWidth: \"\",\n            transition: \"\",\n            layout: \"\",\n            collapsible: false,\n            initial: null,\n            modelScope: window,\n            loading: \"<h1>Loading...</h1>\"\n          },\n          events: [NAVIGATE, VIEW_SHOW, SAME_VIEW_REQUESTED],\n          append: function (html) {\n            return this.viewEngine.append(html);\n          },\n          destroy: function () {\n            Widget.fn.destroy.call(this);\n            this.viewEngine.destroy();\n            this.userEvents.destroy();\n          },\n          navigate: function (url, transition) {\n            if (url instanceof View) {\n              url = url.id;\n            }\n\n            this.transition = transition;\n\n            this._historyNavigate(url);\n          },\n          replace: function (url, transition) {\n            if (url instanceof View) {\n              url = url.id;\n            }\n\n            this.transition = transition;\n\n            this._historyReplace(url);\n          },\n          bindToRouter: function (router) {\n            var that = this,\n                history = this.history,\n                viewEngine = this.viewEngine;\n            router.bind(\"init\", function (e) {\n              var url = e.url,\n                  attrUrl = router.pushState ? url : \"/\";\n              viewEngine.rootView.attr(kendo.attr(\"url\"), attrUrl); // if current is set, then this means that the pane has navigated to a given view - we need to update the router accordingly.\n\n              var length = history.length;\n\n              if (url === \"/\" && length) {\n                router.navigate(history[length - 1], true);\n                e.preventDefault(); // prevents from executing routeMissing, by default\n              }\n            });\n            router.bind(\"routeMissing\", function (e) {\n              if (!that.historyCallback(e.url, e.params, e.backButtonPressed)) {\n                e.preventDefault();\n              }\n            });\n            router.bind(\"same\", function () {\n              that.trigger(SAME_VIEW_REQUESTED);\n            });\n\n            that._historyNavigate = function (url) {\n              router.navigate(url);\n            };\n\n            that._historyReplace = function (url) {\n              router.replace(url);\n            };\n          },\n          hideLoading: function () {\n            this.loader.hide();\n          },\n          showLoading: function () {\n            this.loader.show();\n          },\n          changeLoadingMessage: function (message) {\n            this.loader.changeMessage(message);\n          },\n          view: function () {\n            return this.viewEngine.view();\n          },\n          _setPortraitWidth: function () {\n            var width,\n                portraitWidth = this.options.portraitWidth;\n\n            if (portraitWidth) {\n              width = kendo.mobile.application.element.is(\".km-vertical\") ? portraitWidth : \"auto\";\n              this.element.css(\"width\", width);\n            }\n          },\n          _setupAppLinks: function () {\n            var that = this,\n                linkRoles = \"tab\",\n                pressedButtonSelector = \"[data-\" + kendo.ns + \"navigate-on-press]\",\n                buttonSelectors = $.map([\"button\", \"backbutton\", \"detailbutton\", \"listview-link\"], function (role) {\n              return roleSelector(role) + \":not(\" + pressedButtonSelector + \")\";\n            }).join(\",\");\n            this.element.handler(this).on(\"down\", roleSelector(linkRoles) + \",\" + pressedButtonSelector, \"_mouseup\").on(\"click\", roleSelector(linkRoles) + \",\" + buttonSelectors + \",\" + pressedButtonSelector, \"_appLinkClick\");\n            this.userEvents = new kendo.UserEvents(this.element, {\n              fastTap: true,\n              filter: buttonSelectors,\n              tap: function (e) {\n                e.event.currentTarget = e.touch.currentTarget;\n\n                that._mouseup(e.event);\n              }\n            }); // remove the ms-touch-action added by the user events, breaks native scrolling in WP8\n\n            this.element.css('-ms-touch-action', '');\n          },\n          _appLinkClick: function (e) {\n            var href = $(e.currentTarget).attr(\"href\");\n            var remote = href && href[0] !== \"#\" && this.options.serverNavigation;\n\n            if (!remote && attrValue($(e.currentTarget), \"rel\") != EXTERNAL) {\n              e.preventDefault();\n            }\n          },\n          _mouseup: function (e) {\n            if (e.which > 1 || e.isDefaultPrevented()) {\n              return;\n            }\n\n            var pane = this,\n                link = $(e.currentTarget),\n                transition = attrValue(link, \"transition\"),\n                rel = attrValue(link, \"rel\") || \"\",\n                target = attrValue(link, \"target\"),\n                href = link.attr(HREF),\n                delayedTouchEnd = SKIP_TRANSITION_ON_BACK_BUTTON && link[0].offsetHeight === 0,\n                remote = href && href[0] !== \"#\" && this.options.serverNavigation;\n\n            if (delayedTouchEnd || remote || rel === EXTERNAL || typeof href === \"undefined\" || href === DUMMY_HREF) {\n              return;\n            } // Prevent iOS address bar progress display for in app navigation\n\n\n            link.attr(HREF, DUMMY_HREF);\n            setTimeout(function () {\n              link.attr(HREF, href);\n            });\n\n            if (rel.match(WIDGET_RELS)) {\n              kendo.widgetInstance($(href), ui).openFor(link); // if propagation is not stopped and actionsheet is opened from tabstrip,\n              // the actionsheet is closed immediately.\n\n              if (rel === \"actionsheet\" || rel === \"drawer\") {\n                e.stopPropagation();\n              }\n            } else {\n              if (target === \"_top\") {\n                pane = mobile.application.pane;\n              } else if (target) {\n                pane = $(\"#\" + target).data(\"kendoMobilePane\");\n              }\n\n              pane.navigate(href, transition);\n            }\n\n            e.preventDefault();\n          }\n        });\n\n        Pane.wrap = function (element) {\n          if (!element.is(roleSelector(\"view\"))) {\n            element = element.wrap('<div data-' + kendo.ns + 'role=\"view\" data-stretch=\"true\"></div>').parent();\n          }\n\n          var paneContainer = element.wrap('<div class=\"km-pane-wrapper\"><div></div></div>').parent(),\n              pane = new Pane(paneContainer);\n          pane.navigate(\"\");\n          return pane;\n        };\n\n        ui.plugin(Pane);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}