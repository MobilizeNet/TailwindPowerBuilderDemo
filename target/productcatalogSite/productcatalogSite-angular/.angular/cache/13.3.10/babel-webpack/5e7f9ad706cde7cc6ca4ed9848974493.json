{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1726);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  20:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../kendo.core\");\n    /***/\n  },\n\n  /***/\n  1726:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(20), __webpack_require__(1727)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      (function (kendo) {\n        var $ = kendo.jQuery;\n        var outerWidth = kendo._outerWidth;\n        var DOT = \".\";\n        var EMPTYCHAR = \" \";\n        var sheetsBarClassNames = {\n          sheetsBarWrapper: \"k-widget k-header\",\n          sheetsBarSheetsWrapper: \"k-tabstrip k-floatwrap k-tabstrip-bottom\",\n          sheetsBarActive: \"k-spreadsheet-sheets-bar-active\",\n          sheetsBarInactive: \"k-spreadsheet-sheets-bar-inactive\",\n          sheetsBarAdd: \"k-spreadsheet-sheets-bar-add\",\n          sheetsBarRemove: \"k-spreadsheet-sheets-remove\",\n          sheetsBarItems: \"k-spreadsheet-sheets-items\",\n          sheetsBarEditor: \"k-spreadsheet-sheets-editor\",\n          sheetsBarScrollable: \"k-tabstrip-scrollable\",\n          sheetsBarNext: \"k-tabstrip-next\",\n          sheetsBarPrev: \"k-tabstrip-prev\",\n          sheetsBarKItem: \"k-item k-tabstrip-item\",\n          sheetsBarKActive: \"k-state-active k-state-tab-on-top\",\n          sheetsBarKTextbox: \"k-textbox\",\n          sheetsBarKLink: \"k-link\",\n          sheetsBarKIcon: \"k-icon\",\n          sheetsBarKFontIcon: \"k-icon\",\n          sheetsBarKButton: \"k-button k-icon-button\",\n          sheetsBarKButtonDefaults: \"k-button-md k-rounded-md k-button-solid k-button-solid-base\",\n          sheetsBarKButtonBare: \"k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n          sheetsBarKArrowW: \"k-i-arrow-60-left\",\n          sheetsBarKArrowE: \"k-i-arrow-60-right\",\n          sheetsBarKReset: \"k-reset k-tabstrip-items\",\n          sheetsBarKIconX: \"k-i-close\",\n          sheetsBarKSprite: \"k-sprite\",\n          sheetsBarKIconPlus: \"k-i-plus\",\n          sheetsBarHintWrapper: \"k-widget k-tabstrip k-tabstrip-bottom k-spreadsheet-sheets-items-hint\",\n          sheetsBarKResetItems: \"k-reset k-tabstrip-items\"\n        };\n        var SheetsBar = kendo.ui.Widget.extend({\n          init: function (element, options) {\n            var classNames = SheetsBar.classNames;\n            kendo.ui.Widget.call(this, element, options);\n            element = this.element;\n            element.addClass(classNames.sheetsBarWrapper);\n            this._openDialog = options.openDialog;\n            this._tree = new kendo.dom.Tree(element[0]);\n\n            this._tree.render([this._addButton(), this._createSheetsWrapper([])]);\n\n            this._toggleScrollEvents(true);\n\n            this._createSortable();\n\n            this._sortable.bind(\"start\", this._onSheetReorderStart.bind(this));\n\n            this._sortable.bind(\"end\", this._onSheetReorderEnd.bind(this));\n\n            element.on(\"click\", DOT + classNames.sheetsBarRemove, this._onSheetRemove.bind(this));\n            element.on(\"click\", \"li\", this._onSheetSelect.bind(this));\n            element.on(\"dblclick\", \"li\" + DOT + classNames.sheetsBarActive, this._createEditor.bind(this));\n            element.on(\"click\", DOT + classNames.sheetsBarAdd, this._onAddSelect.bind(this));\n          },\n          options: {\n            name: \"SheetsBar\",\n            scrollable: {\n              distance: 200\n            }\n          },\n          events: [\"select\", \"reorder\", \"rename\"],\n          _createEditor: function () {\n            if (this._editor) {\n              return;\n            }\n\n            this._renderSheets(this._sheets, this._selectedIndex, true);\n\n            this._editor = this.element.find(kendo.format(\"input{0}{1}\", DOT, SheetsBar.classNames.sheetsBarEditor)).trigger(\"focus\").on(\"keydown\", this._onEditorKeydown.bind(this)).on(\"blur\", this._onEditorBlur.bind(this));\n          },\n          _destroyEditor: function (canceled) {\n            var newSheetName = canceled ? null : this._editor.val();\n\n            this._editor.off();\n\n            this._editor = null;\n\n            this._renderSheets(this._sheets, this._selectedIndex, false);\n\n            this._onSheetRename(newSheetName);\n          },\n          renderSheets: function (sheets, selectedIndex) {\n            if (!sheets || selectedIndex < 0) {\n              return;\n            }\n\n            this._renderSheets(sheets, selectedIndex, false);\n          },\n          _renderSheets: function (sheets, selectedIndex, isInEditMode) {\n            var that = this;\n            var classNames = SheetsBar.classNames;\n            that._isRtl = kendo.support.isRtl(that.element);\n            that._sheets = sheets;\n            that._selectedIndex = selectedIndex;\n\n            that._renderHtml(isInEditMode, true);\n\n            if (!that._scrollableAllowed()) {\n              return;\n            }\n\n            var sheetsWrapper = that._sheetsWrapper();\n\n            sheetsWrapper.addClass(classNames.sheetsBarScrollable + EMPTYCHAR + classNames.sheetsBarSheetsWrapper);\n\n            that._toggleScrollButtons();\n          },\n          _toggleScrollButtons: function (toggle) {\n            var that = this;\n\n            var ul = that._sheetsGroup();\n\n            var wrapper = that._sheetsWrapper();\n\n            var scrollLeft = kendo.scrollLeft(ul);\n            var prev = wrapper.find(DOT + SheetsBar.classNames.sheetsBarPrev);\n            var next = wrapper.find(DOT + SheetsBar.classNames.sheetsBarNext);\n\n            if (toggle === false) {\n              prev.addClass('k-disabled');\n              next.addClass('k-disabled');\n            } else {\n              prev.toggleClass('k-disabled', !(that._isRtl ? scrollLeft < ul[0].scrollWidth - ul[0].offsetWidth - 1 : scrollLeft !== 0));\n              next.toggleClass('k-disabled', !(that._isRtl ? scrollLeft !== 0 : scrollLeft < ul[0].scrollWidth - ul[0].offsetWidth - 1));\n            }\n          },\n          _toggleScrollEvents: function (toggle) {\n            var that = this;\n            var classNames = SheetsBar.classNames;\n            var options = that.options;\n            var scrollPrevButton;\n            var scrollNextButton;\n\n            var sheetsWrapper = that._sheetsWrapper();\n\n            scrollPrevButton = sheetsWrapper.find(DOT + classNames.sheetsBarPrev);\n            scrollNextButton = sheetsWrapper.find(DOT + classNames.sheetsBarNext);\n\n            if (toggle) {\n              scrollPrevButton.on(\"mousedown\", function () {\n                that._nowScrollingSheets = true;\n\n                that._scrollSheetsByDelta(options.scrollable.distance * (that._isRtl ? 1 : -1));\n              });\n              scrollNextButton.on(\"mousedown\", function () {\n                that._nowScrollingSheets = true;\n\n                that._scrollSheetsByDelta(options.scrollable.distance * (that._isRtl ? -1 : 1));\n              });\n              scrollPrevButton.add(scrollNextButton).on(\"mouseup\", function () {\n                that._nowScrollingSheets = false;\n              });\n            } else {\n              scrollPrevButton.off();\n              scrollNextButton.off();\n            }\n          },\n          _renderHtml: function (isInEditMode, renderScrollButtons) {\n            var idx;\n            var sheetElements = [];\n            var dom = kendo.dom;\n            var element = dom.element;\n            var sheets = this._sheets;\n            var selectedIndex = this._selectedIndex;\n            var classNames = SheetsBar.classNames;\n\n            for (idx = 0; idx < sheets.length; idx++) {\n              var sheet = sheets[idx];\n              var isSelectedSheet = idx === selectedIndex;\n              var attr = {\n                className: classNames.sheetsBarKItem + EMPTYCHAR\n              };\n              var elementContent = [];\n\n              if (isSelectedSheet) {\n                attr.className += classNames.sheetsBarKActive + EMPTYCHAR + classNames.sheetsBarActive;\n              } else {\n                attr.className += classNames.sheetsBarInactive;\n              }\n\n              if (isSelectedSheet && isInEditMode) {\n                elementContent.push(element(\"input\", {\n                  type: \"text\",\n                  value: sheet.name(),\n                  className: classNames.sheetsBarKTextbox + EMPTYCHAR + classNames.sheetsBarEditor,\n                  maxlength: 50\n                }, []));\n              } else {\n                elementContent.push(element(\"span\", {\n                  className: classNames.sheetsBarKLink,\n                  title: sheet.name()\n                }, [dom.text(sheet.name())]));\n\n                if (sheets.length > 1) {\n                  var deleteIcon = element(\"span\", {\n                    className: classNames.sheetsBarKIcon + EMPTYCHAR + classNames.sheetsBarKFontIcon + EMPTYCHAR + classNames.sheetsBarKIconX\n                  }, []);\n                  elementContent.push(element(\"span\", {\n                    className: classNames.sheetsBarKLink + EMPTYCHAR + classNames.sheetsBarRemove,\n                    'data-type': 'remove'\n                  }, [deleteIcon]));\n                }\n              }\n\n              sheetElements.push(element(\"li\", attr, elementContent));\n            }\n\n            this._tree.render([this._addButton(), this._createSheetsWrapper(sheetElements, renderScrollButtons)]);\n          },\n          _createSheetsWrapper: function (sheetElements, renderScrollButtons) {\n            var element = kendo.dom.element;\n            var classNames = SheetsBar.classNames;\n            var itemsWrapper = element('div', {\n              className: 'k-tabstrip-items-wrapper k-hstack'\n            });\n            var childrenElements = [null, element(\"ul\", {\n              className: classNames.sheetsBarKReset\n            }, sheetElements), null];\n            renderScrollButtons = true;\n\n            if (renderScrollButtons) {\n              var baseButtonClass = classNames.sheetsBarKButton + EMPTYCHAR + classNames.sheetsBarKButtonBare + EMPTYCHAR;\n              childrenElements[0] = element(\"span\", {\n                className: baseButtonClass + classNames.sheetsBarPrev\n              }, [element(\"span\", {\n                className: \"k-button-icon\" + EMPTYCHAR + classNames.sheetsBarKIcon + EMPTYCHAR + classNames.sheetsBarKArrowW\n              }, [])]);\n              childrenElements[2] = element(\"span\", {\n                className: baseButtonClass + classNames.sheetsBarNext\n              }, [element(\"span\", {\n                className: \"k-button-icon\" + EMPTYCHAR + classNames.sheetsBarKIcon + EMPTYCHAR + classNames.sheetsBarKArrowE\n              }, [])]);\n            }\n\n            itemsWrapper.children = childrenElements;\n            return element(\"div\", {\n              className: classNames.sheetsBarItems\n            }, [itemsWrapper]);\n          },\n          _createSortable: function () {\n            var classNames = SheetsBar.classNames;\n            this._sortable = new kendo.ui.Sortable(this.element, {\n              filter: kendo.format(\"ul li.{0},ul li.{1}\", classNames.sheetsBarActive, classNames.sheetsBarInactive),\n              container: DOT + classNames.sheetsBarItems,\n              axis: \"x\",\n              animation: false,\n              ignore: \"input\",\n              end: function () {\n                if (this.draggable.hint) {\n                  this.draggable.hint.remove();\n                }\n              },\n              hint: function (element) {\n                var hint = $(element).clone();\n                return hint.wrap(\"<div class='\" + classNames.sheetsBarHintWrapper + \"'><ul class='\" + classNames.sheetsBarKResetItems + \"'></ul></div>\").closest(\"div\");\n              }\n            });\n          },\n          _onEditorKeydown: function (e) {\n            if (this._editor) {\n              if (e.which === 13) {\n                this._destroyEditor();\n              }\n\n              if (e.which === 27) {\n                this._destroyEditor(true);\n              }\n            }\n          },\n          _onEditorBlur: function () {\n            if (this._editor) {\n              this._destroyEditor();\n            }\n          },\n          _onSheetReorderEnd: function (e) {\n            e.preventDefault();\n            this.trigger(\"reorder\", {\n              oldIndex: e.oldIndex,\n              newIndex: e.newIndex\n            });\n          },\n          _onSheetReorderStart: function (e) {\n            if (this._editor) {\n              e.preventDefault();\n            }\n          },\n          _onSheetRemove: function (e) {\n            var removedSheetName = $(e.target).closest(\"li\").text();\n\n            if (this._editor) {\n              this._destroyEditor();\n            }\n\n            var closeCallback = function (e) {\n              var dlg = e.sender;\n\n              if (dlg.isConfirmed()) {\n                this.trigger(\"remove\", {\n                  name: removedSheetName,\n                  confirmation: true\n                });\n              }\n            }.bind(this);\n\n            this._openDialog(\"confirmation\", {\n              close: closeCallback\n            });\n          },\n          _onSheetSelect: function (e) {\n            var selectedSheetText = $(e.target).text();\n\n            if ($(e.target).is(DOT + SheetsBar.classNames.sheetsBarEditor) || !selectedSheetText) {\n              e.preventDefault();\n              return;\n            }\n\n            if (this._editor) {\n              this._destroyEditor();\n            }\n\n            this._scrollSheetsToItem($(e.target).closest(\"li\"));\n\n            this.trigger(\"select\", {\n              name: selectedSheetText,\n              isAddButton: false\n            });\n          },\n          _onSheetRename: function (newSheetName) {\n            if (this._sheets[this._selectedIndex].name() === newSheetName || newSheetName === null) {\n              return;\n            }\n\n            this.trigger(\"rename\", {\n              name: newSheetName,\n              sheetIndex: this._selectedIndex\n            });\n          },\n          _onAddSelect: function () {\n            this.trigger(\"select\", {\n              isAddButton: true\n            });\n          },\n          _addButton: function () {\n            var element = kendo.dom.element;\n            var classNames = SheetsBar.classNames;\n            return element(\"a\", {\n              className: classNames.sheetsBarAdd + EMPTYCHAR + classNames.sheetsBarKButton + EMPTYCHAR + classNames.sheetsBarKButtonDefaults\n            }, [element(\"span\", {\n              className: \"k-button-icon\" + EMPTYCHAR + classNames.sheetsBarKIcon + EMPTYCHAR + classNames.sheetsBarKFontIcon + EMPTYCHAR + classNames.sheetsBarKIconPlus\n            }, [])]);\n          },\n          destroy: function () {\n            this._sortable.destroy();\n          },\n          _scrollableAllowed: function () {\n            var options = this.options;\n            return options.scrollable && !isNaN(options.scrollable.distance);\n          },\n          _scrollSheetsToItem: function (item) {\n            var that = this;\n\n            var sheetsGroup = that._sheetsGroup();\n\n            var currentScrollOffset = kendo.scrollLeft(sheetsGroup);\n            var itemWidth = outerWidth(item);\n            var itemOffset = that._isRtl ? item.position().left : item.position().left - sheetsGroup.children().first().position().left;\n            var sheetsGroupWidth = sheetsGroup[0].offsetWidth;\n            var itemPosition;\n\n            if (that._isRtl) {\n              if (itemOffset < 0) {\n                itemPosition = currentScrollOffset + itemOffset - (sheetsGroupWidth - currentScrollOffset);\n              } else if (itemOffset + itemWidth > sheetsGroupWidth) {\n                itemPosition = currentScrollOffset + itemOffset - itemWidth;\n              }\n            } else {\n              if (currentScrollOffset + sheetsGroupWidth < itemOffset + itemWidth) {\n                itemPosition = itemOffset + itemWidth - sheetsGroupWidth;\n              } else if (currentScrollOffset > itemOffset) {\n                itemPosition = itemOffset;\n              }\n            }\n\n            sheetsGroup.finish().animate({\n              \"scrollLeft\": itemPosition\n            }, \"fast\", \"linear\", function () {\n              that._toggleScrollButtons();\n            });\n          },\n          _sheetsGroup: function () {\n            return this._sheetsWrapper().find(\"ul\");\n          },\n          _sheetsWrapper: function () {\n            return this.element.find(DOT + SheetsBar.classNames.sheetsBarItems);\n          },\n          _scrollSheetsByDelta: function (delta) {\n            var that = this;\n\n            var sheetsGroup = that._sheetsGroup();\n\n            var scrLeft = kendo.scrollLeft(sheetsGroup);\n            sheetsGroup.finish().animate({\n              \"scrollLeft\": scrLeft + delta\n            }, \"fast\", \"linear\", function () {\n              if (that._nowScrollingSheets) {\n                that._scrollSheetsByDelta(delta);\n              } else {\n                that._toggleScrollButtons();\n              }\n            });\n          }\n        });\n        kendo.spreadsheet.SheetsBar = SheetsBar;\n        $.extend(true, SheetsBar, {\n          classNames: sheetsBarClassNames\n        });\n      })(window.kendo);\n    }, __webpack_require__(3));\n    /***/\n\n  },\n\n  /***/\n  1727:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../kendo.sortable\");\n    /***/\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}