{"ast":null,"code":"import { geometry, drawing } from '@progress/kendo-drawing';\nimport { interpolateValue, setDefaultOptions } from '../../common';\nimport { ARROW_POINTER, LINEAR_SPEED, LINEAR } from '../constants';\n\nclass ArrowLinearPointerAnimation extends drawing.Animation {\n  setup() {\n    const options = this.options;\n    const {\n      margin,\n      from,\n      to,\n      vertical\n    } = options;\n    const axis = vertical ? \"x1\" : \"y1\";\n\n    if (options.mirror === vertical) {\n      from[axis] -= margin;\n      to[axis] -= margin;\n    } else {\n      from[axis] += margin;\n      to[axis] += margin;\n    }\n\n    const fromScale = this.fromScale = new geometry.Point(from.x1, from.y1);\n    const toScale = this.toScale = new geometry.Point(to.x1, to.y1);\n\n    if (options.duration !== 0) {\n      options.duration = Math.max(fromScale.distanceTo(toScale) / options.duration * 1000, 1);\n    }\n  }\n\n  step(pos) {\n    const translateX = interpolateValue(this.fromScale.x, this.toScale.x, pos);\n    const translateY = interpolateValue(this.fromScale.y, this.toScale.y, pos);\n    this.element.transform(geometry.transform().translate(translateX, translateY));\n  }\n\n}\n\nsetDefaultOptions(ArrowLinearPointerAnimation, {\n  easing: LINEAR,\n  duration: LINEAR_SPEED\n});\ndrawing.AnimationFactory.current.register(ARROW_POINTER, ArrowLinearPointerAnimation);\nexport default ArrowLinearPointerAnimation;","map":null,"metadata":{},"sourceType":"module"}