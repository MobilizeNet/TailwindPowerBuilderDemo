{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1409);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1051:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.core\");\n    /***/\n  },\n\n  /***/\n  1136:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.draganddrop\");\n    /***/\n  },\n\n  /***/\n  1409:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1051), __webpack_require__(1136)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"reorderable\",\n        name: \"Reorderable\",\n        category: \"framework\",\n        depends: [\"core\", \"draganddrop\"],\n        advanced: true\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            getOffset = kendo.getOffset,\n            Widget = kendo.ui.Widget,\n            CHANGE = \"change\",\n            KREORDERABLE = \"k-reorderable\";\n        var Reorderable = Widget.extend({\n          init: function (element, options) {\n            var that = this,\n                draggable,\n                group = kendo.guid() + \"-reorderable\";\n            Widget.fn.init.call(that, element, options);\n            element = that.element.addClass(KREORDERABLE);\n            options = that.options;\n            that.draggable = draggable = options.draggable || new kendo.ui.Draggable(element, {\n              group: group,\n              autoScroll: true,\n              filter: options.filter,\n              hint: options.hint\n            });\n\n            if (!that.options.dropFilter) {\n              that.options.dropFilter = draggable.options.filter;\n            }\n\n            that.reorderDropCue = that.options.reorderDropCue;\n            element.find(options.dropFilter).kendoDropTarget({\n              group: draggable.options.group,\n              dragenter: function (e) {\n                var externalDraggableInstance = that._externalDraggable(e);\n\n                if (!that._draggable && !externalDraggableInstance) {\n                  return;\n                }\n\n                if (externalDraggableInstance) {\n                  that._handleExternalDraggable(externalDraggableInstance);\n                }\n\n                var dropTarget = this.element,\n                    offset;\n                var denied = that._isPartOfSortable(that._draggable) ? !that._dropTargetAllowed(dropTarget) || that._isLastDraggable() : false;\n                that.toggleHintClass(e.draggable.hint, denied);\n\n                if (!denied) {\n                  offset = getOffset(dropTarget);\n                  var cueOffset = {\n                    top: offset.top,\n                    left: offset.left\n                  };\n                  var isHorizontal = options.orientation === \"horizontal\";\n\n                  if (!options.smartPosition || options.inSameContainer && !options.inSameContainer({\n                    source: dropTarget,\n                    target: that._draggable,\n                    sourceIndex: that._index(dropTarget),\n                    targetIndex: that._index(that._draggable)\n                  })) {\n                    that._dropTarget = dropTarget;\n                  } else {\n                    if (that._index(dropTarget) > that._index(that._draggable) && options.smartPosition) {\n                      cueOffset[isHorizontal ? \"left\" : \"top\"] += isHorizontal ? outerWidth(dropTarget) : outerHeight(dropTarget);\n                    }\n                  }\n\n                  that.reorderDropCue.css({\n                    height: outerHeight(dropTarget),\n                    top: cueOffset.top,\n                    left: cueOffset.left,\n                    zIndex: 19000\n                  }).appendTo(document.body);\n\n                  if (options.positionDropCue) {\n                    options.positionDropCue(that.reorderDropCue, dropTarget);\n                  }\n                }\n              },\n              dragleave: function (e) {\n                that.toggleHintClass(e.draggable.hint, true);\n                that.reorderDropCue.remove();\n                that._dropTarget = null;\n              },\n              drop: function () {\n                that._dropTarget = null;\n\n                if (!that._draggable) {\n                  return;\n                }\n\n                var dropTarget = this.element;\n                var draggable = that._draggable;\n\n                var dropIndex = that._index(dropTarget);\n\n                var isAfter = that.options.orientation === \"horizontal\" ? getOffset(that.reorderDropCue).left > getOffset(dropTarget).left : getOffset(that.reorderDropCue).top > getOffset(dropTarget).top;\n                dropIndex = isAfter ? dropIndex + 1 : dropIndex;\n\n                if (that._dropTargetAllowed(dropTarget) && !that._isLastDraggable() && that._index(draggable) !== dropIndex) {\n                  that.trigger(CHANGE, {\n                    element: that._draggable,\n                    target: dropTarget,\n                    oldIndex: that._index(draggable),\n                    newIndex: that._index(dropTarget),\n                    position: isAfter ? \"after\" : \"before\"\n                  });\n                }\n\n                if (that.reorderDropCue) {\n                  that.reorderDropCue.remove();\n                }\n              }\n            });\n            draggable.bind([\"dragcancel\", \"dragend\", \"dragstart\", \"drag\"], {\n              dragcancel: that._dragcancel.bind(that),\n              dragend: that._dragend.bind(that),\n              dragstart: that._dragstart.bind(that),\n              drag: that._drag.bind(that)\n            });\n          },\n          options: {\n            name: \"Reorderable\",\n            filter: \"*\",\n            orientation: \"horizontal\",\n            deniedIcon: \"k-i-cancel\",\n            allowIcon: \"k-i-plus\",\n            reorderDropCue: $('<div class=\"k-reorder-cue\"></div></div>'),\n            smartPosition: true\n          },\n          events: [CHANGE],\n          toggleHintClass: function (hint, denied) {\n            var that = this,\n                options = that.options;\n            hint = $(hint);\n\n            if (denied) {\n              hint.find(\".k-drag-status\").removeClass(options.allowIcon).addClass(options.deniedIcon);\n            } else {\n              hint.find(\".k-drag-status\").removeClass(options.deniedIcon).addClass(options.allowIcon);\n            }\n          },\n          _handleExternalDraggable: function (draggable) {\n            var that = this;\n            that._dragcancelHandler = that._dragcancel.bind(that);\n            that._dragendHandler = that._dragend.bind(that);\n            that._dragstartHandler = that._dragstart.bind(that);\n            that._dragHandler = that._drag.bind(that);\n            that._draggable = draggable.currentTarget.closest(that.options.dropFilter);\n            that._draggableInstance = draggable;\n            that._elements = that.element.find(that.options.dropFilter);\n            draggable.bind([\"dragcancel\", \"dragend\", \"dragstart\", \"drag\"], {\n              dragcancel: that._dragcancelHandler,\n              dragend: that._dragendHandler,\n              dragstart: that._dragstartHandler,\n              drag: that._dragHandler\n            });\n          },\n          _dragcancel: function () {\n            var that = this;\n\n            if (that._draggableInstance && (that._dragcancelHandler || that._dragendHandler || that._dragstartHandler || that._dragHandler)) {\n              that._draggableInstance.unbind({\n                dragcancel: that._dragcancelHandler,\n                dragend: that._dragendHandler,\n                dragstart: that._dragstartHandler,\n                drag: that._dragHandler\n              });\n            }\n\n            if (that.reorderDropCue) {\n              that.reorderDropCue.remove();\n            }\n\n            that._draggable = null;\n            that._elements = null;\n          },\n          _dragend: function () {\n            var that = this;\n\n            if (that._draggableInstance && (that._dragcancelHandler || that._dragendHandler || that._dragstartHandler || that._dragHandler)) {\n              that._draggableInstance.unbind({\n                dragcancel: that._dragcancelHandler,\n                dragend: that._dragendHandler,\n                dragstart: that._dragstartHandler,\n                drag: that._dragHandler\n              });\n            }\n\n            if (that.reorderDropCue) {\n              that.reorderDropCue.remove();\n            }\n\n            that._draggable = null;\n            that._elements = null;\n          },\n          _dragstart: function (e) {\n            var that = this;\n            var target = $(e.currentTarget);\n            that._draggable = target.is(that.options.dropFilter) ? target : target.closest(that.options.dropFilter);\n            that._elements = that.element.find(that.options.dropFilter);\n          },\n          _drag: function (e) {\n            var that = this,\n                dropIndex,\n                sourceIndex,\n                denied,\n                offset = {},\n                target = $(e.currentTarget).closest(that.options.dropFilter);\n\n            if (!that._dropTarget || that.options.smartPosition && e.sender.hint.find(\".k-drag-status\").hasClass(\"k-i-cancel\")) {\n              return;\n            }\n\n            dropIndex = that._index(that._dropTarget);\n            sourceIndex = that._index(target);\n            sourceIndex = dropIndex > sourceIndex ? sourceIndex + 1 : sourceIndex;\n\n            if (that.options.orientation === \"horizontal\") {\n              var dropStartOffset = getOffset(that._dropTarget).left;\n              var width = outerWidth(that._dropTarget);\n\n              if (e.pageX > dropStartOffset + width / 2) {\n                offset.left = dropStartOffset + width;\n                dropIndex += 1;\n              } else {\n                offset.left = dropStartOffset;\n              }\n            } else {\n              var dropStartTop = getOffset(that._dropTarget).top;\n              var height = outerHeight(that._dropTarget);\n\n              if (e.pageY > dropStartTop + height / 2) {\n                offset.top = dropStartTop + height;\n                dropIndex += 1;\n              } else {\n                offset.top = dropStartTop;\n              }\n            }\n\n            that.reorderDropCue.css(offset);\n\n            if (that.options.positionDropCue) {\n              that.options.positionDropCue(that.reorderDropCue, that._dropTarget);\n            }\n\n            if (that._isPartOfSortable(target)) {\n              denied = sourceIndex === dropIndex || that.options.dragOverContainers && !that.options.dragOverContainers(sourceIndex, dropIndex);\n              that.toggleHintClass(e.sender.hint, denied);\n            }\n          },\n          _isPartOfSortable: function (draggable) {\n            var that = this;\n            return that._elements.index(draggable) >= 0;\n          },\n          _externalDraggable: function (e) {\n            var that = this,\n                options = that.options;\n\n            if (!that._draggable && options.externalDraggable) {\n              return options.externalDraggable(e);\n            }\n\n            return null;\n          },\n          _isLastDraggable: function () {\n            var inSameContainer = this.options.inSameContainer,\n                draggable = this._draggable[0],\n                elements = this._elements.get(),\n                found = false,\n                item;\n\n            if (!inSameContainer) {\n              return false;\n            }\n\n            while (!found && elements.length > 0) {\n              item = elements.pop();\n              found = draggable !== item && inSameContainer({\n                source: draggable,\n                target: item,\n                sourceIndex: this._index(draggable),\n                targetIndex: this._index(item)\n              });\n            }\n\n            return !found;\n          },\n          _dropTargetAllowed: function (dropTarget) {\n            var inSameContainer = this.options.inSameContainer,\n                dragOverContainers = this.options.dragOverContainers,\n                draggable = this._draggable;\n\n            if (draggable[0] === dropTarget[0]) {\n              return false;\n            }\n\n            if (!inSameContainer || !dragOverContainers) {\n              return true;\n            }\n\n            if (inSameContainer({\n              source: draggable,\n              target: dropTarget,\n              sourceIndex: this._index(draggable),\n              targetIndex: this._index(dropTarget)\n            })) {\n              return true;\n            }\n\n            return dragOverContainers(this._index(draggable), this._index(dropTarget));\n          },\n          _index: function (element) {\n            return this._elements.index(element);\n          },\n          destroy: function () {\n            var that = this;\n            Widget.fn.destroy.call(that);\n            that.element.find(that.options.dropFilter).each(function () {\n              var item = $(this);\n\n              if (item.data(\"kendoDropTarget\")) {\n                item.data(\"kendoDropTarget\").destroy();\n              }\n            });\n\n            if (that.draggable) {\n              that.draggable.destroy();\n              that.draggable.element = that.draggable = null;\n            }\n\n            that.reorderDropCue.remove();\n            that.elements = that.reorderDropCue = that._elements = that._draggable = null;\n          }\n        });\n        kendo.ui.plugin(Reorderable);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}