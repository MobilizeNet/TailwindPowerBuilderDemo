{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1368);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1051:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.core\");\n    /***/\n  },\n\n  /***/\n  1080:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.mobile.scroller\");\n    /***/\n  },\n\n  /***/\n  1132:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.fx\");\n    /***/\n  },\n\n  /***/\n  1134:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.view\");\n    /***/\n  },\n\n  /***/\n  1368:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1051), __webpack_require__(1132), __webpack_require__(1080), __webpack_require__(1134)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"mobile.view\",\n        name: \"View\",\n        category: \"mobile\",\n        description: \"Mobile View\",\n        depends: [\"core\", \"fx\", \"mobile.scroller\", \"view\"],\n        hidden: true\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            mobile = kendo.mobile,\n            ui = mobile.ui,\n            attr = kendo.attr,\n            Widget = ui.Widget,\n            ViewClone = kendo.ViewClone,\n            INIT = \"init\",\n            UI_OVERLAY = '<div style=\"height: 100%; width: 100%; position: absolute; top: 0; left: 0; z-index: 20000; display: none\"></div>',\n            BEFORE_SHOW = \"beforeShow\",\n            SHOW = \"show\",\n            AFTER_SHOW = \"afterShow\",\n            BEFORE_HIDE = \"beforeHide\",\n            TRANSITION_END = \"transitionEnd\",\n            TRANSITION_START = \"transitionStart\",\n            HIDE = \"hide\",\n            DESTROY = \"destroy\",\n            attrValue = kendo.attrValue,\n            roleSelector = kendo.roleSelector,\n            directiveSelector = kendo.directiveSelector,\n            compileMobileDirective = kendo.compileMobileDirective;\n\n        function initPopOvers(element) {\n          var popovers = element.find(roleSelector(\"popover\")),\n              idx,\n              length,\n              roles = ui.roles;\n\n          for (idx = 0, length = popovers.length; idx < length; idx++) {\n            kendo.initWidget(popovers[idx], {}, roles);\n          }\n        }\n\n        function preventScrollIfNotInput(e) {\n          if (!kendo.triggeredByInput(e)) {\n            e.preventDefault();\n          }\n        }\n\n        var View = Widget.extend({\n          init: function (element, options) {\n            Widget.fn.init.call(this, element, options);\n            this.params = {};\n            $.extend(this, options);\n            this.transition = this.transition || this.defaultTransition;\n\n            this._id();\n\n            if (!this.options.$angular) {\n              this._layout();\n\n              this._overlay();\n\n              this._scroller();\n\n              this._model();\n            } else {\n              this._overlay();\n            }\n          },\n          events: [INIT, BEFORE_SHOW, SHOW, AFTER_SHOW, BEFORE_HIDE, HIDE, DESTROY, TRANSITION_START, TRANSITION_END],\n          options: {\n            name: \"View\",\n            title: \"\",\n            layout: null,\n            getLayout: $.noop,\n            reload: false,\n            transition: \"\",\n            defaultTransition: \"\",\n            useNativeScrolling: false,\n            stretch: false,\n            zoom: false,\n            model: null,\n            modelScope: window,\n            scroller: {},\n            initWidgets: true\n          },\n          enable: function (enable) {\n            if (typeof enable == \"undefined\") {\n              enable = true;\n            }\n\n            if (enable) {\n              this.overlay.hide();\n            } else {\n              this.overlay.show();\n            }\n          },\n          destroy: function () {\n            if (this.layout) {\n              this.layout.detach(this);\n            }\n\n            this.trigger(DESTROY);\n            Widget.fn.destroy.call(this);\n\n            if (this.scroller) {\n              this.scroller.destroy();\n            }\n\n            if (this.options.$angular) {\n              this.element.scope().$destroy();\n            }\n\n            kendo.destroy(this.element);\n          },\n          purge: function () {\n            this.destroy();\n            this.element.remove();\n          },\n          triggerBeforeShow: function () {\n            if (this.trigger(BEFORE_SHOW, {\n              view: this\n            })) {\n              return false;\n            }\n\n            return true;\n          },\n          triggerBeforeHide: function () {\n            if (this.trigger(BEFORE_HIDE, {\n              view: this\n            })) {\n              return false;\n            }\n\n            return true;\n          },\n          showStart: function () {\n            var element = this.element;\n            element.css(\"display\", \"\");\n\n            if (!this.inited) {\n              this.inited = true;\n              this.trigger(INIT, {\n                view: this\n              });\n            } else {\n              // skip the initial controller update\n              this._invokeNgController();\n            }\n\n            if (this.layout) {\n              this.layout.attach(this);\n            }\n\n            this._padIfNativeScrolling();\n\n            this.trigger(SHOW, {\n              view: this\n            });\n            kendo.resize(element);\n          },\n          showEnd: function () {\n            this.trigger(AFTER_SHOW, {\n              view: this\n            });\n\n            this._padIfNativeScrolling();\n          },\n          hideEnd: function () {\n            var that = this;\n            that.element.hide();\n            that.trigger(HIDE, {\n              view: that\n            });\n\n            if (that.layout) {\n              that.layout.trigger(HIDE, {\n                view: that,\n                layout: that.layout\n              });\n            }\n          },\n          beforeTransition: function (type) {\n            this.trigger(TRANSITION_START, {\n              type: type\n            });\n          },\n          afterTransition: function (type) {\n            this.trigger(TRANSITION_END, {\n              type: type\n            });\n          },\n          _padIfNativeScrolling: function () {\n            if (mobile.appLevelNativeScrolling()) {\n              var isAndroid = kendo.support.mobileOS && kendo.support.mobileOS.android,\n                  skin = mobile.application.skin() || \"\",\n                  isAndroidForced = mobile.application.os.android || skin.indexOf(\"android\") > -1,\n                  hasPlatformIndependentSkin = skin === \"flat\" || skin.indexOf(\"material\") > -1,\n                  topContainer = (isAndroid || isAndroidForced) && !hasPlatformIndependentSkin ? \"footer\" : \"header\",\n                  bottomContainer = (isAndroid || isAndroidForced) && !hasPlatformIndependentSkin ? \"header\" : \"footer\";\n              this.content.css({\n                paddingTop: this[topContainer].height(),\n                paddingBottom: this[bottomContainer].height()\n              });\n            }\n          },\n          contentElement: function () {\n            var that = this;\n            return that.options.stretch ? that.content : that.scrollerContent;\n          },\n          clone: function () {\n            return new ViewClone(this);\n          },\n          _scroller: function () {\n            var that = this;\n\n            if (mobile.appLevelNativeScrolling()) {\n              return;\n            }\n\n            if (that.options.stretch) {\n              that.content.addClass(\"km-stretched-view\");\n            } else {\n              that.content.kendoMobileScroller($.extend(that.options.scroller, {\n                zoom: that.options.zoom,\n                useNative: that.options.useNativeScrolling\n              }));\n              that.scroller = that.content.data(\"kendoMobileScroller\");\n              that.scrollerContent = that.scroller.scrollElement;\n            } // prevent accidental address bar display when pulling the header\n\n\n            if (kendo.support.kineticScrollNeeded) {\n              $(that.element).on(\"touchmove\", \".km-header\", preventScrollIfNotInput);\n\n              if (!that.options.useNativeScrolling && !that.options.stretch) {\n                $(that.element).on(\"touchmove\", \".km-content\", preventScrollIfNotInput);\n              }\n            }\n          },\n          _model: function () {\n            var that = this,\n                element = that.element,\n                model = that.options.model;\n\n            if (typeof model === \"string\") {\n              model = kendo.getter(model)(that.options.modelScope);\n            }\n\n            that.model = model;\n            initPopOvers(element);\n            that.element.css(\"display\", \"\");\n\n            if (that.options.initWidgets) {\n              if (model) {\n                kendo.bind(element, model, ui, kendo.ui, kendo.dataviz.ui);\n              } else {\n                mobile.init(element.children());\n              }\n            }\n\n            that.element.css(\"display\", \"none\");\n          },\n          _id: function () {\n            var element = this.element,\n                idAttrValue = element.attr(\"id\") || \"\";\n            this.id = attrValue(element, \"url\") || \"#\" + idAttrValue;\n\n            if (this.id == \"#\") {\n              this.id = kendo.guid();\n              element.attr(\"id\", this.id);\n            }\n          },\n          _layout: function () {\n            var contentSelector = roleSelector(\"content\"),\n                element = this.element;\n            element.addClass(\"km-view\");\n            this.header = element.children(roleSelector(\"header\")).addClass(\"km-header\");\n            this.footer = element.children(roleSelector(\"footer\")).addClass(\"km-footer\");\n\n            if (!element.children(contentSelector)[0]) {\n              element.wrapInner(\"<div \" + attr(\"role\") + '=\"content\"></div>');\n            }\n\n            this.content = element.children(roleSelector(\"content\")).addClass(\"km-content\");\n            this.element.prepend(this.header).append(this.footer);\n            this.layout = this.options.getLayout(this.layout);\n\n            if (this.layout) {\n              this.layout.setup(this);\n            }\n          },\n          _overlay: function () {\n            this.overlay = $(UI_OVERLAY).appendTo(this.element);\n          },\n          _invokeNgController: function () {\n            var controller, scope;\n\n            if (this.options.$angular) {\n              controller = this.element.controller();\n              scope = this.options.$angular[0];\n\n              if (controller) {\n                var callback = this._callController.bind(this, controller, scope);\n\n                if (/^\\$(digest|apply)$/.test(scope.$$phase)) {\n                  callback();\n                } else {\n                  scope.$apply(callback);\n                }\n              }\n            }\n          },\n          _callController: function (controller, scope) {\n            this.element.injector().invoke(controller.constructor, controller, {\n              $scope: scope\n            });\n          }\n        });\n\n        function initWidgets(collection) {\n          collection.each(function () {\n            kendo.initWidget($(this), {}, ui.roles);\n          });\n        }\n\n        var Layout = Widget.extend({\n          init: function (element, options) {\n            Widget.fn.init.call(this, element, options);\n            element = this.element;\n            this.header = element.children(this._locate(\"header\")).addClass(\"km-header\");\n            this.footer = element.children(this._locate(\"footer\")).addClass(\"km-footer\");\n            this.elements = this.header.add(this.footer);\n            initPopOvers(element);\n\n            if (!this.options.$angular) {\n              kendo.mobile.init(this.element.children());\n            }\n\n            this.element.detach();\n            this.trigger(INIT, {\n              layout: this\n            });\n          },\n          _locate: function (selectors) {\n            return this.options.$angular ? directiveSelector(selectors) : roleSelector(selectors);\n          },\n          options: {\n            name: \"Layout\",\n            id: null,\n            platform: null\n          },\n          events: [INIT, SHOW, HIDE],\n          setup: function (view) {\n            if (!view.header[0]) {\n              view.header = this.header;\n            }\n\n            if (!view.footer[0]) {\n              view.footer = this.footer;\n            }\n          },\n          detach: function (view) {\n            var that = this;\n\n            if (view.header === that.header && that.header[0]) {\n              view.element.prepend(that.header.detach()[0].cloneNode(true));\n            }\n\n            if (view.footer === that.footer && that.footer.length) {\n              view.element.append(that.footer.detach()[0].cloneNode(true));\n            }\n          },\n          attach: function (view) {\n            var that = this,\n                previousView = that.currentView;\n\n            if (previousView) {\n              that.detach(previousView);\n            }\n\n            if (view.header === that.header) {\n              that.header.detach();\n              view.element.children(roleSelector(\"header\")).remove();\n              view.element.prepend(that.header);\n            }\n\n            if (view.footer === that.footer) {\n              that.footer.detach();\n              view.element.children(roleSelector(\"footer\")).remove();\n              view.element.append(that.footer);\n            }\n\n            that.trigger(SHOW, {\n              layout: that,\n              view: view\n            });\n            that.currentView = view;\n          }\n        });\n        var Observable = kendo.Observable,\n            bodyRegExp = /<body[^>]*>(([\\u000a\\u000d\\u2028\\u2029]|.)*)<\\/body>/i,\n            LOAD_START = \"loadStart\",\n            LOAD_COMPLETE = \"loadComplete\",\n            SHOW_START = \"showStart\",\n            SAME_VIEW_REQUESTED = \"sameViewRequested\",\n            VIEW_SHOW = \"viewShow\",\n            VIEW_TYPE_DETERMINED = \"viewTypeDetermined\",\n            AFTER = \"after\";\n        var ViewEngine = Observable.extend({\n          init: function (options) {\n            var that = this,\n                views,\n                errorMessage,\n                container,\n                collection;\n            Observable.fn.init.call(that);\n            $.extend(that, options);\n            that.sandbox = $(\"<div />\");\n            container = that.container;\n            views = that._hideViews(container);\n            that.rootView = views.first();\n\n            if (!that.rootView[0] && options.rootNeeded) {\n              if (container[0] == kendo.mobile.application.element[0]) {\n                errorMessage = 'Your kendo mobile application element does not contain any direct child elements with data-role=\"view\" attribute set. Make sure that you instantiate the mobile application using the correct container.';\n              } else {\n                errorMessage = 'Your pane element does not contain any direct child elements with data-role=\"view\" attribute set.';\n              }\n\n              throw new Error(errorMessage);\n            }\n\n            that.layouts = {};\n            that.viewContainer = new kendo.ViewContainer(that.container);\n            that.viewContainer.bind(\"accepted\", function (e) {\n              e.view.params = that.params;\n            });\n            that.viewContainer.bind(\"complete\", function (e) {\n              that.trigger(VIEW_SHOW, {\n                view: e.view\n              });\n            });\n            that.viewContainer.bind(AFTER, function () {\n              that.trigger(AFTER);\n            });\n            this.getLayoutProxy = this._getLayout.bind(this);\n\n            that._setupLayouts(container);\n\n            collection = container.children(that._locate(\"modalview drawer\"));\n\n            if (that.$angular) {\n              that.$angular[0].viewOptions = {\n                defaultTransition: that.transition,\n                loader: that.loader,\n                container: that.container,\n                getLayout: that.getLayoutProxy\n              };\n              collection.each(function (idx, element) {\n                compileMobileDirective($(element), options.$angular[0]);\n              });\n            } else {\n              initWidgets(collection);\n            }\n\n            this.bind(this.events, options);\n          },\n          events: [SHOW_START, AFTER, VIEW_SHOW, LOAD_START, LOAD_COMPLETE, SAME_VIEW_REQUESTED, VIEW_TYPE_DETERMINED],\n          destroy: function () {\n            kendo.destroy(this.container);\n\n            for (var id in this.layouts) {\n              this.layouts[id].destroy();\n            }\n          },\n          view: function () {\n            return this.viewContainer.view;\n          },\n          showView: function (url, transition, params) {\n            url = url.replace(new RegExp(\"^\" + this.remoteViewURLPrefix), \"\");\n\n            if (url === \"\" && this.remoteViewURLPrefix) {\n              url = \"/\";\n            }\n\n            if (url.replace(/^#/, \"\") === this.url) {\n              this.trigger(SAME_VIEW_REQUESTED);\n              return false;\n            }\n\n            this.trigger(SHOW_START);\n\n            var that = this,\n                showClosure = function (view) {\n              return that.viewContainer.show(view, transition, url);\n            },\n                element = that._findViewElement(url),\n                view = kendo.widgetInstance(element);\n\n            that.url = url.replace(/^#/, \"\");\n            that.params = params;\n\n            if (view && view.reload) {\n              view.purge();\n              element = [];\n            }\n\n            this.trigger(VIEW_TYPE_DETERMINED, {\n              remote: element.length === 0,\n              url: url\n            });\n\n            if (element[0]) {\n              if (!view) {\n                view = that._createView(element);\n              }\n\n              return showClosure(view);\n            } else {\n              if (this.serverNavigation) {\n                location.href = url;\n              } else {\n                that._loadView(url, showClosure);\n              }\n\n              return true;\n            }\n          },\n          append: function (html, url) {\n            var sandbox = this.sandbox,\n                urlPath = (url || \"\").split(\"?\")[0],\n                container = this.container,\n                views,\n                modalViews,\n                view;\n\n            if (bodyRegExp.test(html)) {\n              html = RegExp.$1;\n            }\n\n            sandbox[0].innerHTML = html;\n            container.append(sandbox.children(\"script, style\"));\n            views = this._hideViews(sandbox);\n            view = views.first(); // Generic HTML content found as remote view - no remote view markers\n\n            if (!view.length) {\n              views = view = sandbox.wrapInner(\"<div data-role=view />\").children(); // one element\n            }\n\n            if (urlPath) {\n              view.hide().attr(attr(\"url\"), urlPath);\n            }\n\n            this._setupLayouts(sandbox);\n\n            modalViews = sandbox.children(this._locate(\"modalview drawer\"));\n            container.append(sandbox.children(this._locate(\"layout modalview drawer\")).add(views)); // Initialize the modalviews after they have been appended to the final container\n\n            initWidgets(modalViews);\n            return this._createView(view);\n          },\n          _locate: function (selectors) {\n            return this.$angular ? directiveSelector(selectors) : roleSelector(selectors);\n          },\n          _findViewElement: function (url) {\n            var element,\n                urlPath = url.split(\"?\")[0];\n\n            if (!urlPath) {\n              return this.rootView;\n            }\n\n            element = this.container.children(\"[\" + attr(\"url\") + \"='\" + urlPath + \"']\"); // do not try to search for \"#/foo/bar\" id, jQuery throws error\n\n            if (!element[0] && urlPath.indexOf(\"/\") === -1) {\n              element = this.container.children(urlPath.charAt(0) === \"#\" ? urlPath : \"#\" + urlPath);\n            }\n\n            return element;\n          },\n          _createView: function (element) {\n            if (this.$angular) {\n              return compileMobileDirective(element, this.$angular[0]);\n            } else {\n              return kendo.initWidget(element, {\n                defaultTransition: this.transition,\n                loader: this.loader,\n                container: this.container,\n                getLayout: this.getLayoutProxy,\n                modelScope: this.modelScope,\n                reload: attrValue(element, \"reload\")\n              }, ui.roles);\n            }\n          },\n          _getLayout: function (name) {\n            if (name === \"\") {\n              return null;\n            }\n\n            return name ? this.layouts[name] : this.layouts[this.layout];\n          },\n          _loadView: function (url, callback) {\n            if (this._xhr) {\n              this._xhr.abort();\n            }\n\n            this.trigger(LOAD_START);\n            this._xhr = $.get(kendo.absoluteURL(url, this.remoteViewURLPrefix), \"html\").always(this._xhrComplete.bind(this, callback, url));\n          },\n          _xhrComplete: function (callback, url, response) {\n            var success = true;\n\n            if (typeof response === \"object\") {\n              if (response.status === 0) {\n                if (response.responseText && response.responseText.length > 0) {\n                  success = true;\n                  response = response.responseText;\n                } else {\n                  // request has been aborted for real\n                  return;\n                }\n              }\n            }\n\n            this.trigger(LOAD_COMPLETE);\n\n            if (success) {\n              callback(this.append(response, url));\n            }\n          },\n          _hideViews: function (container) {\n            return container.children(this._locate(\"view splitview\")).hide();\n          },\n          _setupLayouts: function (element) {\n            var that = this,\n                layout;\n            element.children(that._locate(\"layout\")).each(function () {\n              if (that.$angular) {\n                layout = compileMobileDirective($(this), that.$angular[0]);\n              } else {\n                layout = kendo.initWidget($(this), {}, ui.roles);\n              }\n\n              var platform = layout.options.platform;\n\n              if (!platform || platform === mobile.application.os.name) {\n                that.layouts[layout.options.id] = layout;\n              } else {\n                layout.destroy();\n              }\n            });\n          }\n        });\n        kendo.mobile.ViewEngine = ViewEngine;\n        ui.plugin(View);\n        ui.plugin(Layout);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}