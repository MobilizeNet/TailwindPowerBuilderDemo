{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1361);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1052:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.popup\");\n    /***/\n  },\n\n  /***/\n  1339:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.mobile.pane\");\n    /***/\n  },\n\n  /***/\n  1361:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1052), __webpack_require__(1339)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"mobile.popover\",\n        name: \"PopOver\",\n        category: \"mobile\",\n        description: \"The mobile PopOver widget represents a transient view which is displayed when the user taps on a navigational widget or area on the screen. \",\n        depends: [\"popup\", \"mobile.pane\"]\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            mobile = kendo.mobile,\n            ui = mobile.ui,\n            HIDE = \"hide\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            WRAPPER = '<div class=\"km-popup-wrapper\"></div>',\n            ARROW = '<div class=\"km-popup-arrow\"></div>',\n            OVERLAY = '<div class=\"km-popup-overlay\"></div>',\n            DIRECTION_CLASSES = \"km-up km-down km-left km-right\",\n            Widget = ui.Widget,\n            DIRECTIONS = {\n          \"down\": {\n            origin: \"bottom center\",\n            position: \"top center\"\n          },\n          \"up\": {\n            origin: \"top center\",\n            position: \"bottom center\"\n          },\n          \"left\": {\n            origin: \"center left\",\n            position: \"center right\",\n            collision: \"fit flip\"\n          },\n          \"right\": {\n            origin: \"center right\",\n            position: \"center left\",\n            collision: \"fit flip\"\n          }\n        },\n            ANIMATION = {\n          animation: {\n            open: {\n              effects: \"fade:in\",\n              duration: 0\n            },\n            close: {\n              effects: \"fade:out\",\n              duration: 400\n            }\n          }\n        },\n            DIMENSIONS = {\n          \"horizontal\": {\n            offset: \"top\",\n            size: \"height\"\n          },\n          \"vertical\": {\n            offset: \"left\",\n            size: \"width\"\n          }\n        },\n            REVERSE = {\n          \"up\": \"down\",\n          \"down\": \"up\",\n          \"left\": \"right\",\n          \"right\": \"left\"\n        };\n        var Popup = Widget.extend({\n          init: function (element, options) {\n            var that = this,\n                containerPopup = element.closest(\".km-modalview-wrapper\"),\n                viewport = element.closest(\".km-root\").children('.km-pane').first(),\n                container = containerPopup[0] ? containerPopup : viewport,\n                popupOptions,\n                axis;\n\n            if (options.viewport) {\n              viewport = options.viewport;\n            } else if (!viewport[0]) {\n              viewport = window;\n            }\n\n            if (options.container) {\n              container = options.container;\n            } else if (!container[0]) {\n              container = document.body;\n            }\n\n            popupOptions = {\n              viewport: viewport,\n              copyAnchorStyles: false,\n              autosize: true,\n              open: function () {\n                that.overlay.show();\n              },\n              activate: that._activate.bind(that),\n              deactivate: function () {\n                that.overlay.hide();\n\n                if (!that._apiCall) {\n                  that.trigger(HIDE);\n                }\n\n                that._apiCall = false;\n              }\n            };\n            Widget.fn.init.call(that, element, options);\n            element = that.element;\n            options = that.options;\n            element.wrap(WRAPPER).addClass(\"km-popup\").show();\n            axis = that.options.direction.match(/left|right/) ? \"horizontal\" : \"vertical\";\n            that.dimensions = DIMENSIONS[axis];\n            that.wrapper = element.parent().css({\n              width: options.width,\n              height: options.height\n            }).addClass(\"km-popup-wrapper km-\" + options.direction).hide();\n            that.arrow = $(ARROW).prependTo(that.wrapper).hide();\n            that.overlay = $(OVERLAY).appendTo(container).hide();\n            popupOptions.appendTo = that.overlay;\n\n            if (options.className) {\n              that.overlay.addClass(options.className);\n            }\n\n            that.popup = new kendo.ui.Popup(that.wrapper, $.extend(true, popupOptions, ANIMATION, DIRECTIONS[options.direction]));\n          },\n          options: {\n            name: \"Popup\",\n            width: 240,\n            height: \"\",\n            direction: \"down\",\n            container: null,\n            viewport: null\n          },\n          events: [HIDE],\n          show: function (target) {\n            this.popup.options.anchor = $(target);\n            this.popup.open();\n          },\n          hide: function () {\n            this._apiCall = true;\n            this.popup.close();\n          },\n          destroy: function () {\n            Widget.fn.destroy.call(this);\n            this.popup.destroy();\n            this.overlay.remove();\n          },\n          target: function () {\n            return this.popup.options.anchor;\n          },\n          _activate: function () {\n            var that = this,\n                direction = that.options.direction,\n                dimensions = that.dimensions,\n                offset = dimensions.offset,\n                popup = that.popup,\n                anchor = popup.options.anchor,\n                anchorOffset = $(anchor).offset(),\n                elementOffset = $(popup.element).offset(),\n                cssClass = popup.flipped ? REVERSE[direction] : direction,\n                min = that.arrow[dimensions.size]() * 2,\n                max = that.element[dimensions.size]() - that.arrow[dimensions.size](),\n                size = $(anchor)[dimensions.size](),\n                offsetAmount = anchorOffset[offset] - elementOffset[offset] + size / 2;\n\n            if (offsetAmount < min) {\n              offsetAmount = min;\n            }\n\n            if (offsetAmount > max) {\n              offsetAmount = max;\n            }\n\n            that.wrapper.removeClass(DIRECTION_CLASSES).addClass(\"km-\" + cssClass);\n            that.arrow.css(offset, offsetAmount).show();\n          }\n        });\n        var PopOver = Widget.extend({\n          init: function (element, options) {\n            var that = this,\n                popupOptions;\n            that.initialOpen = false;\n            Widget.fn.init.call(that, element, options);\n            popupOptions = $.extend({\n              className: \"km-popover-root\",\n              hide: function () {\n                that.trigger(CLOSE);\n              }\n            }, this.options.popup);\n            that.popup = new Popup(that.element, popupOptions);\n            that.popup.overlay.on(\"move\", function (e) {\n              if (e.target == that.popup.overlay[0]) {\n                e.preventDefault();\n              }\n            });\n            that.pane = new ui.Pane(that.element, $.extend(this.options.pane, {\n              $angular: this.options.$angular\n            }));\n            kendo.notify(that, ui);\n          },\n          options: {\n            name: \"PopOver\",\n            popup: {},\n            pane: {}\n          },\n          events: [OPEN, CLOSE],\n          open: function (target) {\n            this.popup.show(target);\n\n            if (!this.initialOpen) {\n              if (!this.pane.navigateToInitial()) {\n                this.pane.navigate(\"\");\n              }\n\n              this.popup.popup._position();\n\n              this.initialOpen = true;\n            } else {\n              this.pane.view()._invokeNgController();\n            }\n          },\n          openFor: function (target) {\n            this.open(target);\n            this.trigger(OPEN, {\n              target: this.popup.target()\n            });\n          },\n          close: function () {\n            this.popup.hide();\n          },\n          destroy: function () {\n            Widget.fn.destroy.call(this);\n            this.pane.destroy();\n            this.popup.destroy();\n            kendo.destroy(this.element);\n          }\n        });\n        ui.plugin(Popup);\n        ui.plugin(PopOver);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}