{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1689);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  20:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../kendo.core\");\n    /***/\n  },\n\n  /***/\n  962:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../kendo.popup\");\n    /***/\n  },\n\n  /***/\n  1042:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../kendo.listview\");\n    /***/\n  },\n\n  /***/\n  1689:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(20), __webpack_require__(962), __webpack_require__(1690), __webpack_require__(1042), __webpack_require__(1691)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      (function (kendo) {\n        \"use strict\"; // jshint eqnull:true\n\n        var $ = kendo.jQuery;\n        var EDITORS = {};\n\n        var registerEditor = kendo.spreadsheet.registerEditor = function (name, editor) {\n          EDITORS[name] = editor;\n        };\n\n        kendo.spreadsheet.Sheet.prototype.activeCellCustomEditor = function () {\n          var cell = this.activeCell().first();\n\n          if (this.range(cell).enable()) {\n            var val = this.validation(cell);\n\n            var key = this._properties.get(\"editor\", this._grid.cellRefIndex(cell));\n\n            var editor;\n\n            if (key != null) {\n              editor = EDITORS[key];\n            } else if (val && val.showButton) {\n              key = \"_validation_\" + val.dataType;\n              editor = EDITORS[key];\n            }\n\n            if (typeof editor == \"function\") {\n              editor = EDITORS[key] = editor();\n            }\n\n            return editor;\n          }\n        };\n\n        registerEditor(\"_validation_date\", function () {\n          var context, calendar, popup;\n\n          function create() {\n            if (!calendar) {\n              calendar = $(\"<div>\").kendoCalendar();\n              popup = $(\"<div>\").kendoPopup();\n              calendar.appendTo(popup);\n              calendar = calendar.getKendoCalendar();\n              popup = popup.getKendoPopup();\n              calendar.bind(\"change\", function () {\n                popup.close();\n                var date = calendar.value();\n\n                if (!context.range.format()) {\n                  context.range.format(\"yyyy-mm-dd\");\n                }\n\n                context.callback(kendo.spreadsheet.dateToNumber(date));\n              });\n            }\n\n            popup.setOptions({\n              anchor: context.view.element.find(\".k-spreadsheet-editor-button\")\n            });\n          }\n\n          function open() {\n            create();\n            var date = context.range.value();\n            var sheet = context.range.sheet();\n\n            if (date != null) {\n              calendar.value(kendo.spreadsheet.numberToDate(date));\n            } else {\n              calendar.value(null);\n            }\n\n            var val = context.validation;\n\n            if (val) {\n              var min = kendo.ui.Calendar.fn.options.min;\n              var max = kendo.ui.Calendar.fn.options.max;\n              var fromValidation = val.from;\n              var toValidation = val.to;\n              var formula = kendo.spreadsheet.calc.runtime.Formula;\n\n              if (/^(?:greaterThan|between)/.test(val.comparerType)) {\n                if (fromValidation instanceof formula && _rowAndColPresent(fromValidation.value)) {\n                  min = kendo.spreadsheet.numberToDate(sheet.range(fromValidation.value.row, fromValidation.value.col).value());\n                } else {\n                  min = kendo.spreadsheet.numberToDate(fromValidation.value);\n                }\n              }\n\n              if (val.comparerType == \"between\") {\n                if (toValidation instanceof formula && _rowAndColPresent(toValidation.value)) {\n                  max = kendo.spreadsheet.numberToDate(sheet.range(toValidation.value.row, toValidation.value.col).value());\n                } else {\n                  max = kendo.spreadsheet.numberToDate(val.to.value);\n                }\n              }\n\n              if (val.comparerType == \"lessThan\" || val.comparerType == \"lessThanOrEqualTo\") {\n                if (fromValidation instanceof formula && _rowAndColPresent(fromValidation.value)) {\n                  max = kendo.spreadsheet.numberToDate(sheet.range(fromValidation.value.row, fromValidation.value.col).value());\n                } else {\n                  max = kendo.spreadsheet.numberToDate(val.from.value);\n                }\n              }\n\n              calendar.setOptions({\n                disableDates: function (date) {\n                  var from, to;\n\n                  if (fromValidation && fromValidation instanceof formula && _rowAndColPresent(fromValidation.value)) {\n                    from = sheet.range(fromValidation.value.row, fromValidation.value.col).value();\n                  } else {\n                    from = fromValidation ? fromValidation.value | 0 : 0;\n                  }\n\n                  if (toValidation && toValidation instanceof formula && _rowAndColPresent(toValidation.value)) {\n                    to = sheet.range(toValidation.value.row, toValidation.value.col).value();\n                  } else {\n                    to = toValidation ? toValidation.value | 0 : 0;\n                  }\n\n                  date = kendo.spreadsheet.dateToNumber(date) | 0;\n                  return !kendo.spreadsheet.validation.validationComparers[val.comparerType](date, from, to);\n                },\n                min: min,\n                max: max\n              });\n            } else {\n              calendar.setOptions({\n                disableDates: null,\n                min: null,\n                max: null\n              });\n            }\n\n            popup.open();\n          }\n\n          function _rowAndColPresent(value) {\n            return value && value.row !== null && value.col !== null && value.row > -1 && value.col > -1;\n          }\n\n          return {\n            edit: function (options) {\n              context = options;\n              open();\n            },\n            icon: \"k-i-calendar\"\n          };\n        });\n        registerEditor(\"_validation_list\", function () {\n          var context, list, popup;\n\n          function create() {\n            if (!list) {\n              list = $(\"<ul class='k-list k-reset'/>\").kendoStaticList({\n                template: \"#:value#\",\n                selectable: true,\n                autoBind: false\n              });\n              popup = $(\"<div class='k-spreadsheet-list-popup'>\").kendoPopup();\n              list.appendTo(popup);\n              popup = popup.getKendoPopup();\n              list = list.getKendoStaticList();\n              list.bind(\"change\", function () {\n                popup.close();\n                var item = list.value()[0];\n\n                if (item) {\n                  context.callback(item.value);\n                }\n              });\n            }\n\n            popup.setOptions({\n              anchor: context.view.element.find(\".k-spreadsheet-editor-button\")\n            });\n          }\n\n          function open() {\n            create();\n            var items = context.validation.from.value;\n\n            var data = [],\n                add = function (el) {\n              data.push({\n                value: el\n              });\n            };\n\n            if (items instanceof kendo.spreadsheet.calc.runtime.Matrix) {\n              items.each(add);\n            } else {\n              // actually Excel expects a simple string for list\n              // validation (comma-separated labels).\n              (items + \"\").split(/\\s*,\\s*/).forEach(add);\n            }\n\n            var dataSource = new kendo.data.DataSource({\n              data: data\n            });\n            list.setDataSource(dataSource);\n            dataSource.read();\n            popup.open();\n          }\n\n          return {\n            edit: function (options) {\n              context = options;\n              open();\n            },\n            icon: \"k-i-arrow-60-down\"\n          };\n        });\n      })(window.kendo);\n    }, __webpack_require__(3));\n    /***/\n\n  },\n\n  /***/\n  1690:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../kendo.calendar\");\n    /***/\n  },\n\n  /***/\n  1691:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./sheet\");\n    /***/\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}