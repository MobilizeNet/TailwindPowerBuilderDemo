{"ast":null,"code":"import { Inject } from '../../Application';\nimport { Constants } from '../../Contract/Application';\nimport * as DOMPurify from 'dompurify';\nexport function Component(templateUrl, styleCss) {\n  var resolveTemplate = function (self) {\n    var http = Inject.Instance.resolve(Constants.Server);\n    var library = Inject.Instance.resolve(Constants.Library);\n    http.get(styleCss, null, function (styles) {\n      var styleSanitize = DOMPurify.sanitize(styles, {\n        RETURN_DOM_FRAGMENT: true,\n        FORCE_BODY: true,\n        FORBID_TAGS: ['style']\n      });\n      library.dom.find('head').append(\"<style type='text/css'>\" + styleSanitize.textContent + \"</style>\");\n      http.get(templateUrl, null, function (response) {\n        var responseSanitize = DOMPurify.sanitize(response, {\n          RETURN_DOM: true,\n          CUSTOM_ELEMENT_HANDLING: {\n            tagNameCheck: /^wm-/,\n            allowCustomizedBuiltInElements: true\n          }\n        });\n        library.dom.find('body').append(responseSanitize.innerHTML);\n        self.executeLoad();\n      });\n    });\n  };\n\n  return function (target) {\n    var newConstructor = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      target.apply(this, args);\n      resolveTemplate(this);\n    };\n\n    newConstructor.prototype = Object.create(target.prototype);\n    newConstructor.prototype.constructor = target;\n    return newConstructor;\n  };\n} //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL1N5c3RlbS9Bb3AvQ29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1CQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBWSxNQUFNLDRCQUE0QixDQUFDO0FBR2pFLE9BQU8sS0FBSyxTQUFTLE1BQU0sV0FBVyxDQUFDO0FBSXZDLE1BQU0sVUFBVSxTQUFTLENBQUMsV0FBbUIsRUFBRSxRQUFnQjtJQUMzRCxJQUFNLGVBQWUsR0FBRyxVQUFDLElBQVM7UUFDOUIsSUFBTSxJQUFJLEdBQVksTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2hFLElBQU0sT0FBTyxHQUFhLE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNyRSxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUUsVUFBQyxNQUFNO1lBQzVCLElBQU0sYUFBYSxHQUFHLFNBQVMsQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLEVBQUMsbUJBQW1CLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUMsQ0FBQyxDQUFDO1lBQ3hILE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyw0QkFBMEIsYUFBYSxDQUFDLFdBQVcsYUFBVSxDQUFDLENBQUM7WUFDL0YsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsSUFBSSxFQUFFLFVBQUMsUUFBUTtnQkFDakMsSUFBTSxnQkFBZ0IsR0FBRyxTQUFTLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxFQUFDLFVBQVUsRUFBRSxJQUFJLEVBQUUsdUJBQXVCLEVBQUU7d0JBQzlGLFlBQVksRUFBRSxNQUFNO3dCQUNwQiw4QkFBOEIsRUFBRSxJQUFJO3FCQUN2QyxFQUFDLENBQUMsQ0FBQztnQkFDSixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQzVELElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUN2QixDQUFDLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxDQUFDO0lBRUYsT0FBTyxVQUFDLE1BQWdCO1FBQ3BCLElBQU0sY0FBYyxHQUFRO1lBQVUsY0FBTztpQkFBUCxVQUFPLEVBQVAscUJBQU8sRUFBUCxJQUFPO2dCQUFQLHlCQUFPOztZQUN6QyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztZQUN6QixlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUIsQ0FBQyxDQUFDO1FBQ0YsY0FBYyxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUMzRCxjQUFjLENBQUMsU0FBUyxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUM7UUFDOUMsT0FBTyxjQUFjLENBQUM7SUFDMUIsQ0FBQyxDQUFDO0FBQ04sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4qIENvcHlyaWdodCAoQykgTW9iaWxpemUuTmV0IDxpbmZvQG1vYmlsaXplLm5ldD4gLSBBbGwgUmlnaHRzIFJlc2VydmVkXHJcbipcclxuKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgTW9iaWxpemUgRnJhbWV3b3Jrcywgd2hpY2ggaXNcclxuKiBwcm9wcmlldGFyeSBhbmQgY29uZmlkZW50aWFsLlxyXG4qXHJcbiogTk9USUNFOiAgQWxsIGluZm9ybWF0aW9uIGNvbnRhaW5lZCBoZXJlaW4gaXMsIGFuZCByZW1haW5zXHJcbiogdGhlIHByb3BlcnR5IG9mIE1vYmlsaXplLk5ldCBDb3Jwb3JhdGlvbi5cclxuKiBUaGUgaW50ZWxsZWN0dWFsIGFuZCB0ZWNobmljYWwgY29uY2VwdHMgY29udGFpbmVkIGhlcmVpbiBhcmVcclxuKiBwcm9wcmlldGFyeSB0byBNb2JpbGl6ZS5OZXQgQ29ycG9yYXRpb24gYW5kIG1heSBiZSBjb3ZlcmVkXHJcbiogYnkgVS5TLiBQYXRlbnRzLCBhbmQgYXJlIHByb3RlY3RlZCBieSB0cmFkZSBzZWNyZXQgb3IgY29weXJpZ2h0IGxhdy5cclxuKiBEaXNzZW1pbmF0aW9uIG9mIHRoaXMgaW5mb3JtYXRpb24gb3IgcmVwcm9kdWN0aW9uIG9mIHRoaXMgbWF0ZXJpYWxcclxuKiBpcyBzdHJpY3RseSBmb3JiaWRkZW4gdW5sZXNzIHByaW9yIHdyaXR0ZW4gcGVybWlzc2lvbiBpcyBvYnRhaW5lZFxyXG4qIGZyb20gTW9iaWxpemUuTmV0IENvcnBvcmF0aW9uLlxyXG4qXHJcbiogVGhpcyBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIGRlZmluZWQgaW5cclxuKiBmaWxlICdMSUNFTlNFLnR4dCcsIHdoaWNoIGlzIHBhcnQgb2YgdGhpcyBzb3VyY2UgY29kZSBwYWNrYWdlLlxyXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcbmltcG9ydCB7IEluamVjdCB9IGZyb20gJy4uLy4uL0FwcGxpY2F0aW9uJztcclxuaW1wb3J0IHsgQ29uc3RhbnRzLCBJTGlicmFyeSB9IGZyb20gJy4uLy4uL0NvbnRyYWN0L0FwcGxpY2F0aW9uJztcclxuaW1wb3J0IHsgSVNlcnZlciB9IGZyb20gJy4uLy4uL0NvbnRyYWN0L1NlcnZlcic7XHJcblxyXG5pbXBvcnQgKiBhcyBET01QdXJpZnkgZnJvbSAnZG9tcHVyaWZ5JztcclxuXHJcbi8qIHRzbGludDpkaXNhYmxlOiBuby1pbnZhbGlkLXRoaXMgKi9cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBDb21wb25lbnQodGVtcGxhdGVVcmw6IHN0cmluZywgc3R5bGVDc3M6IHN0cmluZyk6IGFueSB7XHJcbiAgICBjb25zdCByZXNvbHZlVGVtcGxhdGUgPSAoc2VsZjogYW55KSA9PiB7XHJcbiAgICAgICAgY29uc3QgaHR0cDogSVNlcnZlciA9IEluamVjdC5JbnN0YW5jZS5yZXNvbHZlKENvbnN0YW50cy5TZXJ2ZXIpO1xyXG4gICAgICAgIGNvbnN0IGxpYnJhcnk6IElMaWJyYXJ5ID0gSW5qZWN0Lkluc3RhbmNlLnJlc29sdmUoQ29uc3RhbnRzLkxpYnJhcnkpO1xyXG4gICAgICAgIGh0dHAuZ2V0KHN0eWxlQ3NzLCBudWxsLCAoc3R5bGVzKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHN0eWxlU2FuaXRpemUgPSBET01QdXJpZnkuc2FuaXRpemUoc3R5bGVzLCB7UkVUVVJOX0RPTV9GUkFHTUVOVDogdHJ1ZSwgRk9SQ0VfQk9EWTogdHJ1ZSwgRk9SQklEX1RBR1M6IFsnc3R5bGUnXX0pO1xyXG4gICAgICAgICAgICBsaWJyYXJ5LmRvbS5maW5kKCdoZWFkJykuYXBwZW5kKGA8c3R5bGUgdHlwZT0ndGV4dC9jc3MnPiR7c3R5bGVTYW5pdGl6ZS50ZXh0Q29udGVudH08L3N0eWxlPmApO1xyXG4gICAgICAgICAgICBodHRwLmdldCh0ZW1wbGF0ZVVybCwgbnVsbCwgKHJlc3BvbnNlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZVNhbml0aXplID0gRE9NUHVyaWZ5LnNhbml0aXplKHJlc3BvbnNlLCB7UkVUVVJOX0RPTTogdHJ1ZSwgQ1VTVE9NX0VMRU1FTlRfSEFORExJTkc6IHtcclxuICAgICAgICAgICAgICAgICAgICB0YWdOYW1lQ2hlY2s6IC9ed20tLyxcclxuICAgICAgICAgICAgICAgICAgICBhbGxvd0N1c3RvbWl6ZWRCdWlsdEluRWxlbWVudHM6IHRydWUsXHJcbiAgICAgICAgICAgICAgICB9fSk7XHJcbiAgICAgICAgICAgICAgICBsaWJyYXJ5LmRvbS5maW5kKCdib2R5JykuYXBwZW5kKHJlc3BvbnNlU2FuaXRpemUuaW5uZXJIVE1MKTtcclxuICAgICAgICAgICAgICAgIHNlbGYuZXhlY3V0ZUxvYWQoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiAodGFyZ2V0OiBGdW5jdGlvbikgPT4ge1xyXG4gICAgICAgIGNvbnN0IG5ld0NvbnN0cnVjdG9yOiBhbnkgPSBmdW5jdGlvbiAoLi4uYXJncyk6IHZvaWQge1xyXG4gICAgICAgICAgICB0YXJnZXQuYXBwbHkodGhpcywgYXJncyk7XHJcbiAgICAgICAgICAgIHJlc29sdmVUZW1wbGF0ZSh0aGlzKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIG5ld0NvbnN0cnVjdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUodGFyZ2V0LnByb3RvdHlwZSk7XHJcbiAgICAgICAgbmV3Q29uc3RydWN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gdGFyZ2V0O1xyXG4gICAgICAgIHJldHVybiBuZXdDb25zdHJ1Y3RvcjtcclxuICAgIH07XHJcbn1cclxuIl19","map":null,"metadata":{},"sourceType":"module"}