{"ast":null,"code":"import { QRDataMode } from './qr-data-mode';\nimport { extend } from '../../utils';\nimport { toBitsString, splitInto } from '../../utils';\nexport class NumericQRDataMode extends QRDataMode {\n  initProperties() {\n    super.initProperties();\n    extend(this, {\n      bitsInCharacterCount: [10, 12, 14],\n      modeIndicator: \"0001\"\n    });\n  }\n\n  getValue(character) {\n    return parseInt(character, 10);\n  }\n\n  encode(str, version) {\n    let mode = this,\n        parts = splitInto(str, 3),\n        result = mode.getModeCountString(str.length, version);\n    let i;\n\n    for (i = 0; i < parts.length - 1; i++) {\n      result += toBitsString(parts[i], 10);\n    }\n\n    return result + toBitsString(parts[i], 1 + 3 * parts[i].length);\n  }\n\n  getStringBitsLength(inputLength, version) {\n    let mod3 = inputLength % 3;\n    return 4 + this.getBitsCharacterCount(version) + 10 * Math.floor(inputLength / 3) + 3 * mod3 + (mod3 === 0 ? 0 : 1);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}