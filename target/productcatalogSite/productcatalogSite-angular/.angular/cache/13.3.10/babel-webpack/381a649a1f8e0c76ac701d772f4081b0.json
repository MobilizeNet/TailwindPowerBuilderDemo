{"ast":null,"code":"import { Constants, Events } from '../Contract';\nimport { Inject } from '.';\n\nvar WorkQueue = function () {\n  function WorkQueue(inject) {\n    if (inject === void 0) {\n      inject = null;\n    }\n\n    this.inject = inject;\n    this.inject = inject ? inject : Inject.Instance;\n    this.event = this.inject.resolve(Constants.EventAggregator);\n    this.queue = {};\n    this.init();\n  }\n\n  WorkQueue.prototype.addToWorkQueue = function (data) {\n    if (data.key && data.key !== this.executingKey) {\n      this.queue[data.key] = data.fn;\n    }\n  };\n\n  WorkQueue.prototype.executeWorkQueue = function () {\n    for (var key in this.queue) {\n      if (this.queue.hasOwnProperty(key)) {\n        var fn = this.queue[key];\n\n        if (typeof fn === 'function') {\n          try {\n            this.executingKey = key;\n            fn();\n          } finally {\n            this.executingKey = '';\n          }\n        }\n\n        delete this.queue[key];\n      }\n    }\n  };\n\n  WorkQueue.prototype.init = function () {\n    var _this = this;\n\n    this.event.subscribe(Events.AddToWorkQueue, function (data) {\n      _this.addToWorkQueue(data);\n    });\n    this.event.subscribe(Events.ExecWorkQueue, function () {\n      _this.executeWorkQueue();\n    });\n  };\n\n  return WorkQueue;\n}();\n\nexport { WorkQueue }; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV29ya1F1ZXVlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0FwcGxpY2F0aW9uL1dvcmtRdWV1ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQkEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQW9ELE1BQU0sYUFBYSxDQUFDO0FBRWxHLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxHQUFHLENBQUM7QUFFM0I7SUFFSSxtQkFBNkIsTUFBc0I7UUFBdEIsdUJBQUEsRUFBQSxhQUFzQjtRQUF0QixXQUFNLEdBQU4sTUFBTSxDQUFnQjtRQUMvQyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQ2hELElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQzVELElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO1FBQ2hCLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBTUQsa0NBQWMsR0FBZCxVQUFlLElBQWU7UUFFMUIsSUFBSSxJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxHQUFHLEtBQUssSUFBSSxDQUFDLFlBQVksRUFBRTtZQUM1QyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1NBQ2xDO0lBQ0wsQ0FBQztJQUVELG9DQUFnQixHQUFoQjtRQUNJLEtBQUssSUFBTSxHQUFHLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUMxQixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxFQUFFO2dCQUNoQyxJQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUUzQixJQUFJLE9BQU8sQ0FBQyxFQUFFLENBQUMsS0FBSyxVQUFVLEVBQUU7b0JBQzVCLElBQUk7d0JBQ0EsSUFBSSxDQUFDLFlBQVksR0FBRyxHQUFHLENBQUM7d0JBQ3hCLEVBQUUsRUFBRSxDQUFDO3FCQUNSOzRCQUFTO3dCQUNOLElBQUksQ0FBQyxZQUFZLEdBQUcsRUFBRSxDQUFDO3FCQUMxQjtpQkFDSjtnQkFFRCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDMUI7U0FDSjtJQUNMLENBQUM7SUFFTyx3QkFBSSxHQUFaO1FBQUEsaUJBR0M7UUFGRyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLFVBQUMsSUFBSSxJQUFPLEtBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0RixJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLGNBQVEsS0FBSSxDQUFDLGdCQUFnQixFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNuRixDQUFDO0lBQ0wsZ0JBQUM7QUFBRCxDQUFDLEFBM0NELElBMkNDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiogQ29weXJpZ2h0IChDKSBNb2JpbGl6ZS5OZXQgPGluZm9AbW9iaWxpemUubmV0PiAtIEFsbCBSaWdodHMgUmVzZXJ2ZWRcclxuKlxyXG4qIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBNb2JpbGl6ZSBGcmFtZXdvcmtzLCB3aGljaCBpc1xyXG4qIHByb3ByaWV0YXJ5IGFuZCBjb25maWRlbnRpYWwuXHJcbipcclxuKiBOT1RJQ0U6ICBBbGwgaW5mb3JtYXRpb24gY29udGFpbmVkIGhlcmVpbiBpcywgYW5kIHJlbWFpbnNcclxuKiB0aGUgcHJvcGVydHkgb2YgTW9iaWxpemUuTmV0IENvcnBvcmF0aW9uLlxyXG4qIFRoZSBpbnRlbGxlY3R1YWwgYW5kIHRlY2huaWNhbCBjb25jZXB0cyBjb250YWluZWQgaGVyZWluIGFyZVxyXG4qIHByb3ByaWV0YXJ5IHRvIE1vYmlsaXplLk5ldCBDb3Jwb3JhdGlvbiBhbmQgbWF5IGJlIGNvdmVyZWRcclxuKiBieSBVLlMuIFBhdGVudHMsIGFuZCBhcmUgcHJvdGVjdGVkIGJ5IHRyYWRlIHNlY3JldCBvciBjb3B5cmlnaHQgbGF3LlxyXG4qIERpc3NlbWluYXRpb24gb2YgdGhpcyBpbmZvcm1hdGlvbiBvciByZXByb2R1Y3Rpb24gb2YgdGhpcyBtYXRlcmlhbFxyXG4qIGlzIHN0cmljdGx5IGZvcmJpZGRlbiB1bmxlc3MgcHJpb3Igd3JpdHRlbiBwZXJtaXNzaW9uIGlzIG9idGFpbmVkXHJcbiogZnJvbSBNb2JpbGl6ZS5OZXQgQ29ycG9yYXRpb24uXHJcbipcclxuKiBUaGlzIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgZGVmaW5lZCBpblxyXG4qIGZpbGUgJ0xJQ0VOU0UudHh0Jywgd2hpY2ggaXMgcGFydCBvZiB0aGlzIHNvdXJjZSBjb2RlIHBhY2thZ2UuXHJcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xyXG5pbXBvcnQgeyBDb25zdGFudHMsIEV2ZW50cywgSUV2ZW50QWdncmVnYXRvciwgSUluamVjdCwgSVdvcmtEYXRhLCBJV29ya1F1ZXVlIH0gZnJvbSAnLi4vQ29udHJhY3QnO1xyXG5cclxuaW1wb3J0IHsgSW5qZWN0IH0gZnJvbSAnLic7XHJcblxyXG5leHBvcnQgY2xhc3MgV29ya1F1ZXVlIGltcGxlbWVudHMgSVdvcmtRdWV1ZSB7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBpbmplY3Q6IElJbmplY3QgPSBudWxsKSB7XHJcbiAgICAgICAgdGhpcy5pbmplY3QgPSBpbmplY3QgPyBpbmplY3QgOiBJbmplY3QuSW5zdGFuY2U7XHJcbiAgICAgICAgdGhpcy5ldmVudCA9IHRoaXMuaW5qZWN0LnJlc29sdmUoQ29uc3RhbnRzLkV2ZW50QWdncmVnYXRvcik7XHJcbiAgICAgICAgdGhpcy5xdWV1ZSA9IHt9O1xyXG4gICAgICAgIHRoaXMuaW5pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgcmVhZG9ubHkgZXZlbnQ6IElFdmVudEFnZ3JlZ2F0b3I7XHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IHF1ZXVlOiBhbnk7XHJcbiAgICBwcml2YXRlIGV4ZWN1dGluZ0tleTogc3RyaW5nO1xyXG5cclxuICAgIGFkZFRvV29ya1F1ZXVlKGRhdGE6IElXb3JrRGF0YSk6IHZvaWQge1xyXG4gICAgICAgIC8vIGF2b2lkIHJlaW5zZXJ0aW5nIHRoZSBrZXkgZHVyaW5nIGl0cyBleGVjdXRpb25cclxuICAgICAgICBpZiAoZGF0YS5rZXkgJiYgZGF0YS5rZXkgIT09IHRoaXMuZXhlY3V0aW5nS2V5KSB7XHJcbiAgICAgICAgICAgIHRoaXMucXVldWVbZGF0YS5rZXldID0gZGF0YS5mbjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZXhlY3V0ZVdvcmtRdWV1ZSgpOiB2b2lkIHtcclxuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiB0aGlzLnF1ZXVlKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnF1ZXVlLmhhc093blByb3BlcnR5KGtleSkpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGZuID0gdGhpcy5xdWV1ZVtrZXldO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgKGZuKSA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXhlY3V0aW5nS2V5ID0ga2V5O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmbigpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZmluYWxseSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXhlY3V0aW5nS2V5ID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLnF1ZXVlW2tleV07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBpbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuZXZlbnQuc3Vic2NyaWJlKEV2ZW50cy5BZGRUb1dvcmtRdWV1ZSwgKGRhdGEpID0+IHsgdGhpcy5hZGRUb1dvcmtRdWV1ZShkYXRhKTsgfSk7XHJcbiAgICAgICAgdGhpcy5ldmVudC5zdWJzY3JpYmUoRXZlbnRzLkV4ZWNXb3JrUXVldWUsICgpID0+IHsgdGhpcy5leGVjdXRlV29ya1F1ZXVlKCk7IH0pO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","map":null,"metadata":{},"sourceType":"module"}