{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1487);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1051:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.core\");\n    /***/\n  },\n\n  /***/\n  1327:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.floatinglabel\");\n    /***/\n  },\n\n  /***/\n  1487:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1051), __webpack_require__(1327)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"textbox\",\n        name: \"TextBox\",\n        category: \"web\",\n        description: \"The TextBox widget enables you to style and provide a floating label functionality to input elements\",\n        depends: [\"core\", \"floatinglabel\"]\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            ui = kendo.ui,\n            isPlainObject = $.isPlainObject,\n            NS = \".kendoTextBox\",\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            INPUT = \"k-input-inner\",\n            FOCUSED = \"k-focus\",\n            LABELCLASSES = \"k-label k-input-label\",\n            STATEDISABLED = \"k-disabled\",\n            NOCLICKCLASS = \"k-no-click\",\n            ARIA_DISABLED = \"aria-disabled\";\n        var TextBox = Widget.extend({\n          init: function (element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            options = $.extend(true, {}, options);\n            that.options.value = options.value || that.element.val();\n            that.options.readonly = options.readonly !== undefined ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n            that.options.enable = options.enable !== undefined ? options.enable : !Boolean(that.element.attr(\"disabled\"));\n            that.options.placeholder = options.placeholder || that.element.attr(\"placeholder\");\n            that.value(that.options.value);\n\n            that._wrapper();\n\n            that._label();\n\n            that._editable({\n              readonly: that.options.readonly,\n              disable: !that.options.enable\n            });\n\n            that.element.addClass(INPUT).attr(\"placeholder\", that.options.placeholder).attr(\"autocomplete\", \"off\");\n            kendo.notify(that);\n\n            that._applyCssClasses();\n          },\n          events: [CHANGE],\n          options: {\n            name: 'TextBox',\n            value: '',\n            readonly: false,\n            enable: true,\n            placeholder: '',\n            label: null,\n            rounded: \"medium\",\n            size: \"medium\",\n            fillMode: \"solid\"\n          },\n          value: function (value) {\n            var that = this;\n\n            if (value === undefined) {\n              return that._value;\n            }\n\n            that._value = value;\n            that.element.val(value);\n          },\n          readonly: function (readonly) {\n            var that = this;\n\n            this._editable({\n              readonly: readonly === undefined ? true : readonly,\n              disable: false\n            });\n\n            if (that.floatingLabel) {\n              that.floatingLabel.readonly(readonly === undefined ? true : readonly);\n            }\n          },\n          enable: function (enable) {\n            var that = this;\n\n            this._editable({\n              readonly: false,\n              disable: !(enable = enable === undefined ? true : enable)\n            });\n\n            if (that.floatingLabel) {\n              that.floatingLabel.enable(enable = enable === undefined ? true : enable);\n            }\n          },\n          focus: function () {\n            var that = this;\n            that.element[0].focus();\n          },\n          destroy: function () {\n            var that = this;\n\n            if (that.floatingLabel) {\n              that.floatingLabel.destroy();\n            }\n\n            that.element.off(NS);\n            that.element[0].style.width = \"\";\n            that.element.removeClass(INPUT);\n            Widget.fn.destroy.call(that);\n          },\n          setOptions: function (options) {\n            this.destroy();\n            this.element.unwrap();\n\n            if (this._floatingLabelContainer) {\n              this._inputLabel.remove();\n\n              this._inputLabel = null;\n              this.element.unwrap();\n              this._floatingLabelContainer = null;\n            }\n\n            kendo.deepExtend(this.options, options);\n            this.init(this.element, this.options);\n          },\n          _editable: function (options) {\n            var that = this;\n            var element = that.element;\n            var wrapper = that.wrapper;\n            var disable = options.disable;\n            var readonly = options.readonly;\n            element.off(NS);\n\n            if (!readonly && !disable) {\n              element.prop(DISABLED, false).prop(READONLY, false).attr(ARIA_DISABLED, false);\n              wrapper.removeClass(STATEDISABLED).removeClass(NOCLICKCLASS);\n              element.on(\"focusin\" + NS, that._focusin.bind(that));\n              element.on(\"focusout\" + NS, that._focusout.bind(that));\n              element.on(\"change\" + NS, that._change.bind(that));\n            } else {\n              element.attr(DISABLED, disable).attr(READONLY, readonly).attr(ARIA_DISABLED, disable);\n              wrapper.toggleClass(STATEDISABLED, disable).toggleClass(NOCLICKCLASS, readonly);\n            }\n          },\n          _label: function () {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var id = element.attr(\"id\");\n            var floating;\n            var labelText;\n\n            if (options.label !== null) {\n              floating = isPlainObject(options.label) ? options.label.floating : false;\n              labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n              if (floating) {\n                that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, {\n                  widget: that\n                });\n              }\n\n              if (kendo.isFunction(labelText)) {\n                labelText = labelText.call(that);\n              }\n\n              if (!labelText) {\n                labelText = \"\";\n              }\n\n              if (!id) {\n                id = options.name + \"_\" + kendo.guid();\n                element.attr(\"id\", id);\n              }\n\n              that._inputLabel = $(\"<label class='\" + LABELCLASSES + \"' for='\" + id + \"'>\" + labelText + \"</label>'\").insertBefore(that.wrapper);\n            }\n          },\n          _focusin: function () {\n            var that = this;\n            that.wrapper.addClass(FOCUSED);\n          },\n          _focusout: function () {\n            var that = this;\n            that.wrapper.removeClass(FOCUSED);\n          },\n          _change: function (e) {\n            var that = this;\n            var newValue = that.element.val();\n            that._value = newValue;\n            that.trigger(CHANGE, {\n              value: newValue,\n              originalEvent: e\n            });\n          },\n          _wrapper: function () {\n            var that = this;\n            var element = that.element;\n            var DOMElement = element[0];\n            var wrapper;\n            wrapper = element.wrap(\"<span class='k-input k-textbox'></span>\").parent();\n            wrapper[0].style.cssText = DOMElement.style.cssText;\n            DOMElement.style.width = \"100%\";\n            that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n          }\n        });\n        kendo.cssProperties.registerPrefix(\"TextBox\", \"k-input-\");\n        kendo.cssProperties.registerValues(\"TextBox\", [{\n          prop: \"rounded\",\n          values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n        ui.plugin(TextBox);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}