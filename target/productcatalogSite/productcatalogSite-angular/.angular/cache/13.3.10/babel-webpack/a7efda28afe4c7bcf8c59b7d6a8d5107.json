{"ast":null,"code":"import { RequestConfig } from '../Server';\nexport var NOTIMPLEMENTED = 'WebMap 5 property not implemented in WebMap 4';\n\nvar ActionModel = function () {\n  function ActionModel(controller, action, item, parameters, callback, requestConfig, highPriority, queryString) {\n    if (controller === void 0) {\n      controller = '';\n    }\n\n    if (action === void 0) {\n      action = '';\n    }\n\n    if (item === void 0) {\n      item = null;\n    }\n\n    if (parameters === void 0) {\n      parameters = null;\n    }\n\n    if (callback === void 0) {\n      callback = null;\n    }\n\n    this.myController = controller;\n    this.myAction = action;\n    this.myItem = item;\n    this.myParameters = parameters;\n    this.myCallback = callback;\n    this.myRequestConfig = requestConfig ? requestConfig : new RequestConfig();\n    this.myHighPriority = highPriority ? highPriority : false;\n    this.myQueryString = queryString;\n  }\n\n  Object.defineProperty(ActionModel.prototype, \"controller\", {\n    get: function () {\n      return this.myController;\n    },\n    set: function (value) {\n      this.myController = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ActionModel.prototype, \"action\", {\n    get: function () {\n      return this.myAction;\n    },\n    set: function (value) {\n      this.myAction = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ActionModel.prototype, \"item\", {\n    get: function () {\n      return this.myItem;\n    },\n    set: function (value) {\n      this.myItem = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ActionModel.prototype, \"parameters\", {\n    get: function () {\n      return this.myParameters;\n    },\n    set: function (value) {\n      this.myParameters = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ActionModel.prototype, \"callback\", {\n    get: function () {\n      return this.myCallback;\n    },\n    set: function (value) {\n      this.myCallback = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ActionModel.prototype, \"includeDirty\", {\n    get: function () {\n      return this.myIncludeDirty;\n    },\n    set: function (value) {\n      this.myIncludeDirty = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ActionModel.prototype, \"requestConfig\", {\n    get: function () {\n      return this.myRequestConfig;\n    },\n    set: function (value) {\n      this.myRequestConfig = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ActionModel.prototype, \"receiverId\", {\n    get: function () {\n      return undefined;\n    },\n    set: function (value) {\n      throw new Error(NOTIMPLEMENTED);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ActionModel.prototype, \"serverEvent\", {\n    get: function () {\n      throw new Error(NOTIMPLEMENTED);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ActionModel.prototype, \"highPriority\", {\n    get: function () {\n      return this.myHighPriority;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ActionModel.prototype, \"queryString\", {\n    get: function () {\n      return this.myQueryString;\n    },\n    set: function (value) {\n      this.myQueryString = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ActionModel;\n}();\n\nexport { ActionModel }; //# sourceMappingURL=data:application/json;base64,","map":null,"metadata":{},"sourceType":"module"}