{"ast":null,"code":"import { QRDataMode } from './qr-data-mode';\nimport { extend } from '../../utils';\nimport { toBitsString } from '../../utils';\nexport class ByteQRDataMode extends QRDataMode {\n  initProperties() {\n    super.initProperties();\n    extend(this, {\n      bitsInCharacterCount: [8, 16, 16],\n      modeIndicator: \"0100\"\n    });\n  }\n\n  getValue(character) {\n    let code = character.charCodeAt(0);\n\n    if (code <= 127 || 160 <= code && code <= 255) {\n      return code;\n    }\n\n    throw new Error(`Unsupported character in QR Code: \"${character}\".`);\n  }\n\n  encode(str, version) {\n    let mode = this,\n        result = mode.getModeCountString(str.length, version);\n\n    for (let i = 0; i < str.length; i++) {\n      result += toBitsString(mode.getValue(str.charAt(i)), 8);\n    }\n\n    return result;\n  }\n\n  getStringBitsLength(inputLength, version) {\n    return 4 + this.getBitsCharacterCount(version) + 8 * inputLength;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}