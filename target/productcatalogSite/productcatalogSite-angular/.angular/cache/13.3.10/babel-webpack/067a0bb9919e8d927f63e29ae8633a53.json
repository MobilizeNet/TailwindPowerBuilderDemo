{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Inject } from '../../Application';\nimport { Constants, Order } from '../../Contract';\nimport { ErrorCodes, ExceptionHandlerClass } from '../../System/Aop';\n\nvar AliasBehavior = function () {\n  function AliasBehavior(inject) {\n    if (inject === void 0) {\n      inject = null;\n    }\n\n    this.inject = inject;\n    this.inject = inject || Inject.Instance;\n    this.aliasService = this.inject.resolve(Constants.TypeService);\n  }\n\n  AliasBehavior.prototype.apply = function (model, root) {\n    if (!model.isRoot() && !model.isPointer) {\n      var name_1 = model.uniqueName();\n\n      if (name_1.length > 0) {\n        var parent_1 = root.getParentByModel(model);\n\n        if (!parent_1.isArray) {\n          var alias = this.aliasService.getAlias(parent_1['@k'], name_1);\n          model['aliasName'] = alias;\n        }\n      }\n    }\n  };\n\n  Object.defineProperty(AliasBehavior.prototype, \"Order\", {\n    get: function () {\n      return Order.PRE;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  AliasBehavior = __decorate([ExceptionHandlerClass(ErrorCodes.ClientCore), __metadata(\"design:paramtypes\", [Object])], AliasBehavior);\n  return AliasBehavior;\n}();\n\nexport { AliasBehavior }; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWxpYXNCZWhhdmlvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9Db3JlL0JlaGF2aW9ycy9BbGlhc0JlaGF2aW9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQWtCQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBMkQsS0FBSyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0csT0FBTyxFQUFFLFVBQVUsRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBR3JFO0lBRUksdUJBQTZCLE1BQXNCO1FBQXRCLHVCQUFBLEVBQUEsYUFBc0I7UUFBdEIsV0FBTSxHQUFOLE1BQU0sQ0FBZ0I7UUFDL0MsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQztRQUN4QyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNuRSxDQUFDO0lBSUQsNkJBQUssR0FBTCxVQUFNLEtBQWEsRUFBRSxJQUFhO1FBQzlCLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFO1lBQ3JDLElBQU0sTUFBSSxHQUFHLEtBQUssQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUNoQyxJQUFJLE1BQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO2dCQUNqQixJQUFNLFFBQU0sR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBRTVDLElBQUksQ0FBQyxRQUFNLENBQUMsT0FBTyxFQUFFO29CQUVqQixJQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxRQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBSSxDQUFDLENBQUM7b0JBRTdELEtBQUssQ0FBQyxXQUFXLENBQUMsR0FBRyxLQUFLLENBQUM7aUJBQzlCO2FBQ0o7U0FDSjtJQUNMLENBQUM7SUFFRCxzQkFBSSxnQ0FBSzthQUFUO1lBQ0ksT0FBTyxLQUFLLENBQUMsR0FBRyxDQUFDO1FBQ3JCLENBQUM7OztPQUFBO0lBM0JRLGFBQWE7UUFEekIscUJBQXFCLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQzs7T0FDaEMsYUFBYSxDQTRCekI7SUFBRCxvQkFBQztDQUFBLEFBNUJELElBNEJDO1NBNUJZLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuKiBDb3B5cmlnaHQgKEMpIE1vYmlsaXplLk5ldCA8aW5mb0Btb2JpbGl6ZS5uZXQ+IC0gQWxsIFJpZ2h0cyBSZXNlcnZlZFxyXG4qXHJcbiogVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIE1vYmlsaXplIEZyYW1ld29ya3MsIHdoaWNoIGlzXHJcbiogcHJvcHJpZXRhcnkgYW5kIGNvbmZpZGVudGlhbC5cclxuKlxyXG4qIE5PVElDRTogIEFsbCBpbmZvcm1hdGlvbiBjb250YWluZWQgaGVyZWluIGlzLCBhbmQgcmVtYWluc1xyXG4qIHRoZSBwcm9wZXJ0eSBvZiBNb2JpbGl6ZS5OZXQgQ29ycG9yYXRpb24uXHJcbiogVGhlIGludGVsbGVjdHVhbCBhbmQgdGVjaG5pY2FsIGNvbmNlcHRzIGNvbnRhaW5lZCBoZXJlaW4gYXJlXHJcbiogcHJvcHJpZXRhcnkgdG8gTW9iaWxpemUuTmV0IENvcnBvcmF0aW9uIGFuZCBtYXkgYmUgY292ZXJlZFxyXG4qIGJ5IFUuUy4gUGF0ZW50cywgYW5kIGFyZSBwcm90ZWN0ZWQgYnkgdHJhZGUgc2VjcmV0IG9yIGNvcHlyaWdodCBsYXcuXHJcbiogRGlzc2VtaW5hdGlvbiBvZiB0aGlzIGluZm9ybWF0aW9uIG9yIHJlcHJvZHVjdGlvbiBvZiB0aGlzIG1hdGVyaWFsXHJcbiogaXMgc3RyaWN0bHkgZm9yYmlkZGVuIHVubGVzcyBwcmlvciB3cml0dGVuIHBlcm1pc3Npb24gaXMgb2J0YWluZWRcclxuKiBmcm9tIE1vYmlsaXplLk5ldCBDb3Jwb3JhdGlvbi5cclxuKlxyXG4qIFRoaXMgZmlsZSBpcyBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBkZWZpbmVkIGluXHJcbiogZmlsZSAnTElDRU5TRS50eHQnLCB3aGljaCBpcyBwYXJ0IG9mIHRoaXMgc291cmNlIGNvZGUgcGFja2FnZS5cclxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXHJcbmltcG9ydCB7IEluamVjdCB9IGZyb20gJy4uLy4uL0FwcGxpY2F0aW9uJztcclxuaW1wb3J0IHsgQ29uc3RhbnRzLCBJQ2xpZW50QmVoYXZpb3IsIElFbnRpdHksIElJbmplY3QsIElNb2RlbCwgSVR5cGVTZXJ2aWNlLCBPcmRlciB9IGZyb20gJy4uLy4uL0NvbnRyYWN0JztcclxuaW1wb3J0IHsgRXJyb3JDb2RlcywgRXhjZXB0aW9uSGFuZGxlckNsYXNzIH0gZnJvbSAnLi4vLi4vU3lzdGVtL0FvcCc7XHJcblxyXG5ARXhjZXB0aW9uSGFuZGxlckNsYXNzKEVycm9yQ29kZXMuQ2xpZW50Q29yZSlcclxuZXhwb3J0IGNsYXNzIEFsaWFzQmVoYXZpb3IgaW1wbGVtZW50cyBJQ2xpZW50QmVoYXZpb3Ige1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgaW5qZWN0OiBJSW5qZWN0ID0gbnVsbCkge1xyXG4gICAgICAgIHRoaXMuaW5qZWN0ID0gaW5qZWN0IHx8IEluamVjdC5JbnN0YW5jZTtcclxuICAgICAgICB0aGlzLmFsaWFzU2VydmljZSA9IHRoaXMuaW5qZWN0LnJlc29sdmUoQ29uc3RhbnRzLlR5cGVTZXJ2aWNlKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IGFsaWFzU2VydmljZTogSVR5cGVTZXJ2aWNlO1xyXG5cclxuICAgIGFwcGx5KG1vZGVsOiBJTW9kZWwsIHJvb3Q6IElFbnRpdHkpOiB2b2lkIHtcclxuICAgICAgICBpZiAoIW1vZGVsLmlzUm9vdCgpICYmICFtb2RlbC5pc1BvaW50ZXIpIHtcclxuICAgICAgICAgICAgY29uc3QgbmFtZSA9IG1vZGVsLnVuaXF1ZU5hbWUoKTtcclxuICAgICAgICAgICAgaWYgKG5hbWUubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcGFyZW50ID0gcm9vdC5nZXRQYXJlbnRCeU1vZGVsKG1vZGVsKTtcclxuICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBwYXJlbnQgaXMgYW4gYXJyYXkgdGhlIG1vZGVsJ3MgbmFtZSBpcyBhIG51bWJlciAodGhlIHBvc2l0aW9uIGluIHRoZSBhcnJheSkgd2hpY2ggZG9lc24ndCBoYXZlIGFuIGFsaWFzXHJcbiAgICAgICAgICAgICAgICBpZiAoIXBhcmVudC5pc0FycmF5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLyp0c2xpbnQ6ZGlzYWJsZTpuby1zdHJpbmctbGl0ZXJhbCAqL1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGFsaWFzID0gdGhpcy5hbGlhc1NlcnZpY2UuZ2V0QWxpYXMocGFyZW50WydAayddLCBuYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAvKnRzbGludDpkaXNhYmxlOm5vLXN0cmluZy1saXRlcmFsICovXHJcbiAgICAgICAgICAgICAgICAgICAgbW9kZWxbJ2FsaWFzTmFtZSddID0gYWxpYXM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IE9yZGVyKCk6IE9yZGVyIHtcclxuICAgICAgICByZXR1cm4gT3JkZXIuUFJFO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","map":null,"metadata":{},"sourceType":"module"}