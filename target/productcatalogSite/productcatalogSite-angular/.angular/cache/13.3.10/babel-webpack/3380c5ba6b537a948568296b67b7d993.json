{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(991);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  991:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(992)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      (function ($) {\n        var kendo = window.kendo,\n            Editor = kendo.ui.editor,\n            Tool = Editor.Tool,\n            ToolTemplate = Editor.ToolTemplate,\n            DelayedExecutionTool = Editor.DelayedExecutionTool,\n            Command = Editor.Command,\n            dom = Editor.Dom,\n            EditorUtils = Editor.EditorUtils,\n            RangeUtils = Editor.RangeUtils,\n            registerTool = EditorUtils.registerTool;\n        var FormattingTool = DelayedExecutionTool.extend({\n          init: function (options) {\n            var that = this;\n            Tool.fn.init.call(that, kendo.deepExtend({}, that.options, options));\n            that.type = \"kendoSelectBox\";\n            that.finder = {\n              getFormat: function () {\n                return \"\";\n              }\n            };\n          },\n          options: {\n            items: [{\n              text: \"Paragraph\",\n              value: \"p\"\n            }, {\n              text: \"Quotation\",\n              value: \"blockquote\"\n            }, {\n              text: \"Heading 1\",\n              value: \"h1\"\n            }, {\n              text: \"Heading 2\",\n              value: \"h2\"\n            }, {\n              text: \"Heading 3\",\n              value: \"h3\"\n            }, {\n              text: \"Heading 4\",\n              value: \"h4\"\n            }, {\n              text: \"Heading 5\",\n              value: \"h5\"\n            }, {\n              text: \"Heading 6\",\n              value: \"h6\"\n            }],\n            width: 110\n          },\n          toFormattingItem: function (item) {\n            var value = item.value;\n\n            if (!value) {\n              return item;\n            }\n\n            if (item.tag || item.className) {\n              return item;\n            }\n\n            var dot = value.indexOf(\".\");\n\n            if (dot === 0) {\n              item.className = value.substring(1);\n            } else if (dot == -1) {\n              item.tag = value;\n            } else {\n              item.tag = value.substring(0, dot);\n              item.className = value.substring(dot + 1);\n            }\n\n            return item;\n          },\n          command: function (args) {\n            var that = this;\n            var item = args.value;\n            item = this.toFormattingItem(item);\n            return new Editor.FormatCommand({\n              range: args.range,\n              formatter: function () {\n                var formatter,\n                    tags = (item.tag || item.context || \"span\").split(\",\"),\n                    format = [{\n                  tags: tags,\n                  attr: {\n                    className: item.className || \"\"\n                  }\n                }];\n\n                if ($.inArray(tags[0], dom.inlineElements) >= 0) {\n                  formatter = new Editor.GreedyInlineFormatter(format);\n                } else {\n                  formatter = new Editor.GreedyBlockFormatter(format);\n                }\n\n                formatter.editor = that.editor;\n                return formatter;\n              }\n            });\n          },\n          initialize: function (ui, initOptions) {\n            var editor = initOptions.editor;\n            var options = this.options;\n            var toolName = options.name;\n            var that = this;\n            var selectBox;\n            that.editor = editor;\n            ui.width(options.width);\n            selectBox = ui.kendoSelectBox({\n              autoWidth: true,\n              dataTextField: \"text\",\n              dataValueField: \"value\",\n              dataSource: options.items || editor.options[toolName],\n              title: editor.options.messages[toolName],\n              autoSize: true,\n              change: function () {\n                var dataItem = this.dataItem();\n\n                if (dataItem) {\n                  Tool.exec(editor, toolName, dataItem.toJSON());\n                }\n              },\n              dataBound: function () {\n                var i,\n                    items = this.dataSource.data();\n\n                for (i = 0; i < items.length; i++) {\n                  items[i] = that.toFormattingItem(items[i]);\n                }\n              },\n              highlightFirst: false,\n              template: kendo.template('<span unselectable=\"on\" style=\"display:block;#=(data.style||\"\")#\">#:data.text#</span>')\n            }).data(\"kendoSelectBox\");\n            ui.attr(\"title\", initOptions.title);\n            selectBox.wrapper.attr(\"title\", initOptions.title);\n            ui.addClass(\"k-decorated\").closest(\".k-dropdownlist, .k-combobox\").removeClass(\"k-\" + toolName).find(\"*\").addBack().attr(\"unselectable\", \"on\");\n          },\n          getFormattingValue: function (items, nodes) {\n            for (var i = 0; i < items.length; i++) {\n              var item = items[i];\n              var tag = item.tag || item.context || \"\";\n              var className = item.className ? \".\" + item.className : \"\";\n              var selector = tag + className;\n              var element = $(nodes[0]).closest(selector)[0];\n\n              if (!element) {\n                continue;\n              }\n\n              if (nodes.length == 1) {\n                return item.value;\n              }\n\n              for (var n = 1; n < nodes.length; n++) {\n                if (!$(nodes[n]).closest(selector)[0]) {\n                  break;\n                } else if (n == nodes.length - 1) {\n                  return item.value;\n                }\n              }\n            }\n\n            return \"\";\n          },\n          update: function (ui, nodes) {\n            var selectBox = $(ui).data(this.type); // necessary until formatBlock is deleted\n\n            if (!selectBox) {\n              return;\n            }\n\n            var dataSource = selectBox.dataSource,\n                items = dataSource.data(),\n                i,\n                context,\n                ancestor = dom.commonAncestor.apply(null, nodes);\n\n            if (ancestor != dom.closestEditable(ancestor) && this._ancestor == ancestor) {\n              return;\n            } else {\n              this._ancestor = ancestor;\n            }\n\n            for (i = 0; i < items.length; i++) {\n              context = items[i].context;\n              items[i].visible = !context || !!$(ancestor).closest(context).length;\n            }\n\n            dataSource.filter([{\n              field: \"visible\",\n              operator: \"eq\",\n              value: true\n            }]);\n            DelayedExecutionTool.fn.update.call(this, ui, nodes);\n            selectBox.value(this.getFormattingValue(dataSource.view(), nodes));\n            selectBox.wrapper.toggleClass(\"k-disabled\", !dataSource.view().length);\n          },\n          destroy: function () {\n            this._ancestor = null;\n          }\n        });\n        var CleanFormatCommand = Command.extend({\n          exec: function () {\n            var range = this.lockRange(true);\n            this.tagsToClean = this.options.remove || \"strong,em,span,sup,sub,del,b,i,u,font\".split(\",\");\n            RangeUtils.wrapSelectedElements(range);\n            var nodes = RangeUtils.mapAll(range, function (node) {\n              return node;\n            });\n\n            for (var c = nodes.length - 1; c >= 0; c--) {\n              var node = nodes[c];\n\n              if (!this.immutableParent(node)) {\n                this.clean(node);\n              }\n            }\n\n            this.releaseRange(range);\n          },\n          clean: function (node) {\n            if (!node || dom.isMarker(node)) {\n              return;\n            }\n\n            var name = dom.name(node);\n\n            if (name == \"ul\" || name == \"ol\") {\n              var listFormatter = new Editor.ListFormatter(name);\n              var prev = node.previousSibling;\n              var next = node.nextSibling;\n              listFormatter.unwrap(node); // clean contents\n\n              for (; prev && prev != next; prev = prev.nextSibling) {\n                this.clean(prev);\n              }\n            } else if (name == \"blockquote\") {\n              dom.changeTag(node, \"p\");\n            } else if (node.nodeType == 1 && !dom.insignificant(node)) {\n              for (var i = node.childNodes.length - 1; i >= 0; i--) {\n                this.clean(node.childNodes[i]);\n              }\n\n              node.removeAttribute(\"style\");\n              node.removeAttribute(\"class\");\n            } else {\n              unwrapListItem(node);\n            }\n\n            if ($.inArray(name, this.tagsToClean) > -1) {\n              dom.unwrap(node);\n            }\n          },\n          immutableParent: function (node) {\n            return this.immutables() && Editor.Immutables.immutableParent(node);\n          }\n        });\n\n        function unwrapListItem(node) {\n          var li = dom.closestEditableOfType(node, [\"li\"]);\n\n          if (li) {\n            var listFormatter = new Editor.ListFormatter(dom.name(li.parentNode));\n            var range = kendo.ui.editor.W3CRange.fromNode(node);\n            range.selectNode(li);\n            listFormatter.toggle(range);\n          }\n        }\n\n        $.extend(Editor, {\n          FormattingTool: FormattingTool,\n          CleanFormatCommand: CleanFormatCommand\n        });\n        registerTool(\"formatting\", new FormattingTool({\n          template: new ToolTemplate({\n            template: EditorUtils.dropDownListTemplate,\n            title: \"Format\"\n          })\n        }));\n        registerTool(\"cleanFormatting\", new Tool({\n          command: CleanFormatCommand,\n          template: new ToolTemplate({\n            template: EditorUtils.buttonTemplate,\n            title: \"Clean formatting\"\n          })\n        }));\n      })(window.kendo.jQuery);\n    }, __webpack_require__(3));\n    /***/\n\n  },\n\n  /***/\n  992:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./inlineformat\");\n    /***/\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}