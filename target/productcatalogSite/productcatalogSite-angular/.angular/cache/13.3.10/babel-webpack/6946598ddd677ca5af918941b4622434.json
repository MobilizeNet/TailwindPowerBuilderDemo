{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1366);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1112:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.userevents\");\n    /***/\n  },\n\n  /***/\n  1132:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.fx\");\n    /***/\n  },\n\n  /***/\n  1366:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n    /* jshint multistr: true */\n\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1132), __webpack_require__(1112)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"mobile.switch\",\n        name: \"Switch\",\n        category: \"mobile\",\n        description: \"The mobile Switch widget is used to display two exclusive choices.\",\n        depends: [\"fx\", \"userevents\"]\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            ui = kendo.mobile.ui,\n            outerWidth = kendo._outerWidth,\n            Widget = ui.Widget,\n            support = kendo.support,\n            CHANGE = \"change\",\n            SWITCHON = \"switch-on\",\n            SWITCHOFF = \"switch-off\",\n            MARGINLEFT = \"margin-left\",\n            ACTIVE_STATE = \"state-active\",\n            DISABLED_STATE = \"state-disabled\",\n            DISABLED = \"disabled\",\n            RESOLVEDPREFIX = support.transitions.css === undefined ? \"\" : support.transitions.css,\n            TRANSFORMSTYLE = RESOLVEDPREFIX + \"transform\";\n\n        function className(name) {\n          return \"km-\" + name;\n        }\n\n        function limitValue(value, minLimit, maxLimit) {\n          return Math.max(minLimit, Math.min(maxLimit, value));\n        }\n\n        var SWITCH_MARKUP = '<span class=\"' + className(\"switch\") + ' ' + className(\"widget\") + '\">\\\n\t        <span class=\"' + className(\"switch-wrapper\") + '\">\\\n\t            <span class=\"' + className(\"switch-background\") + '\"></span>\\\n\t        </span> \\\n\t        <span class=\"' + className(\"switch-container\") + '\">\\\n\t            <span class=\"' + className(\"switch-handle\") + '\"> \\\n\t                <span class=\"' + className(\"switch-label-on\") + '\">{0}</span> \\\n\t                <span class=\"' + className(\"switch-label-off\") + '\">{1}</span> \\\n\t            </span> \\\n\t        </span>\\\n\t    </span>';\n        var Switch = Widget.extend({\n          init: function (element, options) {\n            var that = this,\n                checked;\n            Widget.fn.init.call(that, element, options);\n            options = that.options;\n            that.wrapper = $(kendo.format(SWITCH_MARKUP, options.onLabel, options.offLabel));\n            that.handle = that.wrapper.find(\".km-switch-handle\");\n            that.background = that.wrapper.find(\".km-switch-background\");\n            that.wrapper.insertBefore(that.element).prepend(that.element);\n\n            that._drag();\n\n            that.origin = parseInt(that.background.css(MARGINLEFT), 10);\n            that.constrain = 0;\n            that.snapPoint = 0;\n            element = that.element[0];\n            element.type = \"checkbox\";\n            that._animateBackground = true;\n            checked = that.options.checked;\n\n            if (checked === null) {\n              checked = element.checked;\n            }\n\n            that.check(checked);\n            that.options.enable = that.options.enable && !that.element.attr(DISABLED);\n            that.enable(that.options.enable);\n            that.refresh();\n            kendo.notify(that, kendo.mobile.ui);\n          },\n          refresh: function () {\n            var that = this,\n                handleWidth = outerWidth(that.handle, true);\n            that.width = that.wrapper.width();\n            that.constrain = that.width - handleWidth;\n            that.snapPoint = that.constrain / 2;\n\n            if (typeof that.origin != \"number\") {\n              that.origin = parseInt(that.background.css(MARGINLEFT), 10);\n            }\n\n            that.background.data(\"origin\", that.origin);\n            that.check(that.element[0].checked);\n          },\n          events: [CHANGE],\n          options: {\n            name: \"Switch\",\n            onLabel: \"on\",\n            offLabel: \"off\",\n            checked: null,\n            enable: true\n          },\n          check: function (check) {\n            var that = this,\n                element = that.element[0];\n\n            if (check === undefined) {\n              return element.checked;\n            }\n\n            that._position(check ? that.constrain : 0);\n\n            element.checked = check;\n            that.wrapper.toggleClass(className(SWITCHON), check).toggleClass(className(SWITCHOFF), !check);\n          },\n          // alias for check, NG support\n          value: function () {\n            return this.check.apply(this, arguments);\n          },\n          destroy: function () {\n            Widget.fn.destroy.call(this);\n            this.userEvents.destroy();\n          },\n          toggle: function () {\n            var that = this;\n            that.check(!that.element[0].checked);\n          },\n          enable: function (enable) {\n            var element = this.element,\n                wrapper = this.wrapper;\n\n            if (typeof enable == \"undefined\") {\n              enable = true;\n            }\n\n            this.options.enable = enable;\n\n            if (enable) {\n              element.prop(DISABLED, false);\n            } else {\n              element.attr(DISABLED, DISABLED);\n            }\n\n            wrapper.toggleClass(className(DISABLED_STATE), !enable);\n          },\n          _resize: function () {\n            this.refresh();\n          },\n          _move: function (e) {\n            var that = this;\n            e.preventDefault();\n\n            that._position(limitValue(that.position + e.x.delta, 0, that.width - outerWidth(that.handle, true)));\n          },\n          _position: function (position) {\n            var that = this;\n            that.position = position;\n            that.handle.css(TRANSFORMSTYLE, \"translatex(\" + position + \"px)\");\n\n            if (that._animateBackground) {\n              that.background.css(MARGINLEFT, that.origin + position);\n            }\n          },\n          _start: function () {\n            if (!this.options.enable) {\n              this.userEvents.cancel();\n            } else {\n              this.userEvents.capture();\n              this.handle.addClass(className(ACTIVE_STATE));\n            }\n          },\n          _stop: function () {\n            var that = this;\n            that.handle.removeClass(className(ACTIVE_STATE));\n\n            that._toggle(that.position > that.snapPoint);\n          },\n          _toggle: function (checked) {\n            var that = this,\n                handle = that.handle,\n                element = that.element[0],\n                value = element.checked,\n                duration = kendo.mobile.application && kendo.mobile.application.os.wp ? 100 : 200,\n                distance;\n            that.wrapper.toggleClass(className(SWITCHON), checked).toggleClass(className(SWITCHOFF), !checked);\n            that.position = distance = checked * that.constrain;\n\n            if (that._animateBackground) {\n              that.background.kendoStop(true, true).kendoAnimate({\n                effects: \"slideMargin\",\n                offset: distance,\n                reset: true,\n                reverse: !checked,\n                axis: \"left\",\n                duration: duration\n              });\n            }\n\n            handle.kendoStop(true, true).kendoAnimate({\n              effects: \"slideTo\",\n              duration: duration,\n              offset: distance + \"px,0\",\n              reset: true,\n              complete: function () {\n                if (value !== checked) {\n                  element.checked = checked;\n                  that.trigger(CHANGE, {\n                    checked: checked\n                  });\n                }\n              }\n            });\n          },\n          _drag: function () {\n            var that = this;\n            that.userEvents = new kendo.UserEvents(that.wrapper, {\n              fastTap: true,\n              tap: function () {\n                if (that.options.enable) {\n                  that._toggle(!that.element[0].checked);\n                }\n              },\n              start: that._start.bind(that),\n              move: that._move.bind(that),\n              end: that._stop.bind(that)\n            });\n          }\n        });\n        ui.plugin(Switch);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}