{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1489);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1063:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.data\");\n    /***/\n  },\n\n  /***/\n  1132:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.fx\");\n    /***/\n  },\n\n  /***/\n  1136:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.draganddrop\");\n    /***/\n  },\n\n  /***/\n  1489:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1132), __webpack_require__(1063), __webpack_require__(1136)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"timeline\",\n        name: \"Timeline\",\n        category: \"web\",\n        description: \"The Kendo Timeline widget display events over time\",\n        depends: [\"userevents\"]\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            DataSource = kendo.data.DataSource,\n            Transition = kendo.effects.Transition,\n            keys = kendo.keys,\n            isArray = Array.isArray,\n            LEFT_PAGE = -1,\n            CETER_PAGE = 0,\n            RIGHT_PAGE = 1,\n            VERTICAL = \"vertical\",\n            TRANSITION_END = \"transitionEnd\",\n            VIRTUAL_PAGE_COUNT = 3,\n            VIRTUAL_PAGE_CLASS = \"timeline-event\",\n            FLAGWRAPCLASS = \"k-timeline-flag-wrap\",\n            TRACKITEMCLASS = \"k-timeline-track-item\",\n            SCROLLABLEWRAPCLASS = \"k-timeline-scrollable-wrap\",\n            NS = \".kendoTimeline\",\n            CHANGE = \"change\",\n            DEFAULTHORIZONTALCARDTEMPLATE = '# var titleField = data.titleField, subtitleField = data.subtitleField, descriptionField = data.descriptionField, imagesField = data.imagesField, actionsField = data.actionsField, altField = data.altField, data = data.data; #' + '<div class=\"k-card-inner\">' + '<div class=\"k-card-header\">' + '# if(data[titleField]) { #' + '<div class=\"k-card-title\">#: data[titleField] #</div>' + '# }' + 'if(data[subtitleField]) { #' + '<div class=\"k-card-subtitle\">#: data[subtitleField] #</div>' + '# } #' + '</div>' + '<div class=\"k-card-body\">' + '<div class=\"k-card-description\">' + '# if(data[descriptionField]) { #' + '<p>#: data[descriptionField] #</p>' + '# }' + 'if(data[imagesField] && data[imagesField].length > 0) { #' + '<img src=\"#: data[imagesField][0].src #\"  #if(data[altField]){# alt=\"#:data[altField]#\" #}# class=\"k-card-image\" />' + '# } #' + '</div>' + '</div>' + '# if(data[actionsField] && data[actionsField].length > 0) { #' + '<div class=\"k-card-actions\">' + '# for (var i = 0; i < data[actionsField].length; i++) { #' + '<a class=\"k-button k-button-md k-rounded-md k-button-flat k-button-flat-primary\" href=\"#: data[actionsField][i].url ? data[actionsField][i].url : \"\\\\#\" #\"><span class=\"k-button-text\">#: data[actionsField][i].text #</span></a>' + '# } #' + '</div>' + '# } #' + '</div>',\n            DEFAULTVERTICALCARDTEMPLATE = '# var titleField = data.titleField, subtitleField = data.subtitleField, descriptionField = data.descriptionField, imagesField = data.imagesField, navigatable = data.navigatable, collapsibleEvents = data.collapsibleEvents, actionsField = data.actionsField, altField = data.altField, data = data.data; #' + '<div class=\"k-card-inner\">' + '<div class=\"k-card-header\">' + '<div class=\"k-card-title\">' + '# if(data[titleField]) { #' + '<span class=\"k-event-title\">#: data[titleField] #</span>' + '# } #' + '<span class=\"k-event-collapse k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button\">' + '<span class=\"k-button-icon k-icon k-i-arrow-chevron-right\"></span>' + '</span></div>' + '# if(data[subtitleField]) { #' + '<div class=\"k-card-subtitle\">#: data[subtitleField] #</div>' + '# } #' + '</div>' + '<div class=\"k-card-body\">' + '<div class=\"k-card-description\">' + '# if(data[descriptionField]) { #' + '<p>#: data[descriptionField] #</p>' + '# } #' + '# if(data[imagesField] && data[imagesField].length > 0) { #' + '<img src=\"#: data[imagesField][0].src #\" #if(data[altField]){# alt=\"#:data[altField]#\" #}# class=\"k-card-image\" />' + '# } #' + '</div>' + '</div>' + '# if(data[actionsField] && data[actionsField].length > 0) { #' + '<div class=\"k-card-actions\">' + '# for (var i = 0; i < data[actionsField].length; i++) { #' + '<a class=\"k-button k-button-md k-rounded-md k-button-flat k-button-flat-primary\" href=\"#: data[actionsField][i].url ? data[actionsField][i].url : \"\\\\#\" #\"><span class=\"k-button-text\">#: data[actionsField][i].text #</span></a>' + '# } #' + '</div>' + '# } #' + '</div>',\n            HORIZONTALTRACKTEMPLATE = '# var itemTemplate = data.itemTemplate, dateField = data.dateField, dateFormat = data.dateFormat, showDateLabels = data.showDateLabels, data = data.data, year = 0; #' + '# for (var i = 0; i < data.length; i++) {' + 'if(!(data[i][dateField] instanceof Date)) {' + 'continue;' + '}' + 'var currentYear = data[i][dateField].getFullYear();' + 'if(year != currentYear) {' + 'year = currentYear; #' + '<li class=\"k-timeline-track-item k-timeline-flag-wrap\">' + '<span class=\"k-timeline-flag\">#= year #</span>' + '</li>' + '# } #' + '<li class=\"k-timeline-track-item\">' + '<div class=\"k-timeline-date-wrap\">' + '# if(showDateLabels) { #' + '<span class=\"k-timeline-date\">#= kendo.toString(data[i][dateField], dateFormat) #</span>' + '# } #' + '</div>' + '<a class=\"k-timeline-circle\"></a>' + '</li>' + '# } #',\n            VERTICALEVENTSTEMPLATE = '# var itemTemplate = data.itemTemplate, dateField = data.dateField, titleField = data.titleField, descriptionField = data.descriptionField, subtitleField = data.subtitleField, imagesField = data.imagesField, actionsField = data.actionsField, alterMode = data.alterMode, collapsibleEvents = data.collapsibleEvents, dateFormat = data.dateFormat, showDateLabels = data.showDateLabels, navigatable = data.navigatable, altField = data.altField, data = data.data, counter = 0, year = 0, reverse = false;' + 'for (var i = 0; i < data.length; i++) {' + 'if(!(data[i][dateField] instanceof Date)) {' + 'continue;' + '}' + 'var currentYear = data[i][dateField].getFullYear();' + 'if(currentYear != year) {' + 'year = currentYear; #' + '<li class=\"k-timeline-flag-wrap\">' + '<span class=\"k-timeline-flag\">#= year #</span>' + '</li>' + '# } ' + 'reverse = counter % 2 === 0 && alterMode; #' + '<li class=\"#= reverse ? \\'k-timeline-event k-reverse\\' : \\'k-timeline-event\\' #\" data-uid=\"#: data[i].uid #\">' + '<div class=\"k-timeline-date-wrap\">' + '# if(showDateLabels) { #' + '<div class=\"k-timeline-date-wrap\">' + '<span id=\"#:data[i].uid#-date\" class=\"k-timeline-date\">#= kendo.toString(data[i][dateField], dateFormat) #</span>' + '</div>' + '# } #' + '</div>' + '<a class=\"k-timeline-circle\"></a>' + '<div class=\"#= collapsibleEvents ? \\'k-timeline-card k-collapsed\\' : \\'k-timeline-card\\' #\">' + '<div class=\"k-card\" #if (navigatable) {# aria-describedby=\"#:data[i].uid#-date\" tabindex=\"0\" role=\"button\" aria-live=\"polite\" aria-atomic=\"true\"  #}#>' + '<span class=\"#= reverse ? \\'k-timeline-card-callout k-card-callout k-callout-e\\' : \\'k-timeline-card-callout k-card-callout k-callout-w\\' #\"></span>' + '#= itemTemplate({titleField: titleField, subtitleField: subtitleField, descriptionField: descriptionField, imagesField: imagesField, actionsField: actionsField, data: data[i], altField: altField, navigatable: navigatable, collapsibleEvents: collapsibleEvents}) #' + '</div>' + '</div>' + '</li>' + '# counter ++;' + '} #',\n            ARROWSHTML = '<a class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button k-timeline-arrow k-timeline-arrow-left k-disabled\" title=\"previous\">' + '<span class=\"k-button-icon k-icon k-i-arrow-60-left\"></span>' + '</a>' + '<a class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button k-timeline-arrow k-timeline-arrow-right k-disabled\" title=\"next\">' + '<span class=\"k-button-icon k-icon k-i-arrow-60-right\"></span>' + '</a>';\n\n        function className(name) {\n          return \"k-\" + name;\n        }\n\n        function calculateTransform(element) {\n          var matrix = element.css('transform');\n          var x;\n          var values;\n\n          if (matrix != \"none\") {\n            values = matrix.match(/-?[\\d\\.]+/g);\n            x = values[4];\n            return x / element.width() * 100;\n          } else {\n            return 0;\n          }\n        }\n\n        function calculateOffset(element, parentElement) {\n          return element.offset().left - parentElement.offset().left + element.width() / 2;\n        }\n\n        function applyCssStyles(element, property, value) {\n          element.css(property, value);\n        }\n\n        var Page = kendo.Class.extend({\n          init: function (container) {\n            this.cardContainer = $(\"<div class='k-card' />\");\n            var cardWrapper = $(\"<div class='k-timeline-card'></div>\").append(this.cardContainer);\n            this.element = $(\"<li class='\" + className(VIRTUAL_PAGE_CLASS) + \"'></li>\").append(cardWrapper);\n            container.append(this.element);\n          },\n          content: function (htmlContent, uid) {\n            var callOut = $(\"<span class='k-timeline-card-callout k-card-callout k-callout-n'></span>\");\n            this.cardContainer.html(htmlContent);\n            this.cardContainer.append(callOut);\n            this.element.attr(\"data-uid\", uid);\n          },\n          position: function (position) {\n            //position can be -1, 0, 1\n            this.element.css(\"transform\", \"translate3d(\" + this.element.width() * position + \"px, 0, 0)\");\n          },\n          setPageCallout: function (propery, value) {\n            var element = this.element;\n            var callOutElement = element.find(\".k-timeline-card-callout\");\n            callOutElement.css(propery, value);\n          },\n          destroy: function () {\n            var that = this;\n            that.cardContainer = null;\n            that.element.remove();\n            that.element = null;\n          }\n        });\n        var HorizontalPane = kendo.Observable.extend({\n          init: function (element, options) {\n            var that = this;\n            kendo.Observable.fn.init.call(this);\n            this.element = element;\n            var movable, transition, pages;\n            movable = new kendo.ui.Movable(that.element);\n            transition = new Transition({\n              axis: \"x\",\n              movable: movable,\n              onEnd: function () {\n                that.trigger(TRANSITION_END);\n              }\n            });\n            pages = [];\n            $.extend(that, {\n              duration: options && options.duration || 1,\n              movable: movable,\n              transition: transition,\n              pages: pages,\n              eventTemplate: options.eventTemplate,\n              eventHeight: options.eventHeight,\n              dataFieldMappings: options.dataFieldMappings\n            });\n            this.bind([TRANSITION_END], options);\n          },\n          initPages: function () {\n            var pages = this.pages,\n                element = this.element,\n                page;\n\n            for (var i = 0; i < VIRTUAL_PAGE_COUNT; i++) {\n              page = new Page(element);\n              pages.push(page);\n            }\n          },\n          repositionPages: function () {\n            var pages = this.pages;\n            pages[0].position(LEFT_PAGE);\n            pages[1].position(CETER_PAGE);\n            pages[2].position(RIGHT_PAGE);\n          },\n          setPageContent: function (page, data) {\n            var template = typeof this.eventTemplate === Function ? this.eventTemplate : kendo.template(this.eventTemplate);\n            var dataFieldMappings = this.dataFieldMappings;\n            var html;\n            html = template({\n              data: data,\n              titleField: dataFieldMappings.title,\n              subtitleField: dataFieldMappings.subtitle,\n              descriptionField: dataFieldMappings.description,\n              imagesField: dataFieldMappings.images,\n              actionsField: dataFieldMappings.actions,\n              altField: dataFieldMappings.altField\n            });\n            page.content(html, data.uid);\n          },\n          updatePage: function (isForward, data, calloutOffset) {\n            var pages = this.pages;\n            var page = isForward === null ? pages[1] : isForward ? pages[pages.length - 1] : pages[0];\n            this.setPageContent(page, data);\n            page.setPageCallout(\"left\", calloutOffset / page.element.width() * 100 + \"%\");\n          },\n          moveTo: function (offset) {\n            this.movable.moveAxis(\"x\", -offset);\n          },\n          transitionTo: function (offset, ease) {\n            this.transition.moveTo({\n              location: offset,\n              duration: this.duration,\n              ease: ease\n            });\n          },\n          destroy: function () {\n            var that = this;\n\n            for (var index = 0; index < that.pages.length; index++) {\n              that.pages[index].destroy();\n            }\n\n            that.unbind();\n            that.movable = that.transition = that.dataFieldMappings = that.eventTemplate = that.duration = that.pages = null;\n          }\n        });\n        var Timeline = kendo.ui.Widget.extend({\n          init: function (element, options) {\n            var that = this;\n            var orientation = options.orientation || that.options.orientation;\n            Widget.fn.init.call(this, element, options);\n            this.element.addClass(orientation === VERTICAL ? \"k-timeline k-widget k-timeline-vertical\" : \"k-timeline k-widget k-timeline-horizontal\");\n\n            if (orientation != VERTICAL) {\n              that._horizontal();\n            } else {\n              that._vertical();\n            }\n\n            this.element.on(\"click\", \".k-card-actions\", function (ev) {\n              var action = $(ev.target);\n              var dataItemUid = $(ev.target).closest(\".k-timeline-event\").data(\"uid\");\n              var dataItem = that.dataSource.getByUid(dataItemUid);\n              that.trigger(\"actionClick\", {\n                sender: that,\n                element: action,\n                dataItem: dataItem\n              });\n            });\n            that.currentEventIndex = 0;\n            that._forward = null;\n            that._eventPage = 1;\n            that._currentIndex = 0;\n            that._firstIndexInView = 0;\n\n            that._initDataFieldMappings();\n\n            that.setDataSource(options.dataSource);\n          },\n          _horizontal: function () {\n            var that = this;\n            var element = this.element;\n            var options = this.options;\n            var trackWrap = $(\"<div />\");\n            var trackEl = $(\"<div />\");\n            var scrollableWrap = $(\"<ul />\");\n            var eventsWrap = $(\"<div />\");\n            var eventsList = $(\"<ul />\");\n            that._trackWrap = trackWrap;\n            that._trackEl = trackEl;\n            that._scrollableWrap = scrollableWrap;\n            that._eventsWrap = eventsWrap;\n            that._eventsList = eventsList;\n            trackWrap.addClass(\"k-timeline-track-wrap\");\n            trackEl.addClass(\"k-timeline-track\");\n            scrollableWrap.addClass(\"k-timeline-scrollable-wrap\");\n            eventsWrap.addClass(\"k-timeline-events-list\");\n            eventsList.addClass(\"k-timeline-scrollable-wrap\");\n\n            if (options.eventHeight) {\n              eventsList.height(options.eventHeight);\n            }\n\n            trackEl.append(scrollableWrap);\n            trackWrap.append(ARROWSHTML);\n            trackWrap.append(trackEl);\n            eventsWrap.append(eventsList);\n            trackWrap.appendTo(element);\n            eventsWrap.appendTo(element);\n          },\n          _vertical: function () {\n            var that = this;\n            var options = this.options;\n            var element = this.element;\n            var eventsList = that._eventsList = $(\"<ul />\");\n            var navigatable = options.navigatable;\n            var collapsibleEvents = options.collapsibleEvents;\n            that.element.append(eventsList);\n\n            if (options.alternatingMode) {\n              element.addClass(\"k-timeline-alternating\");\n            }\n\n            if (collapsibleEvents) {\n              element.addClass(\"k-timeline-collapsible\");\n              this.element.on(\"click\", \".k-card-header\", function () {\n                var card = $(this).closest(\".k-timeline-card\");\n                var itemWrapper = card.parent();\n                var dataItem = that.dataSource.getByUid(itemWrapper.data(\"uid\"));\n\n                if (card.hasClass(\"k-collapsed\")) {\n                  if (!that.trigger(\"expand\", {\n                    sender: that,\n                    dataItem: dataItem\n                  })) {\n                    that.expand(itemWrapper);\n                  }\n                } else {\n                  if (!that.trigger(\"collapse\", {\n                    sender: that,\n                    dataItem: dataItem\n                  })) {\n                    that.collapse(itemWrapper);\n                  }\n                }\n              });\n            }\n\n            if (navigatable) {\n              if (collapsibleEvents) {\n                this.element.on(\"keydown\" + NS, that, function (e) {\n                  if (e.keyCode == keys.SPACEBAR || e.keyCode == keys.ENTER) {\n                    var target = $(e.target);\n                    var header = target.find(\".k-card-header\");\n\n                    if (header.length) {\n                      e.preventDefault();\n                      header.trigger(\"click\");\n                    }\n                  }\n                });\n              }\n            }\n          },\n          _renderContentVertical: function (data) {\n            var that = this;\n            var options = that.options;\n            var html;\n            var itemTemplate;\n\n            if (typeof options.eventTemplate === Function) {\n              itemTemplate = options.eventTemplate;\n            } else {\n              itemTemplate = options.eventTemplate ? kendo.template(options.eventTemplate) : kendo.template(DEFAULTVERTICALCARDTEMPLATE, {\n                useWithBlock: false\n              });\n            }\n\n            var template = kendo.template(VERTICALEVENTSTEMPLATE, {\n              useWithBlock: false\n            });\n            html = template({\n              data: data,\n              dateField: options.dataDateField,\n              titleField: options.dataTitleField,\n              subtitleField: options.dataSubtitleField,\n              descriptionField: options.dataDescriptionField,\n              imagesField: options.dataImagesField,\n              actionsField: options.dataActionsField,\n              itemTemplate: itemTemplate,\n              alterMode: options.alternatingMode,\n              collapsibleEvents: options.collapsibleEvents,\n              dateFormat: options.dateFormat,\n              showDateLabels: options.showDateLabels,\n              altField: options.dataImagesAltField,\n              navigatable: options.navigatable\n            });\n\n            this._eventsList.html(html);\n\n            if (options.eventWidth) {\n              that.element.find(\".k-card\").width(options.eventWidth);\n            }\n          },\n          _renderContentHorizontal: function (data) {\n            var that = this;\n            var options = that.options;\n            var html;\n            var itemTemplate;\n            var dataFieldMappings = that._dataFieldMappings;\n\n            if (typeof options.eventTemplate === Function) {\n              itemTemplate = options.eventTemplate;\n            } else {\n              itemTemplate = options.eventTemplate ? kendo.template(options.eventTemplate) : kendo.template(DEFAULTHORIZONTALCARDTEMPLATE, {\n                useWithBlock: false\n              });\n            }\n\n            var trackTemplate = kendo.template(HORIZONTALTRACKTEMPLATE, {\n              useWithBlock: false\n            });\n            html = trackTemplate({\n              data: data,\n              itemTemplate: itemTemplate,\n              dateFormat: options.dateFormat,\n              dateField: options.dataDateField,\n              showDateLabels: options.showDateLabels\n            });\n\n            if (options.initialEventIndex) {\n              that._trackWrap.append($(html).find(\".k-timeline-scrollable-wrap\").css(\"transform\", \"translateX(-100%)\").parent());\n            } else {\n              that._scrollableWrap.html(html);\n            }\n\n            if (that.pane) {\n              that.pane.destroy();\n            }\n\n            that.pane = new HorizontalPane(that._eventsList, {\n              transitionEnd: this._transitionEnd.bind(this),\n              eventTemplate: itemTemplate,\n              dataFieldMappings: dataFieldMappings,\n              eventHeight: options.eventHeight\n            });\n          },\n          _initDataFieldMappings: function () {\n            var that = this;\n            var options = that.options;\n            that._dataFieldMappings = {\n              \"title\": options.dataTitleField,\n              \"subtitle\": options.dataSubtitleField,\n              \"date\": options.dataDateField,\n              \"description\": options.dataDescriptionField,\n              \"images\": options.dataImagesField,\n              \"actions\": options.dataActionsField,\n              \"altField\": options.dataImagesAltField\n            };\n          },\n          _transitionEnd: function () {\n            if (this._forward) {\n              this.pane.pages.push(this.pane.pages.shift()); //forward\n            } else {\n              this.pane.pages.unshift(this.pane.pages.pop()); //back\n            }\n\n            this._forward = null;\n            this.pane.repositionPages();\n            this.pane.movable.moveAxis(\"x\", 0);\n\n            if (this.options.navigatable) {\n              this._transition = null;\n\n              this._eventsList.find(\".k-card\").removeAttr(\"id\");\n\n              this.pane.pages[1].cardContainer.attr(\"id\", this._cardId);\n\n              this._setCurrent(this._currentBullet);\n            }\n\n            this._animationInProgress = false;\n          },\n          _setCurrentEvent: function (event) {\n            var that = this;\n            var trackItem = $(event.currentTarget);\n            var eventContainer;\n            var dataItem = that.dataSource.view()[trackItem.parent().children(\":not(.k-timeline-flag-wrap)\").index(trackItem)];\n            eventContainer = that._forward ? that.pane.pages[2].element : that.pane.pages[0].element;\n\n            if (!that.trigger(\"change\", {\n              eventContainer: eventContainer,\n              dataItem: dataItem\n            })) {\n              that.open(trackItem);\n            }\n          },\n          open: function (element) {\n            var that = this;\n            var trackItem = $(element);\n            var trackItemCircle = trackItem.find(\".k-timeline-circle\");\n            var trackItems = trackItem.parent().children(\":not(.k-timeline-flag-wrap)\");\n            var itemIndex = trackItems.index(trackItem);\n            var forward;\n\n            if (this.options.navigatable) {\n              that._removeCurrent();\n\n              trackItems.attr(\"aria-selected\", false);\n              trackItem.attr(\"aria-selected\", true);\n              that._currentBullet = trackItem; //needed for screenreaders to announce at a later stage the item\n            }\n\n            var dataItem = that.dataSource.view()[itemIndex];\n\n            if (that.currentEventIndex === itemIndex) {\n              return;\n            }\n\n            that._currentIndex = trackItem.index();\n            forward = that._forward = that.currentEventIndex < itemIndex;\n            that.currentEventIndex = itemIndex;\n            that.pane.updatePage(forward, dataItem, calculateOffset(trackItemCircle, that._trackWrap));\n\n            if (that._forward) {\n              clearTimeout(that.navigateTimeOut);\n              that.navigateTimeOut = setTimeout(function () {\n                that.pane.transition.moveTo({\n                  location: -that.pane.pages[2].element.width(),\n                  duration: 800,\n                  ease: Transition.easeOutExpo\n                });\n              }, 200);\n            } else {\n              clearTimeout(that.navigateTimeOut);\n              that.navigateTimeOut = setTimeout(function () {\n                that.pane.transition.moveTo({\n                  location: that.pane.pages[0].element.width(),\n                  duration: 800,\n                  ease: Transition.easeOutExpo\n                });\n              }, 200);\n            }\n\n            that._repositionEvents();\n          },\n          _navigateToView: function (event) {\n            var that = this;\n            var delta = $(event.currentTarget).hasClass(\"k-timeline-arrow-right\") ? 1 : -1;\n\n            if (!that.trigger(\"navigate\", {\n              sender: that,\n              action: delta > 0 ? \"next\" : \"previous\"\n            }) && !that._animationInProgress) {\n              that._animationInProgress = true;\n\n              if (delta > 0) {\n                that.next();\n              } else {\n                that.previous();\n              }\n\n              that._updateArrows();\n            }\n          },\n          _updateArrows: function () {\n            var that = this;\n            var arrows = that.element.find(\".k-timeline-arrow\");\n            var leftArrow = arrows.filter(\".k-timeline-arrow-left\");\n            var rightArrow = arrows.filter(\".k-timeline-arrow-right\");\n\n            if (that._validateNavigation(false)) {\n              leftArrow.addClass(\"k-disabled\");\n            } else {\n              leftArrow.removeClass(\"k-disabled\");\n            }\n\n            if (that._validateNavigation(true)) {\n              rightArrow.addClass(\"k-disabled\");\n            } else {\n              rightArrow.removeClass(\"k-disabled\");\n            }\n          },\n          _validateNavigation: function (next) {\n            var that = this;\n            var transform = that._end || 0;\n\n            if (next) {\n              return that._firstIndexInView + that.numOfEvents >= that.maxEvents;\n            } else {\n              return Math.abs(transform) <= 1;\n            }\n          },\n          next: function () {\n            var that = this;\n            var options = that.options;\n\n            if (!that._validateNavigation(true) && options.orientation != VERTICAL) {\n              that._forward = true;\n\n              that._navigate();\n            }\n\n            that._updateArrows();\n          },\n          _navigate: function () {\n            var that = this;\n            var firstEventInViewIndex;\n            var firstEventInView;\n            var dataItem;\n            var width;\n            var forward = that._forward;\n            var end = calculateTransform(this._trackWrap.find(\".\" + SCROLLABLEWRAPCLASS));\n            var leftOffset = forward ? -$(\".\" + SCROLLABLEWRAPCLASS).width() : $(\".\" + SCROLLABLEWRAPCLASS).width();\n            var currentIndex = that._currentIndex;\n            var currentPage;\n            var firstIndexInView = that._firstIndexInView;\n            end = forward ? end - 100 : end + 100;\n\n            if (end >= 0) {\n              end = 0;\n            }\n\n            that._end = end;\n            width = that._tackItemWidth;\n            currentPage = Math.floor(currentIndex / that.numOfEvents);\n\n            if (forward) {\n              if (that.numOfEvents === 1) {\n                firstEventInViewIndex = firstIndexInView === 0 ? 1 : firstIndexInView;\n                firstEventInView = this._trackWrap.find(\".\" + TRACKITEMCLASS).eq(firstEventInViewIndex).nextAll(\":not(.\" + FLAGWRAPCLASS + \")\").first();\n                that._firstIndexInView = firstEventInView.index();\n              } else {\n                firstEventInViewIndex = firstIndexInView + that.numOfEvents - 1;\n                firstEventInView = this._trackWrap.find(\".\" + TRACKITEMCLASS).eq(firstEventInViewIndex).nextAll(\":not(.\" + FLAGWRAPCLASS + \")\").first();\n                that._firstIndexInView = firstIndexInView + that.numOfEvents;\n              }\n            } else {\n              if (that.numOfEvents === 1) {\n                firstEventInViewIndex = firstIndexInView;\n                firstEventInView = this._trackWrap.find(\".\" + TRACKITEMCLASS).eq(firstEventInViewIndex).prevAll(\":not(.\" + FLAGWRAPCLASS + \")\").first();\n                that._firstIndexInView = firstEventInView.index();\n              } else {\n                firstEventInViewIndex = firstIndexInView;\n                firstEventInView = this._trackWrap.find(\".\" + TRACKITEMCLASS).eq(firstEventInViewIndex).prevAll(\":not(.\" + FLAGWRAPCLASS + \")\").first();\n                firstEventInView = firstEventInView.length > 0 ? firstEventInView : this._trackWrap.find(\".\" + TRACKITEMCLASS + \":not(.\" + FLAGWRAPCLASS + \")\").first();\n                that._firstIndexInView = firstIndexInView - that.numOfEvents < 0 ? 0 : firstIndexInView - that.numOfEvents;\n              }\n            }\n\n            dataItem = that.dataSource.view()[firstEventInView.index(\"li[class='k-timeline-track-item']\")];\n\n            this._trackWrap.find(\".\" + SCROLLABLEWRAPCLASS).css(\"transform\", \"translateX(\" + end + \"%)\");\n\n            if (that._currentIndex != firstEventInView.index()) {\n              that.currentEventIndex = firstEventInView.index(\"li[class='k-timeline-track-item']\");\n              that._currentIndex = firstEventInView.index();\n              that.pane.updatePage(that._forward, dataItem, currentPage === 0 && !forward ? firstEventInView.find(\".k-timeline-circle\").offset().left + 15 : calculateOffset(firstEventInView.find(\".k-timeline-circle\"), that._trackWrap) + leftOffset);\n              clearTimeout(that.navigateTimeOut);\n              that.navigateTimeOut = setTimeout(function () {\n                if (forward && that.pane && that.pane.pages.length > 0) {\n                  that.pane.transition.moveTo({\n                    location: -that.pane.pages[2].element.width(),\n                    duration: 800,\n                    ease: Transition.easeOutExpo\n                  });\n                } else {\n                  that.pane.transition.moveTo({\n                    location: that.pane.pages[0].element.width(),\n                    duration: 800,\n                    ease: Transition.easeOutExpo\n                  });\n                }\n              }, 200);\n            } else {\n              var scrollWrapElement = this._trackWrap.find(\".\" + SCROLLABLEWRAPCLASS);\n\n              var transitionEndHandler = function () {\n                if (that.numOfEvents != 1) {\n                  var page = that.pane.pages[1];\n                  var calloutOffset = calculateOffset(firstEventInView.find(\".k-timeline-circle\"), that._trackWrap);\n                  page.setPageCallout(\"left\", calloutOffset / page.element.width() * 100 + \"%\");\n                }\n\n                this._transition = null;\n                scrollWrapElement.off('transitionend' + NS, transitionEndHandler);\n              };\n\n              scrollWrapElement.on('transitionend' + NS, transitionEndHandler);\n            }\n          },\n          previous: function () {\n            var that = this;\n            var options = that.options;\n\n            if (!that._validateNavigation(false) && options.orientation != VERTICAL) {\n              that._forward = false;\n\n              that._navigate();\n            }\n\n            that._updateArrows();\n          },\n          expand: function (event) {\n            var options = this.options,\n                cardWrapper = $(event).find(\".k-timeline-card\"),\n                cardElement = $(event).find(\".k-card\"),\n                cardBody = $(event).find(\".k-card-body\");\n\n            if (!cardWrapper.hasClass(\"k-collapsed\")) {\n              return;\n            }\n\n            if (options.navigatable && options.collapsibleEvents) {\n              cardElement.attr(\"aria-expanded\", true);\n            }\n\n            cardWrapper.removeClass('k-collapsed');\n            kendo.fx(cardBody).expand(\"vertical\").stop().play();\n          },\n          collapse: function (event) {\n            var options = this.options,\n                cardWrapper = $(event).find(\".k-timeline-card\"),\n                cardElement = $(event).find(\".k-card\"),\n                cardBody = $(event).find(\".k-card-body\");\n\n            if (cardWrapper.hasClass(\"k-collapsed\")) {\n              return;\n            }\n\n            if (options.navigatable && options.collapsibleEvents) {\n              cardElement.attr(\"aria-expanded\", false);\n            }\n\n            cardWrapper.addClass(\"k-collapsed\");\n            kendo.fx(cardBody).expand(\"vertical\").stop().reverse();\n          },\n          items: function () {\n            return this.element.find(\"li[data-uid]\");\n          },\n          _resizeHandler: function () {\n            var that = this;\n            clearTimeout(that.resizeTimeOut);\n            that.resizeTimeOut = setTimeout(function () {\n              that._redrawEvents();\n\n              that.pane.repositionPages();\n            });\n          },\n          redraw: function () {\n            var options = this.options;\n\n            if (options.orientation != VERTICAL) {\n              this._redrawEvents();\n\n              this.pane.repositionPages();\n            }\n          },\n          _redrawEvents: function () {\n            var that = this;\n            var numOfEvents = Math.floor(that.element.find(\".k-timeline-scrollable-wrap\").width() / 150);\n            var width;\n\n            if (that.element.width() <= 480) {\n              that.element.addClass(\"k-timeline-mobile\");\n              width = 100;\n              that.numOfEvents = 1;\n              that._tackItemWidth = width;\n              that.element.find(\"li.k-timeline-track-item\").css(\"flex\", \"1 0 \" + width + \"%\");\n\n              that._repositionEvents();\n            } else {\n              that.element.removeClass(\"k-timeline-mobile\");\n\n              if (numOfEvents != that.numOfEvents) {\n                that.numOfEvents = numOfEvents;\n                width = 100 / numOfEvents;\n                applyCssStyles(that.element.find(\"li.k-timeline-track-item\"), \"flex\", \"1 0 \" + width + \"%\");\n                that._tackItemWidth = width;\n\n                that._repositionEvents();\n              }\n            }\n\n            that._updateArrows();\n          },\n          _repositionEvents: function () {\n            var that = this;\n            var width = that._tackItemWidth;\n            var page = that._forward === null ? that.pane.pages[1] : that._forward ? that.pane.pages[2] : that.pane.pages[0];\n\n            var trackWrapScrollableElement = this._trackWrap.find(\".\" + SCROLLABLEWRAPCLASS);\n\n            var end = calculateTransform(trackWrapScrollableElement);\n            var calloutOffset;\n            var offset;\n            var leftOffset;\n            var circleElement;\n\n            if (that.numOfEvents === 1) {\n              offset = that.currentEventIndex * width;\n            } else {\n              offset = that._currentIndex * width;\n            }\n\n            if (page) {\n              if (that.numOfEvents === 1) {\n                page.setPageCallout(\"left\", \"50%\");\n                leftOffset = offset;\n                applyCssStyles(trackWrapScrollableElement, \"transform\", \"translateX(-\" + leftOffset + \"%)\");\n                that._firstIndexInView = that._currentIndex;\n\n                that._updateArrows();\n\n                return;\n              }\n\n              if (offset >= Math.abs(end) + 100) {\n                leftOffset = Math.abs(end) + (offset - (Math.abs(end) + 100) + width);\n                that._end = -leftOffset;\n                applyCssStyles(trackWrapScrollableElement, \"transform\", \"translateX(-\" + leftOffset + \"%)\");\n                that._firstIndexInView = that._currentIndex - that.numOfEvents + 1;\n              } else if (offset <= Math.abs(end)) {\n                leftOffset = offset;\n                that._end = -leftOffset;\n                applyCssStyles(trackWrapScrollableElement, \"transform\", \"translateX(-\" + leftOffset + \"%)\");\n                that._firstIndexInView = that._currentIndex;\n              } else {\n                circleElement = trackWrapScrollableElement.find(\"li.k-timeline-track-item\").eq(that._currentIndex).find(\".k-timeline-circle\");\n                calloutOffset = calculateOffset(circleElement, that._trackWrap);\n                page.setPageCallout(\"left\", calloutOffset / page.element.width() * 100 + \"%\");\n                that._firstIndexInView = Math.round(Math.abs(end) / width);\n              }\n\n              var scrollWrapElement = this._trackWrap.find(\".\" + SCROLLABLEWRAPCLASS);\n\n              var transitionEndHandler = function () {\n                if (that.numOfEvents != 1) {\n                  var page = that.pane.pages[1];\n\n                  var eventElement = that._trackWrap.find(\".\" + TRACKITEMCLASS).eq(that._currentIndex);\n\n                  var calloutOffset = calculateOffset(eventElement.find(\".k-timeline-circle\"), that._trackWrap);\n                  page.setPageCallout(\"left\", calloutOffset / page.element.width() * 100 + \"%\");\n                }\n\n                scrollWrapElement.off('transitionend' + NS, transitionEndHandler);\n              };\n\n              scrollWrapElement.on('transitionend' + NS, transitionEndHandler);\n            }\n\n            that._updateArrows();\n          },\n          _initHorizontal: function () {\n            var that = this;\n\n            var firstEventElement = that._trackWrap.find(\".k-timeline-circle\").first();\n\n            var dataItem = that.dataSource.view()[0];\n            var navigatable = that.options.navigatable;\n            that.maxEvents = that._trackWrap.find(\".k-timeline-track-item\").length;\n            that._currentIndex = 1;\n            that.pane.initPages();\n            that.pane.repositionPages();\n            that.pane.updatePage(that._forward, dataItem, calculateOffset(firstEventElement, that._trackWrap));\n\n            that._updateArrows();\n\n            that._resizeHandlerBound = that._resizeHandler.bind(that);\n            kendo.jQuery(window).on(\"resize\" + NS, that._resizeHandlerBound);\n\n            that._trackWrap.on(\"click\", \".k-timeline-track-item:not(.k-timeline-flag-wrap)\", that._setCurrentEvent.bind(that));\n\n            that._trackWrap.on(\"click\", \".k-timeline-arrow:not(.k-disabled)\", that._navigateToView.bind(that));\n\n            if (navigatable) {\n              that._trackWrap.find(\".k-timeline-track-item.k-timeline-flag-wrap\").attr(\"aria-hidden\", true);\n\n              that._trackWrap.find(\".k-timeline-track-item:not(.k-timeline-flag-wrap)\").attr(\"role\", \"option\").attr(\"aria-selected\", false).first().attr(\"aria-selected\", true);\n\n              that._cardId = kendo.guid();\n\n              that._scrollableWrap.attr(\"role\", \"listbox\").attr(\"aria-orientation\", \"horizontal\").attr(\"tabindex\", 0).on(\"focus\" + NS, function () {\n                that.pane.pages[1].cardContainer.attr(\"id\", that._cardId);\n\n                that._setCurrent(that._scrollableWrap.find(\".k-timeline-track-item\").eq(that._currentIndex));\n              }).on(\"focusout\" + NS, function () {\n                that._removeCurrent();\n              }).on(\"keydown\" + NS, function (e) {\n                var handled;\n                var current = that._currentBullet;\n                var itemOffset;\n                var next;\n\n                if (that._transition) {\n                  return;\n                }\n\n                if (e.keyCode == keys.LEFT) {\n                  handled = true;\n                  next = current.prevAll(\".k-timeline-track-item:not(.k-timeline-flag-wrap)\").first();\n\n                  if (next.length) {\n                    itemOffset = calculateOffset(next, that._trackWrap);\n\n                    if (itemOffset < 0 || itemOffset > next.parent().width()) {\n                      that._transition = true;\n\n                      that._removeCurrent();\n\n                      that.previous();\n                      that.open(next);\n                    } else {\n                      that._setCurrent(next);\n                    }\n                  }\n                }\n\n                if (e.keyCode == keys.RIGHT) {\n                  handled = true;\n                  next = current.nextAll(\".k-timeline-track-item:not(.k-timeline-flag-wrap)\").first();\n\n                  if (next.length) {\n                    itemOffset = calculateOffset(next, that._trackWrap);\n\n                    if (itemOffset < 0 || itemOffset > next.parent().width()) {\n                      //itemOffset > 0 && itemOffset < parentWidth\n                      that._transition = true;\n\n                      that._removeCurrent();\n\n                      that.next();\n                      that.open(next);\n                    } else {\n                      that._setCurrent(next);\n                    }\n                  }\n                }\n\n                if (e.keyCode == keys.SPACEBAR || e.keyCode == keys.ENTER) {\n                  handled = true;\n\n                  that._currentBullet.trigger(\"click\");\n                }\n\n                if (handled) {\n                  //prevent scrolling while pressing the keys\n                  e.preventDefault();\n                }\n              });\n\n              that._ariaLabel(that._scrollableWrap);\n            }\n          },\n          _setCurrent: function (next) {\n            if (!next) {\n              return;\n            }\n\n            var id = kendo.guid();\n            var that = this;\n\n            that._removeCurrent();\n\n            that._scrollableWrap.attr(\"aria-activedescendant\", id);\n\n            next.attr(\"id\", id).addClass(\"k-state-focus\");\n            next.siblings().removeAttr(\"aria-describedby\");\n\n            if (next.attr(\"aria-selected\") === \"true\") {\n              next.attr(\"aria-describedby\", that._cardId);\n            }\n\n            that._currentBullet = next;\n          },\n          _removeCurrent: function () {\n            if (this._currentBullet) {\n              this._currentBullet.removeClass(\"k-state-focus\").removeAttr(\"id\").removeAttr(\"aria-describedby\");\n            }\n\n            this._scrollableWrap.removeAttr(\"aria-activedescendant\");\n          },\n          setDataSource: function (dataSource) {\n            var that = this;\n            var options = that.options;\n            dataSource = isArray(dataSource) ? {\n              data: dataSource\n            } : dataSource;\n\n            if (that.dataSource && that._refresh) {\n              that.dataSource.unbind(CHANGE, that._refresh);\n            } else {\n              this._refresh = that.refresh.bind(that);\n            }\n\n            this.dataSource = DataSource.create(dataSource);\n\n            if (this.dataSource._sort === undefined) {\n              this.dataSource._sort = [{\n                field: options.dataDateField,\n                dir: \"asc\"\n              }];\n            }\n\n            that.dataSource.bind(CHANGE, that._refresh);\n\n            if (options.autoBind) {\n              this.dataSource.fetch();\n            }\n          },\n          refresh: function () {\n            var that = this;\n            var options = that.options;\n            var data = this.dataSource.view();\n\n            if (options.orientation != VERTICAL) {\n              that._trackWrap.empty().remove();\n\n              that.element.find('.k-timeline-events-list').remove();\n\n              that._horizontal();\n            }\n\n            that.currentEventIndex = 0;\n            that._forward = null;\n            that._eventPage = 1;\n            that._currentIndex = 0;\n            that._firstIndexInView = 0;\n            that.numOfEvents = null;\n            that._end = 0;\n\n            that._initDataFieldMappings();\n\n            if (data.length) {\n              if (options.orientation === \"horizontal\") {\n                that._renderContentHorizontal(data);\n\n                that._redrawEvents();\n\n                that._initHorizontal();\n              } else {\n                that._renderContentVertical(data);\n              }\n            }\n\n            that.trigger(\"dataBound\", {\n              sender: that\n            });\n          },\n          destroy: function () {\n            var options = this.options;\n            Widget.fn.destroy.call(this);\n\n            if (this.resizeTimeOut) {\n              clearTimeout(this.resizeTimeOut);\n            }\n\n            if (this.navigateTimeOut) {\n              clearTimeout(this.navigateTimeOut);\n            }\n\n            $(window).off(\"resize\" + NS, this._resizeHandlerBound);\n            this._resizeHandlerBound = null;\n            this.element.off();\n\n            if (options.orientation != VERTICAL) {\n              if (this.pane) {\n                this.pane.destroy();\n              }\n\n              this._trackWrap.find(\".\" + SCROLLABLEWRAPCLASS).off();\n\n              this.element.find(\".k-timeline-arrow\").off();\n\n              this._trackWrap.off();\n\n              this.currentEventIndex = this.maxEvents = this.numOfEvents = this._currentIndex = this._eventPage = this._eventsList = this._eventsWrap = this.element = this._trackWrap = this.pane = null;\n            }\n\n            kendo.destroy(this.element);\n            this._dataFieldMappings = this.element = null;\n          },\n          options: {\n            autoBind: true,\n            name: \"Timeline\",\n            orientation: \"vertical\",\n            dateFormat: \"MMM d, yyyy\",\n            showDateLabels: true,\n            collapsibleEvents: false,\n            alternatingMode: false,\n            dataTitleField: \"title\",\n            dataDateField: \"date\",\n            dataSubtitleField: \"subtitle\",\n            dataDescriptionField: \"description\",\n            dataImagesField: \"images\",\n            dataActionsField: \"actions\",\n            dataImagesAltField: \"altField\",\n            navigatable: false\n          },\n          events: [\"collapse\", \"dataBound\", \"expand\", \"actionClick\", \"change\", \"navigate\"]\n        });\n        kendo.ui.plugin(Timeline);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}