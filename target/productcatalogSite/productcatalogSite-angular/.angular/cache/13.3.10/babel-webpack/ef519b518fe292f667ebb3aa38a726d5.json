{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(981);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  981:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(982)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            Editor = kendo.ui.editor,\n            EditorUtils = Editor.EditorUtils,\n            Command = Editor.Command,\n            Tool = Editor.Tool,\n            registerTool = EditorUtils.registerTool,\n            ToolTemplate = Editor.ToolTemplate,\n            defaultExportAsItems = [{\n          text: 'Docx',\n          value: 'docx'\n        }, {\n          text: 'Rtf',\n          value: 'rtf'\n        }, {\n          text: 'Pdf',\n          value: 'pdf'\n        }, {\n          text: 'Html',\n          value: 'html'\n        }, {\n          text: 'Plain Text',\n          value: 'txt'\n        }];\n        var ExportAsCommand = Command.extend({\n          init: function (options) {\n            var cmd = this;\n            cmd.options = options;\n            Command.fn.init.call(cmd, options);\n            cmd.attributes = null;\n            cmd.exportType = options.exportType;\n          },\n          exec: function () {\n            var cmd = this;\n            var range = this.lockRange(true);\n            cmd.postToProxy();\n            cmd.releaseRange(range);\n          },\n          postToProxy: function () {\n            this.generateForm().appendTo('body').submit().remove();\n          },\n          generateForm: function () {\n            var cmd = this;\n            var exportAsOptions = cmd.editor.options.exportAs;\n            var form = $('<form>').attr({\n              action: exportAsOptions && exportAsOptions.proxyURL || \"\",\n              method: 'POST'\n            });\n            form.append([cmd.valueInput(), cmd.exportTypeInput(), cmd.fileNameInput()]);\n            return form;\n          },\n          valueInput: function () {\n            var editor = this.editor;\n            return $('<input>').attr({\n              value: editor.encodedValue(),\n              name: 'value',\n              type: 'hidden'\n            });\n          },\n          exportTypeInput: function () {\n            var cmd = this;\n            return $('<input>').attr({\n              value: cmd.exportType,\n              name: 'exportType',\n              type: 'hidden'\n            });\n          },\n          fileNameInput: function () {\n            var editor = this.editor;\n            var exportAsOptions = editor.options.exportAs;\n            var fileName = exportAsOptions && exportAsOptions.fileName || editor.element.attr(\"id\") || \"editor\";\n            return $('<input>').attr({\n              value: fileName,\n              name: 'fileName',\n              type: 'hidden'\n            });\n          }\n        });\n        var ExportAsTool = Tool.extend({\n          init: function (options) {\n            var tool = this;\n            Tool.fn.init.call(tool, kendo.deepExtend({}, tool.options, options));\n            tool.type = 'kendoSelectBox';\n          },\n          options: {\n            items: defaultExportAsItems,\n            width: 140\n          },\n          command: function (args) {\n            var value = args.value;\n            return new Editor.ExportAsCommand({\n              range: args.range,\n              exportType: value.exportType\n            });\n          },\n          initialize: function (ui, initOptions) {\n            var tool = this;\n            var editor = initOptions.editor;\n            var options = tool.options;\n            var toolName = options.name;\n            var changeHandler = tool.changeHandler.bind(tool);\n            var dataSource = options.items || editor.options[toolName];\n            var displayName = editor.options.messages[toolName];\n            var selectBox;\n            dataSource.unshift({\n              text: displayName,\n              value: \"\"\n            });\n            tool.editor = editor;\n            ui.width(options.width);\n            selectBox = ui.kendoSelectBox({\n              dataTextField: 'text',\n              dataValueField: 'value',\n              dataSource: dataSource,\n              autoSize: true,\n              change: changeHandler,\n              open: function (e) {\n                var sender = e.sender;\n                sender.items()[0].style.display = \"none\";\n                sender.unbind(\"open\");\n              },\n              highlightFirst: false,\n              template: kendo.template('<span unselectable=\"on\" style=\"display:block;#=(data.style||\"\")#\">#:data.text#</span>'),\n              valueTemplate: '<span class=\"k-editor-export\"><span class=\"k-icon k-i-export\"></span><span class=\"k-export-tool-text\">' + displayName + '</span></span>'\n            }).data(\"kendoSelectBox\");\n            ui.attr(\"title\", initOptions.title);\n            selectBox.wrapper.attr(\"title\", initOptions.title);\n            ui.addClass('k-decorated').closest('.k-dropdownlist').removeClass('k-' + toolName).find('*').addBack().attr('unselectable', 'on');\n          },\n          changeHandler: function (e) {\n            var sender = e.sender;\n            var dataItem = sender.dataItem();\n            var value = dataItem && dataItem.value;\n\n            this._exec(value);\n\n            sender.value(\"\");\n          },\n          _exec: function (value) {\n            if (value) {\n              Tool.exec(this.editor, this.options.name, {\n                exportType: value\n              });\n            }\n          },\n          destroy: function () {\n            this._ancestor = null;\n          }\n        });\n        extend(Editor, {\n          ExportAsTool: ExportAsTool,\n          ExportAsCommand: ExportAsCommand\n        });\n        registerTool('exportAs', new ExportAsTool({\n          template: new ToolTemplate({\n            template: EditorUtils.dropDownListTemplate,\n            title: 'Export As'\n          })\n        }));\n      })(window.kendo.jQuery);\n    }, __webpack_require__(3));\n    /***/\n\n  },\n\n  /***/\n  982:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../main\");\n    /***/\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}