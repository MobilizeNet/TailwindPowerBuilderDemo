{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { ActionModelV5, ActionServiceV5 } from '.';\nimport { App } from '../../Application';\nimport { PendingActionWorker } from '../../Application/DeltaWorkers/PendingActionWorker';\nimport { Constants, Resolve } from '../../Contract';\nimport { ChangeNotifier } from '../../Core';\nimport { Commands } from '../../UI/Command';\nimport { DirtyCacheV5, ModelFactoryV5, ModelResolverV5 } from '../Core';\nimport { BuildStyleBehavior, EventBehavior, ReferenceBehavior, StyleBehavior } from '../Core/Behaviors';\nimport { ModelCollectionV5 } from '../Core/ModelCollection';\nimport { RequestBuilderV5, UrlResolverV5 } from '../Server';\nimport { ViewManagerV5 } from '../UI';\nimport { ArrangeWindowCommandV5, BringToFront, ChangeMenuV5, GridPrintCommand, ModalExecutionCommand, OpenViewV5, StylesChangedCommand, UpdateRangesCommand } from '../UI/Command';\nimport { ChangeFocusControlV5 } from '../UI/Command/ChangeFocusControlV5';\nimport { DisposeWindowCommandV5 } from '../UI/Command/DisposeWindowCommandV5';\nimport { DownloadFileCommand } from '../UI/Command/DownloadFile';\nimport { OpenExternalLinkCommandV5 } from '../UI/Command/OpenExternalLinkCommandV5';\nimport { SetTextToDataManagerCommandV5 } from '../UI/Command/SetTextToDataManagerCommandV5';\nimport { StartEditV5 } from '../UI/Command/StartEditV5';\nimport { ActionWorker, ModelWorker, VisualWorker } from './DeltaWorkers';\n\nvar AppV5 = function (_super) {\n  __extends(AppV5, _super);\n\n  function AppV5(inject) {\n    if (inject === void 0) {\n      inject = null;\n    }\n\n    return _super.call(this, inject) || this;\n  }\n\n  AppV5.prototype.init = function (controller, action, callback, appname, requestConfig, queryString) {\n    if (controller === void 0) {\n      controller = '';\n    }\n\n    if (action === void 0) {\n      action = '';\n    }\n\n    this.register();\n    this.initResolve();\n    this.loadInitialState(controller, action, callback, appname, requestConfig, queryString);\n  };\n\n  AppV5.prototype.loadInitialState = function (controller, action, callback, appname, requestConfig, queryString) {\n    var _this = this;\n\n    var parameters = appname ? [{\n      applicationName: appname\n    }] : null;\n    var actionModel = new ActionModelV5(controller, action, '', '', parameters, function () {\n      return _this.afterInit(callback);\n    }, false, queryString);\n    actionModel.requestConfig = requestConfig == null ? actionModel.requestConfig : requestConfig;\n    this.action.send(actionModel);\n  };\n\n  AppV5.prototype.register = function () {\n    _super.prototype.register.call(this);\n\n    this.inject.register(Constants.UrlResolver, UrlResolverV5, Resolve.Singleton);\n    this.inject.register(Constants.RequestBuilder, RequestBuilderV5, Resolve.Singleton);\n    this.inject.register(Constants.Action, ActionServiceV5, Resolve.Singleton);\n    this.inject.register(Constants.NotifyBuffer, DirtyCacheV5, Resolve.Singleton);\n    this.inject.register(Constants.ModelFactory, ModelFactoryV5, Resolve.Singleton);\n    this.inject.register(Constants.ModelResolver, ModelResolverV5, Resolve.Singleton);\n    this.inject.register(Constants.ViewManager, ViewManagerV5, Resolve.Singleton);\n    this.inject.register(Constants.Buffer, ModelCollectionV5, Resolve.Request);\n    this.executeOnRegister();\n  };\n\n  AppV5.prototype.modelResolverInit = function () {\n    this.modelResolver.registerBehavior(new StyleBehavior());\n    this.modelResolver.registerBehavior(new EventBehavior());\n    this.modelResolver.registerBehavior(new ReferenceBehavior());\n    this.modelResolver.registerNotifier(new ChangeNotifier());\n    this.modelResolver.registerBehavior(new BuildStyleBehavior());\n  };\n\n  AppV5.prototype.deltaHandlerInit = function () {\n    this.deltaHandler.registerWorker(new ModelWorker());\n    this.deltaHandler.registerWorker(new ActionWorker());\n    this.deltaHandler.registerWorker(new VisualWorker());\n    this.deltaHandler.registerWorker(new PendingActionWorker());\n    this.executeDeltaHandler();\n  };\n\n  AppV5.prototype.executeOnCommandRegister = function () {\n    _super.prototype.executeOnCommandRegister.call(this);\n\n    this.commandFactory.register(Commands.OpenView, OpenViewV5);\n    this.commandFactory.register(Commands.ChangeMenuCommand, ChangeMenuV5);\n    this.commandFactory.register(Commands.DisposeWindowCommand, DisposeWindowCommandV5);\n    this.commandFactory.register(Commands.BringToFrontCommand, BringToFront);\n    this.commandFactory.register(Commands.SetTextToDataManagerCommand, SetTextToDataManagerCommandV5);\n    this.commandFactory.register(Commands.ChangeFocusControlCommand, ChangeFocusControlV5);\n    this.commandFactory.register(Commands.OpenExternalLinkCommand, OpenExternalLinkCommandV5);\n    this.commandFactory.register(Commands.DownloadFileCommand, DownloadFileCommand);\n    this.commandFactory.register(Commands.ArrangeWindowCommand, ArrangeWindowCommandV5);\n    this.commandFactory.register(Commands.GridPrintCommand, GridPrintCommand);\n    this.commandFactory.register(Commands.StartEditCommand, StartEditV5);\n    this.commandFactory.register(Commands.StylesChangedCommand, StylesChangedCommand);\n    this.commandFactory.register(Commands.UpdateRangesCommand, UpdateRangesCommand);\n    this.commandFactory.register(Commands.ModalExecutionCommand, ModalExecutionCommand);\n\n    if (this.onCommandRegister) {\n      this.onCommandRegister(this.commandFactory);\n    }\n  };\n\n  return AppV5;\n}(App);\n\nexport { AppV5 }; //# sourceMappingURL=data:application/json;base64,","map":null,"metadata":{},"sourceType":"module"}