{"ast":null,"code":"import { Class, defined, setDefaultOptions } from '../../common';\nconst DEFAULT_QUIET_ZONE_LENGTH = 10;\nexport class Encoding extends Class {\n  constructor(options) {\n    super();\n    this.setOptions(options);\n    this.initProperties();\n  }\n\n  initProperties() {}\n\n  setOptions(options) {\n    this.options = Object.assign({}, this.options, options);\n    this.quietZoneLength = this.options.addQuietZone ? 2 * this.options.quietZoneLength : 0;\n  }\n\n  encode(value, width, height) {\n    const convertedValue = defined(value) ? String(value) : value;\n    this.initValue(convertedValue, width, height);\n\n    if (this.options.addQuietZone) {\n      this.addQuietZone();\n    }\n\n    this.addData();\n\n    if (this.options.addQuietZone) {\n      this.addQuietZone();\n    }\n\n    return {\n      baseUnit: this.baseUnit,\n      pattern: this.pattern\n    };\n  }\n\n  initValue() {}\n\n  addQuietZone() {\n    this.pattern.push(this.options.quietZoneLength || DEFAULT_QUIET_ZONE_LENGTH);\n  }\n\n  addData() {}\n\n  invalidCharacterError(character) {\n    throw new Error(`Character \"${character}\" is not valid for symbology ${this.name}.`);\n  }\n\n}\nsetDefaultOptions(Encoding, {\n  quietZoneLength: DEFAULT_QUIET_ZONE_LENGTH,\n  addQuietZone: true,\n  addCheckSum: true\n});","map":null,"metadata":{},"sourceType":"module"}