{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1351);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1133:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.router\");\n    /***/\n  },\n\n  /***/\n  1339:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.mobile.pane\");\n    /***/\n  },\n\n  /***/\n  1351:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1339), __webpack_require__(1133)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"mobile.application\",\n        name: \"Application\",\n        category: \"mobile\",\n        description: \"The Mobile application provides a framework to build native looking web applications on mobile devices.\",\n        depends: [\"mobile.pane\", \"router\"]\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            mobile = kendo.mobile,\n            support = kendo.support,\n            Widget = mobile.ui.Widget,\n            Pane = mobile.ui.Pane,\n            DEFAULT_OS = \"ios7\",\n            OS = support.mobileOS,\n            BERRYPHONEGAP = OS.device == \"blackberry\" && OS.flatVersion >= 600 && OS.flatVersion < 1000 && OS.appMode,\n            FONT_SIZE_COEF = 0.93,\n            VERTICAL = \"km-vertical\",\n            CHROME = OS.browser === \"chrome\",\n            BROKEN_WEBVIEW_RESIZE = OS.ios && OS.flatVersion >= 700 && OS.flatVersion < 800 && (OS.appMode || CHROME),\n            INITIALLY_HORIZONTAL = Math.abs(window.orientation) / 90 == 1,\n            HORIZONTAL = \"km-horizontal\",\n            MOBILE_PLATFORMS = {\n          ios7: {\n            ios: true,\n            browser: \"default\",\n            device: \"iphone\",\n            flatVersion: \"700\",\n            majorVersion: \"7\",\n            minorVersion: \"0.0\",\n            name: \"ios\",\n            tablet: false\n          },\n          ios: {\n            ios: true,\n            browser: \"default\",\n            device: \"iphone\",\n            flatVersion: \"612\",\n            majorVersion: \"6\",\n            minorVersion: \"1.2\",\n            name: \"ios\",\n            tablet: false\n          },\n          android: {\n            android: true,\n            browser: \"default\",\n            device: \"android\",\n            flatVersion: \"442\",\n            majorVersion: \"4\",\n            minorVersion: \"4.2\",\n            name: \"android\",\n            tablet: false\n          },\n          blackberry: {\n            blackberry: true,\n            browser: \"default\",\n            device: \"blackberry\",\n            flatVersion: \"710\",\n            majorVersion: \"7\",\n            minorVersion: \"1.0\",\n            name: \"blackberry\",\n            tablet: false\n          },\n          meego: {\n            meego: true,\n            browser: \"default\",\n            device: \"meego\",\n            flatVersion: \"850\",\n            majorVersion: \"8\",\n            minorVersion: \"5.0\",\n            name: \"meego\",\n            tablet: false\n          },\n          wp: {\n            wp: true,\n            browser: \"default\",\n            device: \"wp\",\n            flatVersion: \"800\",\n            majorVersion: \"8\",\n            minorVersion: \"0.0\",\n            name: \"wp\",\n            tablet: false\n          }\n        },\n            viewportTemplate = kendo.template('<meta content=\"initial-scale=#: data.scale #, maximum-scale=#: data.scale #, user-scalable=no#=data.height#\" name=\"viewport\" />', {\n          usedWithBlock: false\n        }),\n            systemMeta = kendo.template('<meta name=\"apple-mobile-web-app-capable\" content=\"#= data.webAppCapable === false ? \\'no\\' : \\'yes\\' #\" /> ' + '<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"#=data.statusBarStyle#\" /> ' + '<meta name=\"msapplication-tap-highlight\" content=\"no\" /> ', {\n          usedWithBlock: false\n        }),\n            clipTemplate = kendo.template('<style>.km-view { clip: rect(0 #= data.width #px #= data.height #px 0); }</style>', {\n          usedWithBlock: false\n        }),\n            ENABLE_CLIP = OS.android && OS.browser != \"chrome\" || OS.blackberry,\n            iconMeta = kendo.template('<link rel=\"apple-touch-icon' + (OS.android ? '-precomposed' : '') + '\" # if(data.size) { # sizes=\"#=data.size#\" #}# href=\"#=data.icon#\" />', {\n          usedWithBlock: false\n        }),\n            HIDEBAR = (OS.device == \"iphone\" || OS.device == \"ipod\") && OS.majorVersion < 7,\n            SUPPORT_SWIPE_TO_GO_BACK = (OS.device == \"iphone\" || OS.device == \"ipod\") && OS.majorVersion >= 7,\n            HISTORY_TRANSITION = SUPPORT_SWIPE_TO_GO_BACK ? \"none\" : null,\n            BARCOMPENSATION = OS.browser == \"mobilesafari\" ? 60 : 0,\n            STATUS_BAR_HEIGHT = 20,\n            WINDOW = $(window),\n            SCREEN = window.screen,\n            HEAD = $(\"head\"),\n            // mobile app events\n        INIT = \"init\";\n\n        function osCssClass(os, options) {\n          var classes = [];\n\n          if (OS) {\n            classes.push(\"km-on-\" + OS.name);\n          }\n\n          if (os.skin) {\n            classes.push(\"km-\" + os.skin);\n          } else {\n            if (os.name == \"ios\" && os.majorVersion > 6) {\n              classes.push(\"km-ios7\");\n            } else {\n              classes.push(\"km-\" + os.name);\n            }\n          }\n\n          if (os.name == \"ios\" && os.majorVersion < 7 || os.name != \"ios\") {\n            classes.push(\"km-\" + os.name + os.majorVersion);\n          }\n\n          classes.push(\"km-\" + os.majorVersion);\n          classes.push(\"km-m\" + (os.minorVersion ? os.minorVersion[0] : 0));\n\n          if (os.variant && (os.skin && os.skin === os.name || !os.skin || os.setDefaultPlatform === false)) {\n            classes.push(\"km-\" + (os.skin ? os.skin : os.name) + \"-\" + os.variant);\n          }\n\n          if (os.cordova) {\n            classes.push(\"km-cordova\");\n          }\n\n          if (os.appMode) {\n            classes.push(\"km-app\");\n          } else {\n            classes.push(\"km-web\");\n          }\n\n          if (options && options.statusBarStyle) {\n            classes.push(\"km-\" + options.statusBarStyle + \"-status-bar\");\n          }\n\n          return classes.join(\" \");\n        }\n\n        function wp8Background(os) {\n          return 'km-wp-' + (os.noVariantSet ? parseInt($(\"<div style='background: Background' />\").css(\"background-color\").split(\",\")[1], 10) === 0 ? 'dark' : 'light' : os.variant + \" km-wp-\" + os.variant + \"-force\");\n        }\n\n        function isOrientationHorizontal(element) {\n          return OS.wp ? element.css(\"animation-name\") == \"-kendo-landscape\" : Math.abs(window.orientation) / 90 == 1;\n        }\n\n        function getOrientationClass(element) {\n          return isOrientationHorizontal(element) ? HORIZONTAL : VERTICAL;\n        }\n\n        function setMinimumHeight(pane) {\n          pane.parent().addBack().css(\"min-height\", window.innerHeight);\n        }\n\n        function applyViewportHeight() {\n          $(\"meta[name=viewport]\").remove();\n          HEAD.append(viewportTemplate({\n            height: \", width=device-width\" + ( // width=device-width was removed for iOS6, but this should stay for BB PhoneGap.\n            isOrientationHorizontal() ? \", height=\" + window.innerHeight + \"px\" : support.mobileOS.flatVersion >= 600 && support.mobileOS.flatVersion < 700 ? \", height=\" + window.innerWidth + \"px\" : \", height=device-height\")\n          }));\n        }\n\n        var Application = Widget.extend({\n          init: function (element, options) {\n            // global reference to current application\n            mobile.application = this;\n            $(this.bootstrap.bind(this, element, options));\n          },\n          bootstrap: function (element, options) {\n            element = $(element);\n\n            if (!element[0]) {\n              element = $(document.body);\n            }\n\n            Widget.fn.init.call(this, element, options);\n            this.element.removeAttr(\"data-\" + kendo.ns + \"role\");\n\n            this._setupPlatform();\n\n            this._attachMeta();\n\n            this._setupElementClass();\n\n            this._attachHideBarHandlers();\n\n            var paneOptions = $.extend({}, this.options);\n            delete paneOptions.name;\n\n            var that = this,\n                startHistory = function () {\n              that.pane = new Pane(that.element, paneOptions);\n              that.pane.navigateToInitial();\n\n              if (that.options.updateDocumentTitle) {\n                that._setupDocumentTitle();\n              }\n\n              that._startHistory();\n\n              that.trigger(INIT);\n            };\n\n            if (this.options.$angular) {\n              setTimeout(startHistory);\n            } else {\n              startHistory();\n            }\n          },\n          options: {\n            name: \"Application\",\n            hideAddressBar: true,\n            browserHistory: true,\n            historyTransition: HISTORY_TRANSITION,\n            modelScope: window,\n            statusBarStyle: \"black\",\n            transition: \"\",\n            retina: false,\n            platform: null,\n            skin: null,\n            updateDocumentTitle: true,\n            useNativeScrolling: false\n          },\n          events: [INIT],\n          navigate: function (url, transition) {\n            this.pane.navigate(url, transition);\n          },\n          replace: function (url, transition) {\n            this.pane.replace(url, transition);\n          },\n          scroller: function () {\n            return this.view().scroller;\n          },\n          hideLoading: function () {\n            if (this.pane) {\n              this.pane.hideLoading();\n            } else {\n              throw new Error(\"The mobile application instance is not fully instantiated. Please consider activating loading in the application init event handler.\");\n            }\n          },\n          showLoading: function () {\n            if (this.pane) {\n              this.pane.showLoading();\n            } else {\n              throw new Error(\"The mobile application instance is not fully instantiated. Please consider activating loading in the application init event handler.\");\n            }\n          },\n          changeLoadingMessage: function (message) {\n            if (this.pane) {\n              this.pane.changeLoadingMessage(message);\n            } else {\n              throw new Error(\"The mobile application instance is not fully instantiated. Please consider changing the message in the application init event handler.\");\n            }\n          },\n          view: function () {\n            return this.pane.view();\n          },\n          skin: function (skin) {\n            var that = this;\n\n            if (!arguments.length) {\n              return that.options.skin;\n            }\n\n            that.options.skin = skin || \"\";\n            that.element[0].className = \"km-pane\";\n\n            that._setupPlatform();\n\n            that._setupElementClass();\n\n            return that.options.skin;\n          },\n          destroy: function () {\n            Widget.fn.destroy.call(this);\n            this.pane.destroy();\n\n            if (this.options.browserHistory) {\n              this.router.destroy();\n            }\n          },\n          _setupPlatform: function () {\n            var that = this,\n                platform = that.options.platform,\n                skin = that.options.skin,\n                split = [],\n                os = OS || MOBILE_PLATFORMS[DEFAULT_OS],\n                refreshBackgroundFn = function () {\n              if (that.os.variant && that.os.skin && that.os.skin === that.os.name || !that.os.skin) {\n                that.element.removeClass(\"km-wp-dark km-wp-light km-wp-dark-force km-wp-light-force\").addClass(wp8Background(that.os));\n              }\n            };\n\n            if (platform) {\n              os.setDefaultPlatform = true;\n\n              if (typeof platform === \"string\") {\n                split = platform.split(\"-\");\n                os = $.extend({\n                  variant: split[1]\n                }, os, MOBILE_PLATFORMS[split[0]]);\n              } else {\n                os = platform;\n              }\n            }\n\n            if (skin) {\n              split = skin.split(\"-\");\n\n              if (!OS) {\n                os.setDefaultPlatform = false;\n              }\n\n              os = $.extend({}, os, {\n                skin: split[0],\n                variant: split[1]\n              });\n            }\n\n            if (!os.variant) {\n              os.noVariantSet = true;\n              os.variant = \"dark\";\n            }\n\n            that.os = os;\n            that.osCssClass = osCssClass(that.os, that.options);\n\n            if (os.name == \"wp\") {\n              if (!that.refreshBackgroundColorProxy) {\n                that.refreshBackgroundColorProxy = refreshBackgroundFn.bind(that);\n              }\n\n              $(document).off(\"visibilitychange\", that.refreshBackgroundColorProxy);\n              $(document).off(\"resume\", that.refreshBackgroundColorProxy);\n\n              if (!os.skin) {\n                that.element.parent().css(\"overflow\", \"hidden\");\n                $(document).on(\"visibilitychange\", that.refreshBackgroundColorProxy); // Restore theme on browser focus (using the Visibility API).\n\n                $(document).on(\"resume\", that.refreshBackgroundColorProxy); // PhoneGap fires resume.\n\n                that.refreshBackgroundColorProxy();\n              }\n            }\n          },\n          _startHistory: function () {\n            if (this.options.browserHistory) {\n              this.router = new kendo.Router({\n                pushState: this.options.pushState,\n                root: this.options.root,\n                hashBang: this.options.hashBang\n              });\n              this.pane.bindToRouter(this.router);\n              this.router.start();\n            } else {\n              if (!this.options.initial) {\n                this.pane.navigate(\"\");\n              }\n            }\n          },\n          _resizeToScreenHeight: function () {\n            var includeStatusBar = $(\"meta[name=apple-mobile-web-app-status-bar-style]\").attr(\"content\").match(/black-translucent|hidden/),\n                element = this.element,\n                height;\n\n            if (CHROME) {\n              height = window.innerHeight;\n            } else {\n              if (isOrientationHorizontal(element)) {\n                if (includeStatusBar) {\n                  if (INITIALLY_HORIZONTAL) {\n                    height = SCREEN.availWidth + STATUS_BAR_HEIGHT;\n                  } else {\n                    height = SCREEN.availWidth;\n                  }\n                } else {\n                  if (INITIALLY_HORIZONTAL) {\n                    height = SCREEN.availWidth;\n                  } else {\n                    height = SCREEN.availWidth - STATUS_BAR_HEIGHT;\n                  }\n                }\n              } else {\n                if (includeStatusBar) {\n                  if (INITIALLY_HORIZONTAL) {\n                    height = SCREEN.availHeight;\n                  } else {\n                    height = SCREEN.availHeight + STATUS_BAR_HEIGHT;\n                  }\n                } else {\n                  if (INITIALLY_HORIZONTAL) {\n                    height = SCREEN.availHeight - STATUS_BAR_HEIGHT;\n                  } else {\n                    height = SCREEN.availHeight;\n                  }\n                }\n              }\n            }\n\n            element.height(height);\n          },\n          _setupElementClass: function () {\n            var that = this,\n                size,\n                element = that.element;\n            element.parent().addClass(\"km-root km-\" + (that.os.tablet ? \"tablet\" : \"phone\"));\n            element.addClass(that.osCssClass + \" \" + getOrientationClass(element));\n\n            if (this.options.useNativeScrolling) {\n              element.parent().addClass(\"km-native-scrolling\");\n            }\n\n            if (CHROME) {\n              element.addClass(\"km-ios-chrome\");\n            }\n\n            if (support.wpDevicePixelRatio) {\n              element.parent().css(\"font-size\", support.wpDevicePixelRatio + \"em\");\n            }\n\n            if (this.options.retina) {\n              element.parent().addClass(\"km-retina\");\n              element.parent().css(\"font-size\", support.devicePixelRatio * FONT_SIZE_COEF + \"em\");\n            }\n\n            if (BERRYPHONEGAP) {\n              applyViewportHeight();\n            }\n\n            if (that.options.useNativeScrolling) {\n              element.parent().addClass(\"km-native-scrolling\");\n            } else if (ENABLE_CLIP) {\n              size = (screen.availWidth > screen.availHeight ? screen.availWidth : screen.availHeight) + 200;\n              $(clipTemplate({\n                width: size,\n                height: size\n              })).appendTo(HEAD);\n            }\n\n            if (BROKEN_WEBVIEW_RESIZE) {\n              that._resizeToScreenHeight();\n            }\n\n            kendo.onResize(function () {\n              element.removeClass(\"km-horizontal km-vertical\").addClass(getOrientationClass(element));\n\n              if (that.options.useNativeScrolling) {\n                setMinimumHeight(element);\n              }\n\n              if (BROKEN_WEBVIEW_RESIZE) {\n                that._resizeToScreenHeight();\n              }\n\n              if (BERRYPHONEGAP) {\n                applyViewportHeight();\n              }\n\n              kendo.resize(element);\n            });\n          },\n          _clearExistingMeta: function () {\n            HEAD.find(\"meta\").filter(\"[name|='apple-mobile-web-app'],[name|='msapplication-tap'],[name='viewport']\").remove();\n          },\n          _attachMeta: function () {\n            var options = this.options,\n                icon = options.icon,\n                size;\n\n            this._clearExistingMeta();\n\n            if (!BERRYPHONEGAP) {\n              HEAD.prepend(viewportTemplate({\n                height: \"\",\n                scale: this.options.retina ? 1 / support.devicePixelRatio : \"1.0\"\n              }));\n            }\n\n            HEAD.prepend(systemMeta(options));\n\n            if (icon) {\n              if (typeof icon === \"string\") {\n                icon = {\n                  \"\": icon\n                };\n              }\n\n              for (size in icon) {\n                HEAD.prepend(iconMeta({\n                  icon: icon[size],\n                  size: size\n                }));\n              }\n            }\n\n            if (options.useNativeScrolling) {\n              setMinimumHeight(this.element);\n            }\n          },\n          _attachHideBarHandlers: function () {\n            var that = this,\n                hideBar = that._hideBar.bind(that);\n\n            if (support.mobileOS.appMode || !that.options.hideAddressBar || !HIDEBAR || that.options.useNativeScrolling) {\n              return;\n            }\n\n            that._initialHeight = {};\n            WINDOW.on(\"load\", hideBar);\n            kendo.onResize(function () {\n              setTimeout(window.scrollTo, 0, 0, 1);\n            });\n          },\n          _setupDocumentTitle: function () {\n            var that = this,\n                defaultTitle = document.title;\n            that.pane.bind(\"viewShow\", function (e) {\n              var title = e.view.title;\n              document.title = title !== undefined ? title : defaultTitle;\n            });\n          },\n          _hideBar: function () {\n            var that = this,\n                element = that.element;\n            element.height(kendo.support.transforms.css + \"calc(100% + \" + BARCOMPENSATION + \"px)\");\n            $(window).trigger(kendo.support.resize);\n          }\n        });\n        kendo.mobile.Application = Application;\n        kendo.ui.plugin(Application, kendo.mobile, 'Mobile');\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}