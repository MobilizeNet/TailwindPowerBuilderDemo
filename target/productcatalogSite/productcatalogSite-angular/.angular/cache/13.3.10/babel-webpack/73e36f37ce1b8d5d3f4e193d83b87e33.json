{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(916);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  896:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../../kendo.core\");\n    /***/\n  },\n\n  /***/\n  916:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(896)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            diagram = kendo.dataviz.diagram = {},\n            deepExtend = kendo.deepExtend,\n            isArray = Array.isArray,\n            EPSILON = 1e-06;\n        /*-------------------Diverse utilities----------------------------*/\n\n        var Utils = {};\n        deepExtend(Utils, {\n          isNearZero: function (num) {\n            return Math.abs(num) < EPSILON;\n          },\n          isDefined: function (obj) {\n            return typeof obj !== 'undefined';\n          },\n          isUndefined: function (obj) {\n            return typeof obj === 'undefined' || obj === null;\n          },\n\n          /**\n           * Returns whether the given object is an object or a value.\n           */\n          isObject: function (obj) {\n            return obj === Object(obj);\n          },\n\n          /**\n           * Returns whether the object has a property with the given name.\n           */\n          has: function (obj, key) {\n            return Object.hasOwnProperty.call(obj, key);\n          },\n\n          /**\n           * Returns whether the given object is a string.\n           */\n          isString: function (obj) {\n            return Object.prototype.toString.call(obj) == '[object String]';\n          },\n          isBoolean: function (obj) {\n            return Object.prototype.toString.call(obj) == '[object Boolean]';\n          },\n          isType: function (obj, type) {\n            return Object.prototype.toString.call(obj) == '[object ' + type + ']';\n          },\n\n          /**\n           * Returns whether the given object is a number.\n           */\n          isNumber: function (obj) {\n            return !isNaN(parseFloat(obj)) && isFinite(obj);\n          },\n\n          /**\n           * Return whether the given object (array or dictionary).\n           */\n          isEmpty: function (obj) {\n            if (obj === null) {\n              return true;\n            }\n\n            if (isArray(obj) || Utils.isString(obj)) {\n              return obj.length === 0;\n            }\n\n            for (var key in obj) {\n              if (Utils.has(obj, key)) {\n                return false;\n              }\n            }\n\n            return true;\n          },\n          simpleExtend: function (destination, source) {\n            if (!Utils.isObject(source)) {\n              return;\n            }\n\n            for (var name in source) {\n              destination[name] = source[name];\n            }\n          },\n\n          /**\n           * Returns an array of the specified size and with each entry set to the given value.\n           * @param size\n           * @param value\n           * @returns {Array}\n           */\n          initArray: function createIdArray(size, value) {\n            var array = [];\n\n            for (var i = 0; i < size; ++i) {\n              array[i] = value;\n            }\n\n            return array;\n          },\n          serializePoints: function (points) {\n            var res = [];\n\n            for (var i = 0; i < points.length; i++) {\n              var p = points[i];\n              res.push(p.x + \";\" + p.y);\n            }\n\n            return res.join(\";\");\n          },\n          deserializePoints: function (s) {\n            var v = s.split(\";\"),\n                points = [];\n\n            if (v.length % 2 !== 0) {\n              throw \"Not an array of points.\";\n            }\n\n            for (var i = 0; i < v.length; i += 2) {\n              points.push(new diagram.Point(parseInt(v[i], 10), parseInt(v[i + 1], 10)));\n            }\n\n            return points;\n          },\n\n          /**\n           * Returns an integer within the given bounds.\n           * @param lower The inclusive lower bound.\n           * @param upper The exclusive upper bound.\n           * @returns {number}\n           */\n          randomInteger: function (lower, upper) {\n            return parseInt(Math.floor(Math.random() * upper) + lower, 10);\n          },\n\n          /*\n           Depth-first traversal of the given node.\n           */\n          DFT: function (el, func) {\n            func(el);\n\n            if (el.childNodes) {\n              for (var i = 0; i < el.childNodes.length; i++) {\n                var item = el.childNodes[i];\n                this.DFT(item, func);\n              }\n            }\n          },\n\n          /*\n           Returns the angle in degrees for the given matrix\n           */\n          getMatrixAngle: function (m) {\n            if (m === null || m.d === 0) {\n              return 0;\n            }\n\n            return Math.atan2(m.b, m.d) * 180 / Math.PI;\n          },\n\n          /*\n           Returns the scaling factors for the given matrix.\n           */\n          getMatrixScaling: function (m) {\n            var sX = Math.sqrt(m.a * m.a + m.c * m.c);\n            var sY = Math.sqrt(m.b * m.b + m.d * m.d);\n            return [sX, sY];\n          }\n        });\n        /**\n         * The Range defines an array of equally separated numbers.\n         * @param start The start-value of the Range.\n         * @param stop The end-value of the Range.\n         * @param step The separation between the values (default:1).\n         * @returns {Array}\n         */\n\n        function Range(start, stop, step) {\n          if (typeof start == 'undefined' || typeof stop == 'undefined') {\n            return [];\n          }\n\n          if (step && Utils.sign(stop - start) != Utils.sign(step)) {\n            throw \"The sign of the increment should allow to reach the stop-value.\";\n          }\n\n          step = step || 1;\n          start = start || 0;\n          stop = stop || start;\n\n          if ((stop - start) / step === Infinity) {\n            throw \"Infinite range defined.\";\n          }\n\n          var range = [],\n              i = -1,\n              j;\n\n          function rangeIntegerScale(x) {\n            var k = 1;\n\n            while (x * k % 1) {\n              k *= 10;\n            }\n\n            return k;\n          }\n\n          var k = rangeIntegerScale(Math.abs(step));\n          start *= k;\n          stop *= k;\n          step *= k;\n\n          if (start > stop && step > 0) {\n            step = -step;\n          }\n\n          if (step < 0) {\n            while ((j = start + step * ++i) >= stop) {\n              range.push(j / k);\n            }\n          } else {\n            while ((j = start + step * ++i) <= stop) {\n              range.push(j / k);\n            }\n          }\n\n          return range;\n        }\n        /*-------------------Diverse math functions----------------------------*/\n\n\n        function findRadian(start, end) {\n          if (start == end) {\n            return 0;\n          }\n\n          var sngXComp = end.x - start.x,\n              sngYComp = start.y - end.y,\n              atan = Math.atan(sngXComp / sngYComp);\n\n          if (sngYComp >= 0) {\n            return sngXComp < 0 ? atan + 2 * Math.PI : atan;\n          }\n\n          return atan + Math.PI;\n        }\n\n        Utils.sign = function (number) {\n          return number ? number < 0 ? -1 : 1 : 0;\n        };\n\n        Utils.findAngle = function (center, end) {\n          return findRadian(center, end) * 180 / Math.PI;\n        };\n        /*-------------------Array Helpers ----------------------------*/\n\n\n        Utils.forEach = function (arr, iterator, thisRef) {\n          for (var i = 0; i < arr.length; i++) {\n            iterator.call(thisRef, arr[i], i, arr);\n          }\n        };\n\n        Utils.any = function (arr, predicate) {\n          for (var i = 0; i < arr.length; ++i) {\n            if (predicate(arr[i])) {\n              return arr[i];\n            }\n          }\n\n          return null;\n        };\n\n        Utils.remove = function (arr, what) {\n          var ax;\n\n          while ((ax = Utils.indexOf(arr, what)) !== -1) {\n            arr.splice(ax, 1);\n          }\n\n          return arr;\n        };\n\n        Utils.contains = function (arr, obj) {\n          return Utils.indexOf(arr, obj) !== -1;\n        };\n\n        Utils.indexOf = function (arr, what) {\n          return $.inArray(what, arr);\n        };\n\n        Utils.fold = function (list, iterator, acc, context) {\n          var initial = arguments.length > 2;\n\n          for (var i = 0; i < list.length; i++) {\n            var value = list[i];\n\n            if (!initial) {\n              acc = value;\n              initial = true;\n            } else {\n              acc = iterator.call(context, acc, value, i, list);\n            }\n          }\n\n          if (!initial) {\n            throw 'Reduce of empty array with no initial value';\n          }\n\n          return acc;\n        };\n\n        Utils.find = function (arr, iterator, context) {\n          var result;\n          Utils.any(arr, function (value, index, list) {\n            if (iterator.call(context, value, index, list)) {\n              result = value;\n              return true;\n            }\n\n            return false;\n          });\n          return result;\n        };\n\n        Utils.first = function (arr, constraint, context) {\n          if (arr.length === 0) {\n            return null;\n          }\n\n          if (Utils.isUndefined(constraint)) {\n            return arr[0];\n          }\n\n          return Utils.find(arr, constraint, context);\n        };\n        /**\n         * Inserts the given element at the specified position and returns the result.\n         */\n\n\n        Utils.insert = function (arr, element, position) {\n          arr.splice(position, 0, element);\n          return arr;\n        };\n\n        Utils.all = function (arr, iterator, context) {\n          var result = true;\n          var value;\n\n          for (var i = 0; i < arr.length; i++) {\n            value = arr[i];\n            result = result && iterator.call(context, value, i, arr);\n\n            if (!result) {\n              break;\n            }\n          }\n\n          return result;\n        };\n\n        Utils.clear = function (arr) {\n          arr.splice(0, arr.length);\n        };\n        /**\n         * Sort the arrays on the basis of the first one (considered as keys and the other array as values).\n         * @param a\n         * @param b\n         * @param sortfunc (optiona) sorting function for the values in the first array\n         */\n\n\n        Utils.bisort = function (a, b, sortfunc) {\n          if (Utils.isUndefined(a)) {\n            throw \"First array is not specified.\";\n          }\n\n          if (Utils.isUndefined(b)) {\n            throw \"Second array is not specified.\";\n          }\n\n          if (a.length != b.length) {\n            throw \"The two arrays should have equal length\";\n          }\n\n          var all = [],\n              i;\n\n          for (i = 0; i < a.length; i++) {\n            all.push({\n              'x': a[i],\n              'y': b[i]\n            });\n          }\n\n          if (Utils.isUndefined(sortfunc)) {\n            all.sort(function (m, n) {\n              return m.x - n.x;\n            });\n          } else {\n            all.sort(function (m, n) {\n              return sortfunc(m.x, n.x);\n            });\n          }\n\n          Utils.clear(a);\n          Utils.clear(b);\n\n          for (i = 0; i < all.length; i++) {\n            a.push(all[i].x);\n            b.push(all[i].y);\n          }\n        };\n\n        Utils.addRange = function (arr, range) {\n          arr.push.apply(arr, range);\n        };\n\n        var Easing = {\n          easeInOut: function (pos) {\n            return -Math.cos(pos * Math.PI) / 2 + 0.5;\n          }\n        };\n        /**\n         * An animation ticker driving an adapter which sets a particular\n         * property in function of the tick.\n         * @type {*}\n         */\n\n        var Ticker = kendo.Class.extend({\n          init: function () {\n            this.adapters = [];\n            this.target = 0;\n            this.tick = 0;\n            this.interval = 20;\n            this.duration = 800;\n            this.lastTime = null;\n            this.handlers = [];\n\n            var _this = this;\n\n            this.transition = Easing.easeInOut;\n\n            this.timerDelegate = function () {\n              _this.onTimerEvent();\n            };\n          },\n          addAdapter: function (a) {\n            this.adapters.push(a);\n          },\n          onComplete: function (handler) {\n            this.handlers.push(handler);\n          },\n          removeHandler: function (handler) {\n            this.handlers = $.grep(this.handlers, function (h) {\n              return h !== handler;\n            });\n          },\n          trigger: function () {\n            var _this = this;\n\n            if (this.handlers) {\n              Utils.forEach(this.handlers, function (h) {\n                return h.call(_this.caller !== null ? _this.caller : _this);\n              });\n            }\n          },\n          onStep: function () {},\n          seekTo: function (to) {\n            this.seekFromTo(this.tick, to);\n          },\n          seekFromTo: function (from, to) {\n            this.target = Math.max(0, Math.min(1, to));\n            this.tick = Math.max(0, Math.min(1, from));\n            this.lastTime = new Date().getTime();\n\n            if (!this.intervalId) {\n              this.intervalId = window.setInterval(this.timerDelegate, this.interval);\n            }\n          },\n          stop: function () {\n            if (this.intervalId) {\n              window.clearInterval(this.intervalId);\n              this.intervalId = null; //this.trigger.call(this);\n\n              this.trigger(); // this.next();\n            }\n          },\n          play: function (origin) {\n            if (this.adapters.length === 0) {\n              return;\n            }\n\n            if (origin !== null) {\n              this.caller = origin;\n            }\n\n            this.initState();\n            this.seekFromTo(0, 1);\n          },\n          reverse: function () {\n            this.seekFromTo(1, 0);\n          },\n          initState: function () {\n            if (this.adapters.length === 0) {\n              return;\n            }\n\n            for (var i = 0; i < this.adapters.length; i++) {\n              this.adapters[i].initState();\n            }\n          },\n          propagate: function () {\n            var value = this.transition(this.tick);\n\n            for (var i = 0; i < this.adapters.length; i++) {\n              this.adapters[i].update(value);\n            }\n          },\n          onTimerEvent: function () {\n            var now = new Date().getTime();\n            var timePassed = now - this.lastTime;\n            this.lastTime = now;\n            var movement = timePassed / this.duration * (this.tick < this.target ? 1 : -1);\n\n            if (Math.abs(movement) >= Math.abs(this.tick - this.target)) {\n              this.tick = this.target;\n            } else {\n              this.tick += movement;\n            }\n\n            try {\n              this.propagate();\n            } finally {\n              this.onStep.call(this);\n\n              if (this.target == this.tick) {\n                this.stop();\n              }\n            }\n          }\n        });\n        kendo.deepExtend(diagram, {\n          init: function (element) {\n            kendo.init(element, diagram.ui);\n          },\n          Utils: Utils,\n          Range: Range,\n          Ticker: Ticker\n        });\n      })(window.kendo.jQuery);\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}