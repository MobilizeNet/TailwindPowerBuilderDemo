{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1429);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1137:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.tooltip\");\n    /***/\n  },\n\n  /***/\n  1196:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.multiviewcalendar\");\n    /***/\n  },\n\n  /***/\n  1417:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.scheduler.view\");\n    /***/\n  },\n\n  /***/\n  1429:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1417), __webpack_require__(1196), __webpack_require__(1137)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"scheduler.yearview\",\n        name: \"Scheduler Year View\",\n        category: \"web\",\n        description: \"The Scheduler Year View\",\n        depends: [\"scheduler.view\", \"multiviewcalendar\", \"tooltip\"],\n        hidden: true\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            SchedulerView = ui.SchedulerView,\n            extend = $.extend,\n            template = kendo.template,\n            firstDayOfYear = kendo.date.firstDayOfYear,\n            firstDayOfMonth = kendo.date.firstDayOfMonth,\n            lastDayOfMonth = kendo.date.lastDayOfMonth,\n            NAVIGATE = \"navigate\",\n            KEYDOWN = \"keydown\",\n            ACTIVATE = \"activate\",\n            SHOW = \"show\",\n            HIDE = \"hide\",\n            CLICK = \"click\",\n            DOT = \".\",\n            NS = \".kendoYearView\";\n        var YearViewStyles = {\n          layout: \"k-scheduler-layout k-scheduler-layout-flex k-scheduler-yearview\",\n          body: \"k-scheduler-body\",\n          tooltip: \"k-scheduler-tooltip\",\n          indicator: \"k-day-indicator\",\n          event: \"k-tooltip-event\",\n          hidden: \"k-hidden\"\n        };\n        var TOOLTIP_TEMPLATE = template(\"<div class='k-tooltip-title k-text-center'>\" + \"<div class='k-month'>#:kendo.format('{0:MMM}', date)#</div>\" + \"<div tabindex='0' class='k-link k-day k-text-primary'>#:kendo.format('{0:dd}', date)#</div>\" + \"</div>\" + \"#if(events.length){#\" + \"<div class='k-tooltip-events-container'>\" + \"<div class='k-tooltip-events'>\" + \"#for(var i = 0; i < events.length; i+=1){#\" + \"#var event = events[i]#\" + \"<div class='k-tooltip-event k-event' title='#:event.title#'\" + \"# if (event.resources[0]) { #\" + \"style='background-color: #: event.resources[0].color #; border-color: #: event.resources[0].color #;'\" + \"#}#>\" + \"<div class='k-event-title k-text-ellipsis'>#:event.title#</div>\" + \"<span class='k-spacer'></span>\" + \"<span class='k-event-time'>#:kendo.format('{0:t}', event.start)#</span>\" + \"</div>\" + \"#}#\" + \"</div>\" + \"</div>\" + \"#} else {#\" + \"<div class='k-no-data k-text-center'>#:messages.noData#</div>\" + \"#}#\");\n        var YearView = SchedulerView.extend({\n          init: function (element, options) {\n            var that = this;\n            SchedulerView.fn.init.call(that, element, options);\n\n            that._yearRange();\n\n            that._templates();\n\n            that._layout();\n\n            that._initCalendar();\n\n            that._initTooltip();\n          },\n          options: {\n            title: \"Year\",\n            name: \"year\",\n            months: 12,\n            startDate: null,\n            messages: {\n              noData: \"No events on this date.\"\n            },\n            selectedDateFormat: \"{0:yyyy}\",\n            selectedShortDateFormat: \"{0:yyyy}\",\n            selectedMobileDateFormat: \"{0:yyyy}\",\n            tooltipTemplate: TOOLTIP_TEMPLATE\n          },\n          name: \"year\",\n          events: [NAVIGATE],\n          _yearRange: function () {\n            var that = this,\n                options = that.options,\n                tempEnd;\n            that._startDate = options.startDate ? firstDayOfMonth(options.startDate) : firstDayOfYear(options.date);\n\n            that._startDate.setFullYear(options.date.getFullYear());\n\n            tempEnd = new Date(that._startDate);\n            tempEnd.setMonth(tempEnd.getMonth() + options.months);\n            that._endDate = tempEnd;\n          },\n          _templates: function () {\n            var options = this.options,\n                settings = extend({}, kendo.Template, options.templateSettings);\n            this.tooltipTemplate = kendo.template(options.tooltipTemplate, settings);\n          },\n          _layout: function () {\n            var that = this,\n                styles = YearViewStyles;\n            that.content = $(\"<div/>\").addClass(styles.layout);\n            that.element.append(that.content);\n            that.body = $(\"<div/>\").addClass(styles.body);\n            that.content.append(that.body);\n          },\n          _initCalendar: function () {\n            var that = this,\n                options = that.options,\n                calendarElement = $(\"<div/>\");\n            that.body.append(calendarElement);\n            that.calendar = new ui.MultiViewCalendar(calendarElement, {\n              views: options.months,\n              value: that.startDate(),\n              showViewHeader: true,\n              footer: false\n            });\n\n            if (!options.selectable) {\n              that._disableCalendarSelection();\n            }\n\n            that.calendar.value(null);\n            that.calendar.header.toggleClass(YearViewStyles.hidden);\n            that.calendar.element.on(CLICK + NS, \"td[role='gridcell']\", that._calendarCellClick.bind(that));\n            that.calendar.element.on(KEYDOWN + NS, \"table.k-content\", that._calendarKeydown.bind(that));\n            that.calendar.bind(NAVIGATE, that._calendarNavigate.bind(that));\n            that.calendar.element.find(\"table\").attr(\"tabindex\", \"-1\");\n          },\n          _calendarCellClick: function (ev) {\n            var that = this,\n                target = that.calendar.selectable.value().first();\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            that._displayTooltip(target);\n          },\n          _calendarKeydown: function (ev) {\n            var that = this,\n                keys = kendo.keys,\n                keyCode = ev.keyCode;\n\n            if (keyCode == keys.ENTER || keyCode == keys.SPACEBAR) {\n              ev.preventDefault();\n\n              that._displayTooltip(that.calendar.selectable.value().first());\n            }\n          },\n          _calendarNavigate: function (ev) {\n            var that = this,\n                calendar = ev.sender,\n                isPrevious = calendar._firstViewValue < that.startDate(),\n                navigationDate = isPrevious ? that.previousDate() : that.nextDate();\n            that.trigger(NAVIGATE, {\n              view: \"year\",\n              date: navigationDate\n            });\n\n            that._focusCellOnNavigate();\n          },\n          _focusCellOnNavigate: function () {\n            var that = this,\n                calendar = that.calendar || that.element.find(\".k-calendar\").getKendoMultiViewCalendar(),\n                isPrevious,\n                focusDate;\n\n            if (!calendar) {\n              return;\n            }\n\n            isPrevious = calendar._firstViewValue < that.startDate();\n            focusDate = isPrevious ? that.lastDateInRange() : that.nextDate();\n\n            if (that.options.selectable) {\n              calendar.value(focusDate);\n            }\n\n            calendar._focusCell(calendar._cellByDate(focusDate), true);\n          },\n          _disableCalendarSelection: function () {\n            var that = this;\n\n            if (!that.calendar) {\n              return;\n            }\n\n            that.calendar.value(null);\n            that.calendar.element.off(KEYDOWN, that.calendar._move);\n            that.calendar.element.find(\"table\").attr(\"tabindex\", \"-1\");\n          },\n          _initTooltip: function () {\n            var that = this,\n                tooltipElement = that.content,\n                tooltipTemplate = that._buildTooltipTemplate.bind(that);\n\n            that.tooltip = new ui.Tooltip(tooltipElement, {\n              filter: \".k-calendar td[role='gridcell']\",\n              showOn: CLICK,\n              position: \"right\",\n              content: tooltipTemplate,\n              width: 220\n            });\n\n            that._initTooltipPopup();\n\n            that.tooltip.bind(SHOW, that._tooltipShow.bind(that));\n            that.tooltip.bind(HIDE, that._tooltipHide.bind(that));\n          },\n          _initTooltipPopup: function () {\n            var that = this,\n                tooltip = that.tooltip;\n\n            if (!that.tooltip) {\n              return;\n            }\n\n            tooltip._initPopup();\n\n            tooltip.popup.element.addClass(YearViewStyles.tooltip);\n            tooltip.popup.element.on(CLICK + NS, \".k-tooltip-title > .k-day\", that._tooltipTitleClick.bind(that));\n            tooltip.popup.element.on(KEYDOWN + NS, that, that._tooltipKeydown.bind(that));\n          },\n          _buildTooltipTemplate: function () {\n            var that = this,\n                date = kendo.parseDate(that.calendar.current()),\n                data = that.eventsByDate || [];\n            data = data.filter(function (dateData) {\n              return kendo.toString(new Date(dateData.value), \"d\") == kendo.toString(date, \"d\");\n            });\n\n            if (data && data[0]) {\n              data[0].items.map(function (event) {\n                event.resources = that.eventResources(event) || [];\n              });\n            }\n\n            return that.tooltipTemplate({\n              date: date,\n              events: data[0] ? data[0].items : [],\n              messages: that.options.messages\n            });\n          },\n          _inverseTooltipEventsColor: function () {\n            var that = this;\n            $.each(that.tooltip.popup.element.find(DOT + YearViewStyles.event), function () {\n              that._inverseEventColor($(this));\n            });\n          },\n          _tooltipShow: function (ev) {\n            var that = this,\n                tooltip = ev.sender;\n            tooltip.refresh();\n\n            that._inverseTooltipEventsColor();\n\n            tooltip.popup.element.find(\":kendoFocusable\").first().trigger(\"focus\");\n          },\n          _tooltipHide: function () {\n            if (!this.calendar) {\n              return;\n            }\n\n            this.calendar._focusCell(this.calendar.selectable.value().first(), true);\n          },\n          _tooltipTitleClick: function () {\n            this._navigateToDayView();\n          },\n          _tooltipKeydown: function (ev) {\n            var that = this,\n                element = that.tooltip.popup.element,\n                target = $(ev.target),\n                keys = kendo.keys,\n                keyCode = ev.keyCode,\n                shiftKey = ev.shiftKey;\n\n            if (target.is(\".k-day\") && keyCode == keys.ENTER || keyCode == keys.SPACEBAR) {\n              ev.preventDefault();\n\n              that._navigateToDayView();\n            }\n\n            if (keyCode == keys.TAB) {\n              var firstFocusable = element.find(\":kendoFocusable\").first();\n              var lastFocusable = element.find(\":kendoFocusable\").last();\n\n              if (shiftKey && target.is(firstFocusable)) {\n                lastFocusable.trigger(\"focus\");\n                ev.preventDefault();\n              } else if (target.is(lastFocusable)) {\n                firstFocusable.trigger(\"focus\");\n                ev.preventDefault();\n              }\n            }\n          },\n          _navigateToDayView: function () {\n            var dayViewEnabled = $.grep(this.options.views, function (view) {\n              return $.isPlainObject(view) && view.type == \"kendo.ui.DayView\" || view === \"day\";\n            }).length;\n\n            if (dayViewEnabled) {\n              this.trigger(NAVIGATE, {\n                view: \"day\",\n                date: this.calendar.current()\n              });\n            }\n          },\n          _displayTooltip: function (target) {\n            var that = this;\n\n            if (!target.length) {\n              return;\n            }\n\n            if (!that.options.selectable) {\n              target.removeClass(\"k-state-selected\");\n            }\n\n            setTimeout(function () {\n              that.tooltip.show(target);\n            }, 50);\n          },\n          _renderEventIndicators: function () {\n            var that = this,\n                calendar = that.calendar,\n                current,\n                cell;\n            calendar.element.find(\".\" + YearViewStyles.indicator).remove();\n            that.eventsByDate.forEach(function (date) {\n              current = calendar._currentView.toDateString(new Date(date.value));\n              cell = calendar.element[0].querySelector(\"[data-value='\" + current + \"']\");\n\n              if (date.items.length) {\n                $(\"<span/>\").addClass(YearViewStyles.indicator).appendTo(cell);\n              }\n            });\n          },\n          _groupEventsByDate: function (events) {\n            var eventsByDate = [],\n                eventsFormatted;\n\n            if (!events.length) {\n              return [];\n            }\n\n            eventsFormatted = events.map(function (event) {\n              event.formattedDate = event.start.toDateString();\n              return event;\n            });\n            eventsByDate = new kendo.data.Query(eventsFormatted).sort([{\n              field: \"start\",\n              dir: \"asc\"\n            }, {\n              field: \"end\",\n              dir: \"desc\"\n            }]).group({\n              field: \"formattedDate\"\n            }).toArray();\n            return eventsByDate;\n          },\n          lastDateInRange: function () {\n            var end = new Date(this.previousDate());\n            end.setMonth(end.getMonth() - 1 + this.options.months);\n            return lastDayOfMonth(end);\n          },\n          nextDate: function () {\n            return kendo.date.nextYear(this._startDate);\n          },\n          previousDate: function () {\n            return kendo.date.previousYear(this._startDate);\n          },\n          startDate: function () {\n            return this._startDate;\n          },\n          endDate: function () {\n            return this._endDate;\n          },\n          moveToEvent: function () {\n            return false;\n          },\n          constrainSelection: function () {\n            return false;\n          },\n          inRange: function () {\n            return true;\n          },\n          select: function (selection) {\n            this.clearSelection();\n\n            if (selection.start >= this.startDate() && selection.start < this.endDate()) {\n              this.calendar.value(selection.start);\n            } else {\n              this.calendar.value(this.calendar._firstViewValue);\n              selection.start = selection.end = this.calendar.value();\n            }\n\n            this.current(this.calendar.selectable.value()[0]);\n          },\n          selectionByElement: function (cell) {\n            if (!cell.length) {\n              return;\n            }\n\n            cell = $(cell);\n            return {\n              index: this.calendar._index,\n              start: kendo.calendar.toDateObject(cell),\n              end: kendo.calendar.toDateObject(cell),\n              isAllDay: false,\n              uid: 0\n            };\n          },\n          current: function (candidate) {\n            if (candidate !== undefined) {\n              this._current = candidate;\n            } else {\n              return this._current;\n            }\n          },\n          move: function (selection, key) {\n            var handled = false,\n                selectable = this.options.selectable;\n\n            if (!selectable || !selection) {\n              return;\n            }\n\n            if (key === kendo.keys.DOWN || key === kendo.keys.UP || key === kendo.keys.LEFT || key === kendo.keys.RIGHT) {\n              handled = true;\n              this.calendar.focus();\n            }\n\n            if (key === kendo.keys.ENTER || key === kendo.keys.SPACEBAR) {\n              handled = true;\n            }\n\n            if (handled) {\n              selection.start = selection.end = this.calendar.value();\n            }\n\n            return handled;\n          },\n          render: function (events) {\n            var that = this;\n            that._cachedEvents = events;\n            that.eventsByDate = that._groupEventsByDate(events) || [];\n\n            that._renderEventIndicators();\n\n            that.trigger(ACTIVATE);\n          },\n          destroy: function () {\n            var that = this;\n\n            if (that.tooltip) {\n              that.tooltip.destroy();\n              that.tooltip = null;\n            }\n\n            if (that.calendar) {\n              that.calendar.destroy();\n              that.calendar = null;\n            }\n\n            if (that.element) {\n              that.content.remove();\n              that.element.off(NS);\n            }\n\n            SchedulerView.fn.destroy.call(this);\n          }\n        });\n        extend(true, ui, {\n          YearView: YearView\n        });\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}