{"ast":null,"code":"import { Class, deepExtend, setDefaultOptions } from '../../common';\nimport { SHOW_TOOLTIP, HIDE_TOOLTIP } from '../constants';\nexport class Tooltip extends Class {\n  constructor(widgetService, options) {\n    super();\n    this.widgetService = widgetService;\n    this.options = deepExtend({}, this.options, options);\n    this.offset = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  show(anchor, args) {\n    if (this.location === args.location) {\n      return;\n    }\n\n    this.anchor = anchor;\n    this.location = args.location;\n    this.widgetService.notify(SHOW_TOOLTIP, Object.assign({\n      anchor: this.anchor\n    }, args));\n    this.visible = true;\n  }\n\n  hide() {\n    if (this.widgetService) {\n      this.widgetService.notify(HIDE_TOOLTIP);\n    }\n\n    this.visible = false;\n    this.location = null;\n  }\n\n  get anchor() {\n    return this._anchor;\n  }\n\n  set anchor(anchor) {\n    const documentPoint = this.widgetService.widget._toDocumentCoordinates({\n      x: anchor.left - this.offset.x,\n      y: anchor.top - this.offset.y\n    });\n\n    this._anchor = {\n      left: documentPoint.left,\n      top: documentPoint.top\n    };\n  }\n\n  destroy() {\n    this.widgetService = null;\n  }\n\n}\nsetDefaultOptions(Tooltip, {\n  border: {\n    width: 1\n  },\n  opacity: 1\n});","map":null,"metadata":{},"sourceType":"module"}