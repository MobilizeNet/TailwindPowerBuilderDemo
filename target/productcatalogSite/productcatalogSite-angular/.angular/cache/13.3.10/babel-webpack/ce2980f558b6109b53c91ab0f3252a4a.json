{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(995);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  982:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../main\");\n    /***/\n  },\n\n  /***/\n  995:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(982)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            Editor = kendo.ui.editor,\n            EditorUtils = Editor.EditorUtils,\n            Command = Editor.Command,\n            Tool = Editor.Tool,\n            registerTool = EditorUtils.registerTool,\n            ToolTemplate = Editor.ToolTemplate,\n            loadingOverlay = '<div contenteditable=\"false\" class=\"k-loading-mask\" style=\"width: 100%; height: 100%; position: absolute; top: 0px; left: 0px;\"><div class=\"k-loading-image\"></div><div class=\"k-loading-color\"></div></div>';\n        var ImportCommand = Command.extend({\n          exec: function () {\n            (this.editor._uploadWidget || this._initializeUploadWidget()).element.click();\n          },\n          _initializeUploadWidget: function () {\n            var cmd = this;\n            var editor = cmd.editor;\n            var importOptions = editor.options[\"import\"];\n            var upload = $('<input id=\"editorImport\" name=\"files\" type=\"file\" />').kendoUpload({\n              success: cmd._onUploadSuccess.bind(cmd),\n              progress: cmd._onUploadProgress.bind(cmd),\n              select: cmd._onUploadSelect.bind(cmd),\n              error: cmd._onUploadError.bind(cmd),\n              complete: cmd._onUploadComplete.bind(cmd),\n              showFileList: false,\n              multiple: false,\n              async: {\n                saveUrl: importOptions.proxyURL,\n                autoUpload: true,\n                saveField: \"file\"\n              },\n              validation: {\n                allowedExtensions: importOptions.allowedExtensions,\n                maxFileSize: importOptions.maxFileSize\n              }\n            }).getKendoUpload();\n            editor._uploadWidget = upload;\n            return upload;\n          },\n          _onUploadComplete: function (ev) {\n            this._trigger(\"complete\", ev);\n\n            ev.sender.clearAllFiles();\n\n            this._removeLoadingOverlay();\n          },\n          _onUploadSuccess: function (ev) {\n            this.editor.value(ev.response.html.replace(/<\\/?body>/ig, \"\"));\n\n            this._trigger(\"success\", ev);\n          },\n          _onUploadProgress: function (ev) {\n            this._trigger(\"progress\", ev);\n          },\n          _onUploadSelect: function (ev) {\n            this._trigger(\"select\", ev);\n\n            if (!ev.files[0].validationErrors) {\n              this._initLoadingOverlay();\n            }\n          },\n          _onUploadError: function (ev) {\n            this._trigger(\"error\", ev);\n          },\n          _trigger: function (eventType, uploadEvent) {\n            var editor = this.editor;\n            var importOptions = editor.options[\"import\"];\n\n            if (typeof importOptions[eventType] === \"function\") {\n              importOptions[eventType].call(editor, uploadEvent);\n            }\n          },\n          _initLoadingOverlay: function () {\n            var editable = this.editor.body;\n\n            if (Editor.Dom.is(editable, \"body\")) {\n              this._iframeWrapper = this._container = this.editor.wrapper.find(\"iframe\").parent().css({\n                position: \"relative\"\n              }).append(loadingOverlay);\n            } else {\n              this._container = $(editable).append(loadingOverlay);\n            }\n\n            kendo.ui.progress(this._container, true);\n          },\n          _removeLoadingOverlay: function () {\n            kendo.ui.progress(this._container, false);\n            $(this._iframeWrapper).css({\n              position: \"\"\n            });\n            delete this._container;\n            delete this._iframeWrapper;\n          }\n        });\n        extend(Editor, {\n          ImportCommand: ImportCommand\n        });\n        registerTool(\"import\", new Tool({\n          command: ImportCommand,\n          template: new ToolTemplate({\n            template: EditorUtils.iconTextButtonTemplate,\n            title: \"Import\"\n          })\n        }));\n      })(window.kendo.jQuery);\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}