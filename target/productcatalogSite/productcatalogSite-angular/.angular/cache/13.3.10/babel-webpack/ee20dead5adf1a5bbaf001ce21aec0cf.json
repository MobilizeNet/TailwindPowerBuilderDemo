{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1704);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  20:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../kendo.core\");\n    /***/\n  },\n\n  /***/\n  1704:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(20)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      (function (kendo, window) {\n        /* jshint eqnull:true */\n\n        /* jshint latedef: nofunc */\n        var $ = kendo.jQuery;\n        var Widget = kendo.ui.Widget;\n        var ns = \".kendoFormulaInput\";\n        var keys = kendo.keys;\n        var classNames = {\n          wrapper: \"k-spreadsheet-formula-input\",\n          listWrapper: \"k-spreadsheet-formula-list\"\n        };\n        var styles = [\"font-family\", \"font-size\", \"font-stretch\", \"font-style\", \"font-weight\", \"letter-spacing\", \"text-transform\", \"line-height\"]; //move to core\n\n        var KEY_NAMES = {\n          27: 'esc',\n          37: 'left',\n          39: 'right',\n          35: 'end',\n          36: 'home',\n          32: 'spacebar'\n        };\n        var PRIVATE_FORMULA_CHECK = /(^_|[^a-z0-9]$)/i;\n        var FormulaInput = Widget.extend({\n          init: function (element, options) {\n            Widget.call(this, element, options);\n            element = this.element;\n            element.addClass(FormulaInput.classNames.wrapper).attr(\"contenteditable\", true).attr(\"spellcheck\", false).css(\"white-space\", \"pre\");\n\n            if (options && options.formulaBarWidth) {\n              element.css(\"max-width\", options.formulaBarWidth - 16 + \"px\");\n            }\n\n            if (this.options.autoScale) {\n              element.on(\"input\", this.scale.bind(this));\n            }\n\n            this._highlightedRefs = [];\n\n            this._formulaSource();\n\n            this._formulaList();\n\n            this._popup();\n\n            this._tooltip();\n\n            element.on(\"keydown\", this._keydown.bind(this)).on(\"keyup\", this._keyup.bind(this)).on(\"blur\", this._blur.bind(this)).on(\"input click\", this._input.bind(this)).on(\"focus\", this._focus.bind(this)).on(\"paste\", this._paste.bind(this));\n          },\n          options: {\n            name: \"FormulaInput\",\n            autoScale: false,\n            filterOperator: \"startswith\",\n            scalePadding: 30,\n            minLength: 1,\n            formulaBarWidth: null\n          },\n          events: [\"keyup\", \"focus\"],\n          enable: function (enable) {\n            if (enable === undefined) {\n              return this.element.attr(\"contenteditable\") === \"true\";\n            }\n\n            if (enable) {\n              this.element.attr(\"contenteditable\", enable);\n            } else {\n              this.element.removeAttr(\"contenteditable\");\n            }\n\n            this.element.toggleClass(\"k-state-disabled\", !enable);\n          },\n          getPos: function () {\n            var div = this.element[0];\n            var sel = window.getSelection();\n            var a = lookup(sel.focusNode, sel.focusOffset);\n            var b = lookup(sel.anchorNode, sel.anchorOffset);\n\n            if (a != null && b != null) {\n              if (a > b) {\n                var tmp = a;\n                a = b;\n                b = tmp;\n              }\n\n              return {\n                begin: a,\n                end: b,\n                collapsed: a == b\n              };\n            }\n\n            function lookup(lookupNode, pos) {\n              try {\n                (function loop(node) {\n                  if (node === lookupNode) {\n                    throw pos;\n                  } else if (node.nodeType == 1\n                  /* Element */\n                  ) {\n                    for (var i = node.firstChild; i; i = i.nextSibling) {\n                      loop(i);\n                    }\n                  } else if (node.nodeType == 3\n                  /* Text */\n                  ) {\n                    pos += node.nodeValue.length;\n                  }\n                })(div);\n              } catch (index) {\n                return index;\n              }\n            }\n          },\n          setPos: function (begin, end) {\n            var eiv = this.element[0];\n            begin = lookup(eiv, begin);\n\n            if (end != null) {\n              end = lookup(eiv, end);\n            } else {\n              end = begin;\n            }\n\n            if (begin && end) {\n              var range = document.createRange();\n              range.setStart(begin.node, begin.pos);\n              range.setEnd(end.node, end.pos);\n              var sel = window.getSelection();\n              var currentRange = sel.getRangeAt(0);\n\n              if (differ(range, currentRange)) {\n                sel.removeAllRanges();\n                sel.addRange(range);\n              }\n            }\n\n            function differ(a, b) {\n              return a.startOffset != b.startOffset || a.endOffset != b.endOffset || a.startContainer != b.endContainer || a.endContainer != b.endContainer;\n            }\n\n            function lookup(node, pos) {\n              try {\n                (function loop(node) {\n                  if (node.nodeType == 3\n                  /* Text */\n                  ) {\n                    var len = node.nodeValue.length;\n\n                    if (len >= pos) {\n                      throw node;\n                    }\n\n                    pos -= len;\n                  } else if (node.nodeType == 1\n                  /* Element */\n                  ) {\n                    for (var i = node.firstChild; i; i = i.nextSibling) {\n                      loop(i);\n                    }\n                  }\n                })(node);\n              } catch (el) {\n                return {\n                  node: el,\n                  pos: pos\n                };\n              }\n            }\n          },\n          end: function () {\n            this.setPos(this.length());\n          },\n          home: function () {\n            this.setPos(0);\n          },\n          select: function () {\n            this.setPos(0, this.length());\n          },\n          length: function () {\n            return this.value().length;\n          },\n          _formulaSource: function () {\n            var result = [];\n            var value;\n\n            for (var key in kendo.spreadsheet.calc.runtime.FUNCS) {\n              if (!PRIVATE_FORMULA_CHECK.test(key)) {\n                value = key.toUpperCase();\n                result.push({\n                  value: value,\n                  text: value\n                });\n              }\n            }\n\n            this.formulaSource = new kendo.data.DataSource({\n              data: result\n            });\n          },\n          _formulaList: function () {\n            this.list = new kendo.ui.StaticList($('<ul />').addClass(FormulaInput.classNames.listWrapper).insertAfter(this.element), {\n              autoBind: false,\n              selectable: true,\n              change: this._formulaListChange.bind(this),\n              dataSource: this.formulaSource,\n              dataValueField: \"value\",\n              template: \"#:data.value#\"\n            });\n            this.list.element.on(\"mousedown\", function (e) {\n              e.preventDefault();\n            });\n          },\n          _formulaListChange: function () {\n            var tokenCtx = this._tokenContext();\n\n            if (!tokenCtx || this._mute) {\n              return;\n            }\n\n            var activeToken = tokenCtx.token;\n            var completion = this.list.value()[0];\n            var ctx = {\n              replace: true,\n              token: activeToken,\n              end: activeToken.end\n            };\n\n            if (!tokenCtx.nextToken || tokenCtx.nextToken.value != \"(\") {\n              completion += \"(\";\n            }\n\n            this._replaceAt(ctx, completion);\n\n            this.popup.close();\n          },\n          _popup: function () {\n            this.popup = new kendo.ui.Popup(this.list.element, {\n              anchor: this.element\n            });\n          },\n          _blur: function () {\n            this.popup.close();\n            clearTimeout(this._focusId);\n            this.trigger(\"blur\");\n          },\n          _isFormula: function () {\n            return /^=/.test(this.value());\n          },\n          _keydown: function (e) {\n            var key = e.keyCode;\n            var that = this;\n\n            if (KEY_NAMES[key]) {\n              that.popup.close();\n              that._navigated = true;\n            } else if (that._move(key)) {\n              that._navigated = true;\n              e.preventDefault();\n            }\n\n            that._keyDownTimeout = setTimeout(that._syntaxHighlight.bind(that));\n          },\n          _keyup: function () {\n            var popup = this.popup;\n            var value;\n\n            if (this._isFormula() && !this._navigated) {\n              value = ((this._tokenContext() || {}).token || {}).value;\n              this.filter(value);\n\n              if (!value || !this.formulaSource.view().length) {\n                popup.close();\n              } else {\n                popup[popup.visible() ? \"position\" : \"open\"]();\n                this.list.focusFirst();\n              }\n            }\n\n            this._navigated = false;\n\n            this._syntaxHighlight();\n\n            this.trigger(\"keyup\");\n          },\n          _input: function () {\n            this._syntaxHighlight();\n          },\n          _focus: function () {\n            setTimeout(this._sync.bind(this));\n            this._focusTimeout = setTimeout(this._syntaxHighlight.bind(this));\n            this.trigger(\"focus\");\n          },\n          _paste: function (ev) {\n            ev.preventDefault();\n            var pos = this.getPos();\n            var text;\n\n            if (kendo.support.browser.msie) {\n              text = window.clipboardData.getData(\"Text\");\n            } else {\n              text = ev.originalEvent.clipboardData.getData(\"text/plain\");\n            }\n\n            var val = this.value();\n            val = val.substr(0, pos.begin) + text + val.substr(pos.end);\n            this.value(val);\n            this.setPos(pos.begin + text.length);\n            this.scale();\n          },\n          _move: function (key) {\n            var list = this.list;\n            var popup = this.popup;\n\n            if (popup.visible()) {\n              if (key === keys.DOWN) {\n                list.focusNext();\n\n                if (!list.focus()) {\n                  list.focusFirst();\n                }\n\n                return true;\n              }\n\n              if (key === keys.UP) {\n                list.focusPrev();\n\n                if (!list.focus()) {\n                  list.focusLast();\n                }\n\n                return true;\n              }\n\n              if (key === keys.ENTER) {\n                list.select(list.focus());\n                popup.close();\n                return true;\n              }\n\n              if (key === keys.TAB) {\n                list.select(list.focus());\n                popup.close();\n                return true;\n              }\n\n              if (key === keys.PAGEUP) {\n                list.focusFirst();\n                return true;\n              }\n\n              if (key === keys.PAGEDOWN) {\n                list.focusLast();\n                return true;\n              }\n            }\n\n            return key === keys.ENTER || key === keys.TAB;\n          },\n          _tokenContext: function () {\n            var point = this.getPos();\n            var value = this.value();\n\n            if (!value || !point || !point.collapsed) {\n              return null;\n            }\n\n            var tokens = kendo.spreadsheet.calc.tokenize(value, this.row(), this.col());\n            var tok;\n\n            for (var i = 0; i < tokens.length; ++i) {\n              tok = tokens[i];\n\n              if (touches(tok, point) && /^(?:str|sym|func)$/.test(tok.type)) {\n                return {\n                  token: tok,\n                  nextToken: tokens[i + 1]\n                };\n              }\n            }\n\n            return null;\n          },\n          _sync: function () {\n            if (this._editorToSync && this.isActive()) {\n              this._editorToSync.value(this.value());\n            }\n          },\n          _textContainer: function () {\n            var computedStyles = kendo.getComputedStyles(this.element[0], styles);\n            computedStyles.position = \"absolute\";\n            computedStyles.visibility = \"hidden\";\n            computedStyles.whiteSpace = \"pre\";\n            computedStyles.top = -3333;\n            computedStyles.left = -3333;\n            this._span = $(\"<span style='white-space: pre'/>\").css(computedStyles).insertAfter(this.element);\n          },\n          _tooltip: function () {\n            this._cellTooltip = $('<div class=\"k-widget k-tooltip\" style=\"position:absolute; display:none\">A1</div>').insertAfter(this.element);\n          },\n          tooltip: function (value) {\n            this._cellTooltip.text(value);\n          },\n          toggleTooltip: function (show) {\n            this._cellTooltip.toggle(show);\n          },\n          isActive: function () {\n            return this.element[0] === kendo._activeElement();\n          },\n          filter: function (value) {\n            if (!value || value.length < this.options.minLength) {\n              return;\n            }\n\n            this._mute = true;\n            this.list.select(-1);\n            this._mute = false;\n            this.formulaSource.filter({\n              field: this.list.options.dataValueField,\n              operator: this.options.filterOperator,\n              value: value\n            });\n          },\n          hide: function () {\n            this.enable(false);\n            this.element.hide();\n\n            this._cellTooltip.hide();\n          },\n          show: function () {\n            this.enable(true);\n            this.element.show();\n          },\n          row: function () {\n            if (this.activeCell) {\n              return this.activeCell.row;\n            }\n          },\n          col: function () {\n            if (this.activeCell) {\n              return this.activeCell.col;\n            }\n          },\n          position: function (rectangle) {\n            if (!rectangle) {\n              return;\n            }\n\n            this.show();\n            this.element.css({\n              \"top\": rectangle.top + 1 + \"px\",\n              \"left\": rectangle.left + 1 + \"px\"\n            });\n\n            this._cellTooltip.css({\n              \"top\": rectangle.top - this._cellTooltip.height() - 10 + \"px\",\n              \"left\": rectangle.left\n            });\n          },\n          resize: function (rectangle) {\n            if (!rectangle) {\n              return;\n            }\n\n            this.element.css({\n              width: rectangle.width - 1,\n              height: rectangle.height - 1\n            });\n          },\n          canInsertRef: function (isKeyboardAction) {\n            return this._canInsertRef(isKeyboardAction);\n          },\n          _canInsertRef: function (isKeyboardAction) {\n            if (this.popup.visible()) {\n              return null;\n            }\n\n            var strictMode = isKeyboardAction;\n            var point = this.getPos();\n            var tokens, tok;\n\n            if (point && this._isFormula()) {\n              if (point.begin === 0) {\n                return null;\n              }\n\n              tokens = kendo.spreadsheet.calc.tokenize(this.value(), this.row(), this.col());\n\n              for (var i = 0; i < tokens.length; ++i) {\n                tok = tokens[i];\n\n                if (touches(tok, point)) {\n                  return canReplace(tok);\n                }\n\n                if (afterPoint(tok)) {\n                  return canInsertBetween(tokens[i - 1], tok);\n                }\n              }\n\n              return canInsertBetween(tok, null);\n            }\n\n            return null;\n\n            function afterPoint(tok) {\n              return tok.begin > point.begin;\n            }\n\n            function canReplace(tok) {\n              if (tok) {\n                if (/^(?:num|str|bool|sym|ref)$/.test(tok.type)) {\n                  return {\n                    replace: true,\n                    token: tok,\n                    end: tok.end\n                  };\n                }\n\n                if (/^(?:op|punc|startexp)$/.test(tok.type)) {\n                  if (tok.end == point.end) {\n                    return canInsertBetween(tok, tokens[i + 1]);\n                  }\n\n                  return canInsertBetween(tokens[i - 1], tok);\n                }\n              }\n            }\n\n            function canInsertBetween(left, right) {\n              if (left == null) {\n                return null;\n              }\n\n              if (right == null) {\n                if (/^(?:op|startexp)$/.test(left.type) || isOpenParen(left.value)) {\n                  return {\n                    token: left,\n                    end: point.end\n                  };\n                }\n\n                return null;\n              }\n\n              if (strictMode) {\n                if (left.type == \"op\" && /^(?:punc|op)$/.test(right.type)) {\n                  return {\n                    token: left,\n                    end: point.end\n                  };\n                }\n              } else {\n                if (left.type == \"startexp\") {\n                  return {\n                    token: left,\n                    end: point.end\n                  };\n                }\n\n                if (/^(?:op|punc)$/.test(left.type) && /^[,;({]$/.test(left.value)) {\n                  return {\n                    token: left,\n                    end: point.end\n                  };\n                }\n\n                if (/^(?:ref|sym)/.test(left.type)) {\n                  return {\n                    token: left,\n                    replace: true,\n                    end: left.end\n                  };\n                }\n\n                if (/^(?:ref|sym)/.test(right.type)) {\n                  return {\n                    token: right,\n                    replace: true,\n                    end: right.end\n                  };\n                }\n              }\n\n              return false;\n            }\n          },\n          refAtPoint: function (sheet) {\n            var x = this._canInsertRef();\n\n            if (x) {\n              var ref = sheet.selection()._ref.simplify().clone().relative(0, 0, 3);\n\n              if (sheet.isMerged(ref)) {\n                ref = ref.topLeft;\n              }\n\n              if (sheet !== this.activeSheet) {\n                ref = ref.setSheet(sheet.name(), true);\n              }\n\n              this._replaceAt(x, ref.print(0, 0));\n            }\n          },\n          _replaceAt: function (ctx, newValue) {\n            var value = this.value();\n            var tok = ctx.token;\n            var rest = value.substr(ctx.end);\n            value = value.substr(0, ctx.replace ? tok.begin : ctx.end) + newValue;\n            var point = value.length;\n            value += rest;\n\n            this._value(value);\n\n            this.setPos(point);\n            this.scale();\n\n            this._syntaxHighlight();\n          },\n          syncWith: function (formulaInput) {\n            var self = this; // IE does not support \"input\" event on elements with contenteditable\n            // https://developer.mozilla.org/en-US/docs/Web/Events/input#Browser_compatibility\n\n            var eventName = \"input\" + ns;\n\n            var handler = self._sync.bind(self),\n                iehandler;\n\n            if (kendo.support.browser.msie) {\n              eventName = \"keydown\" + ns;\n\n              iehandler = function () {\n                setTimeout(handler);\n              };\n            }\n\n            self._editorToSync = formulaInput;\n            self.element.off(eventName).on(eventName, iehandler || handler);\n          },\n          scale: function () {\n            var element = this.element;\n            var width, height;\n\n            if (!this._span) {\n              this._textContainer();\n            }\n\n            this._span.html(element.html());\n\n            width = this._span.width() + this.options.scalePadding;\n            height = this._span.height();\n\n            if (width > element.width()) {\n              element.width(width);\n            }\n\n            if (height > element.height()) {\n              element.height(height);\n            }\n\n            this._sync();\n          },\n          _value: function (value) {\n            this.element.text(value);\n          },\n          value: function (value) {\n            if (value === undefined) {\n              // jQuery's .text() discards the newlines for some reason\n              var txt = this.element[0].innerText;\n              return txt.replace(/\\n$/, \"\");\n            }\n\n            this._value(value);\n\n            this._syntaxHighlight();\n          },\n          highlightedRefs: function () {\n            return this._highlightedRefs.slice();\n          },\n          _syntaxHighlight: function () {\n            var pos = this.getPos();\n            var value = this.value();\n            var refClasses = kendo.spreadsheet.Pane.classNames.series;\n            var highlightedRefs = [];\n            var refIndex = 0;\n            var parens = [];\n            var tokens = [];\n            var activeToken;\n\n            if (pos && !pos.collapsed) {\n              // Backward selection (hold shift, move right to left)\n              // will not work properly if we continuously re-set\n              // the HTML.  If the selection is on, presumably the\n              // text has already been highlighted, so stop here.\n              return;\n            }\n\n            if (!/^=/.test(value)) {\n              // if an user deleted the initial =, reset the text to\n              // discard any highlighting.  Only do that once.\n              if (this._highlightedRefs.length) {\n                this._highlightedRefs = [];\n                this.element.text(value);\n              } // also make sure the completion popup goes away\n\n\n              if (this.popup) {\n                this.popup.close();\n              }\n\n              return; // avoid messing with the cursor position below\n            } else {\n              tokens = kendo.spreadsheet.calc.tokenize(value, this.row(), this.col());\n              tokens.forEach(function (tok) {\n                tok.active = false;\n                tok.cls = [\"k-syntax-\" + tok.type];\n\n                if (tok.type == \"ref\") {\n                  tok.colorClass = refClasses[refIndex++ % refClasses.length];\n                  tok.cls.push(tok.colorClass);\n                  highlightedRefs.push(tok);\n                }\n\n                if (pos && tok.type == \"punc\") {\n                  if (isOpenParen(tok.value)) {\n                    parens.unshift(tok);\n                  } else if (isCloseParen(tok.value)) {\n                    var open = parens.shift();\n\n                    if (open) {\n                      if (isMatchingParen(tok.value, open.value)) {\n                        if (touches(tok, pos) || touches(open, pos)) {\n                          tok.cls.push(\"k-syntax-paren-match\");\n                          open.cls.push(\"k-syntax-paren-match\");\n                        }\n                      } else {\n                        tok.cls.push(\"k-syntax-error\");\n                        open.cls.push(\"k-syntax-error\");\n                      }\n                    } else {\n                      tok.cls.push(\"k-syntax-error\");\n                    }\n                  }\n                }\n\n                if (pos && touches(tok, pos)) {\n                  tok.cls.push(\"k-syntax-at-point\");\n                  tok.active = true;\n                  activeToken = tok;\n                }\n\n                if (tok.type == \"func\" && !knownFunction(tok.value) && (!pos || !touches(tok, pos))) {\n                  tok.cls.push(\"k-syntax-error\");\n                }\n              });\n              tokens.reverse().forEach(function (tok) {\n                var begin = tok.begin,\n                    end = tok.end;\n                var text = kendo.htmlEncode(value.substring(begin, end));\n                value = value.substr(0, begin) + \"<span class='\" + tok.cls.join(\" \") + \"'>\" + text + \"</span>\" + value.substr(end);\n              });\n              this.element.html(value);\n            }\n\n            if (pos) {\n              this.setPos(pos.begin, pos.end);\n            }\n\n            this._highlightedRefs = highlightedRefs;\n          },\n          destroy: function () {\n            this._editorToSync = null;\n            this.element.off(ns);\n            clearTimeout(this._focusTimeout);\n            clearTimeout(this._keyDownTimeout);\n            this._cellTooltip = null;\n            this._span = null;\n            this.popup.destroy();\n            this.popup = null;\n            Widget.fn.destroy.call(this);\n          },\n          insertNewline: function () {\n            var val = this.value();\n            var pos = this.getPos();\n            var eof = pos.end == val.length;\n            val = val.substr(0, pos.begin) + (eof ? \"\\n\\n\" : \"\\n\" + val.substr(pos.end));\n            this.value(val);\n            this.setPos(pos.begin + 1);\n          }\n        });\n\n        function isOpenParen(ch) {\n          return ch == \"(\" || ch == \"[\" || ch == \"{\";\n        }\n\n        function isCloseParen(ch) {\n          return ch == \")\" || ch == \"]\" || ch == \"}\";\n        }\n\n        function isMatchingParen(close, open) {\n          return open == \"(\" ? close == \")\" : open == \"[\" ? close == \"]\" : open == \"{\" ? close == \"}\" : false;\n        }\n\n        function touches(pos, target) {\n          return pos.begin <= target.begin && pos.end >= target.end;\n        }\n\n        function knownFunction(name) {\n          return kendo.spreadsheet.calc.runtime.FUNCS[name.toLowerCase()];\n        }\n\n        kendo.spreadsheet.FormulaInput = FormulaInput;\n        $.extend(true, FormulaInput, {\n          classNames: classNames\n        });\n      })(kendo, window);\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}