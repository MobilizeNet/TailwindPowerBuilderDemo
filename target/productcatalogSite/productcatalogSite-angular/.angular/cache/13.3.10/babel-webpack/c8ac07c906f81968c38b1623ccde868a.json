{"ast":null,"code":"import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\nimport { INITIAL_ANIMATION_DURATION, BAR, START_SCALE } from '../constants';\nimport { X, Y } from '../../common/constants';\nimport { interpolateValue, setDefaultOptions } from '../../common';\n\nclass BarChartAnimation extends draw.Animation {\n  setup() {\n    const {\n      element,\n      options\n    } = this;\n    const bbox = element.bbox();\n\n    if (bbox) {\n      this.origin = options.origin;\n      const axis = options.vertical ? Y : X;\n      const fromScale = this.fromScale = new geom.Point(1, 1);\n      fromScale[axis] = START_SCALE;\n      element.transform(geom.transform().scale(fromScale.x, fromScale.y));\n    } else {\n      this.abort();\n    }\n  }\n\n  step(pos) {\n    const scaleX = interpolateValue(this.fromScale.x, 1, pos);\n    const scaleY = interpolateValue(this.fromScale.y, 1, pos);\n    this.element.transform(geom.transform().scale(scaleX, scaleY, this.origin));\n  }\n\n  abort() {\n    super.abort();\n    this.element.transform(null);\n  }\n\n}\n\nsetDefaultOptions(BarChartAnimation, {\n  duration: INITIAL_ANIMATION_DURATION\n});\ndraw.AnimationFactory.current.register(BAR, BarChartAnimation);\nexport default BarChartAnimation;","map":null,"metadata":{},"sourceType":"module"}