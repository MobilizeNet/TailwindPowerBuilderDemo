{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1085);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1051:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.core\");\n    /***/\n  },\n\n  /***/\n  1085:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1051)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"bottomnavigation\",\n        name: \"BottomNavigation\",\n        category: \"web\",\n        description: \"The BottomNavigation widget is a navigation element that allows movement between primary destinations in an app.\",\n        depends: [\"core\"]\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            extend = $.extend,\n            template = kendo.template,\n            keys = kendo.keys,\n            isPlainObject = $.isPlainObject,\n            isEmptyObject = $.isEmptyObject,\n            NS = \".kendoBottomNavigation\",\n            PREFIX = \"k-bottom-nav-\",\n            K_POS = \"k-pos-\",\n            DOT = \".\",\n            SELECT = \"select\";\n\n        var isString = function (value) {\n          return typeof value === \"string\";\n        };\n\n        var bottomNavigationStyles = {\n          widget: \"k-bottom-nav\",\n          item: \"k-bottom-nav-item\",\n          navIcon: \"k-bottom-nav-item-icon\",\n          icon: \"k-icon\",\n          text: \"k-bottom-nav-item-text\",\n          itemFlow: {\n            vertical: \"k-bottom-nav-item-flow-vertical\",\n            horizontal: \"k-bottom-nav-item-flow-horizontal\"\n          },\n          selected: \"k-state-selected\",\n          disabled: \"k-state-disabled\",\n          border: \"k-bottom-nav-border\",\n          shadow: \"k-bottom-nav-shadow\",\n          focus: \"k-state-focused\"\n        };\n        var templates = {\n          item: template(\"<span class='\" + bottomNavigationStyles.item + \"'></span>\"),\n          anchor: template(\"<a class='\" + bottomNavigationStyles.item + \"' href='#:url#'></a>\"),\n          text: template(\"<span class='\" + bottomNavigationStyles.text + \"'>#=text#</span>\"),\n          icon: template(\"<span class='\" + bottomNavigationStyles.navIcon + \"#if(icon){# k-icon k-i-#:icon# #}#'></span>\")\n        };\n        var BottomNavigation = Widget.extend({\n          init: function (element, options) {\n            var that = this;\n            options = options || {};\n            Widget.fn.init.call(that, element, options);\n            that.element = $(element);\n\n            that._updateCssClasses();\n\n            that._items();\n\n            that._bindEvents();\n          },\n          options: {\n            name: \"BottomNavigation\",\n            positionMode: \"fixed\",\n            items: [],\n            themeColor: \"primary\",\n            itemFlow: \"vertical\",\n            fill: \"flat\",\n            shadow: false,\n            border: true,\n            template: null\n          },\n          events: [SELECT],\n          destroy: function () {\n            var that = this;\n            that.element.off(NS);\n            Widget.fn.destroy.call(this);\n          },\n          _tabindex: function (target) {\n            var that = this,\n                element = that.element,\n                TABINDEX = \"tabindex\",\n                cachedTabIndex = element.attr(\"data-\" + kendo.ns + TABINDEX),\n                tabindex = target.attr(TABINDEX) || element.attr(TABINDEX) || cachedTabIndex;\n\n            if (!cachedTabIndex) {\n              element.removeAttr(TABINDEX);\n              element.attr(\"data-\" + kendo.ns + TABINDEX, tabindex);\n            }\n\n            target.attr(TABINDEX, !isNaN(tabindex) ? tabindex : 0);\n          },\n          _updateCssClasses: function () {\n            var that = this,\n                options = that.options,\n                styles = bottomNavigationStyles; // Remove all class names\n\n            that.element.removeClass(function (index, className) {\n              if (className.indexOf('k-') === 0) {\n                that.element.removeClass(className);\n              }\n            });\n            that.element.addClass(styles.widget);\n            that.element.addClass(kendo.getValidCssClass(PREFIX, \"themeColor\", options.themeColor));\n            that.element.addClass(kendo.getValidCssClass(PREFIX, \"fill\", options.fill));\n            that.element.addClass(kendo.getValidCssClass(K_POS, \"positionMode\", options.positionMode));\n            that.element.toggleClass(styles.border, options.border);\n            that.element.toggleClass(styles.shadow, options.shadow);\n\n            that._itemFlow(options.itemFlow);\n          },\n          _itemFlow: function (orientation) {\n            var that = this,\n                orientationStyles = bottomNavigationStyles.itemFlow;\n\n            that._toggleClassGroup(that.element, orientation, orientationStyles);\n          },\n          _toggleClassGroup: function (element, value, group) {\n            if (isString(group[value])) {\n              for (var key in group) {\n                element.removeClass(group[key]);\n              }\n\n              element.addClass(group[value]);\n            }\n          },\n          _items: function () {\n            var that = this,\n                options = that.options,\n                items = options.items,\n                item;\n\n            for (var i = 0; i < items.length; i++) {\n              item = that._renderItem(items[i]);\n              that.element.append(item);\n            }\n          },\n          _renderItem: function (item) {\n            var that = this,\n                itemTemplate = item.template || that.options.template,\n                isLink = item.url && isString(item.url),\n                elm,\n                icon;\n            elm = $(isLink ? template(templates.anchor)(item) : template(templates.item)(item));\n            elm.toggleClass(bottomNavigationStyles.selected, item.selected === true).toggleClass(bottomNavigationStyles.disabled, item.enabled === false).addClass(item.cssClass).attr(extend({}, item.attributes, {\n              \"aria-disabled\": item.enabled === false\n            })).data(item.data);\n\n            that._tabindex(elm);\n\n            if (!elm.attr(\"role\") && !isLink) {\n              elm.attr(\"role\", \"link\");\n            }\n\n            if (itemTemplate) {\n              elm.append(template(itemTemplate)(item));\n              return elm;\n            }\n\n            item = extend({}, {\n              icon: \"\"\n            }, item);\n            icon = $(templates.icon(item)).addClass(item.iconClass);\n            elm.append(icon);\n\n            if (item.text) {\n              item.text = item.encoded === false ? item.text : kendo.htmlEncode(item.text);\n              elm.append($(templates.text(item)));\n            }\n\n            return elm;\n          },\n          _bindEvents: function () {\n            var that = this,\n                clickProxy = that._click.bind(that),\n                keydownProxy = that._keydown.bind(that);\n\n            that.element.on(\"click\" + NS, DOT + bottomNavigationStyles.item, clickProxy).on(\"keydown\" + NS, DOT + bottomNavigationStyles.item, keydownProxy);\n          },\n          _click: function (ev) {\n            var that = this,\n                item = $(ev.target).closest(DOT + bottomNavigationStyles.item);\n\n            if (item.is(DOT + bottomNavigationStyles.disabled)) {\n              ev.preventDefault();\n              return;\n            }\n\n            that._triggerSelect(item, ev);\n          },\n          _triggerSelect: function (item, ev) {\n            var that = this;\n\n            if (item.is(DOT + bottomNavigationStyles.disabled)) {\n              return;\n            }\n\n            if (that.trigger(SELECT, {\n              originalEvent: ev,\n              item: item,\n              data: item.data()\n            })) {\n              return;\n            }\n\n            that.select(item);\n          },\n          _keydown: function (ev) {\n            var that = this,\n                target = $(ev.target),\n                key = ev.keyCode;\n\n            if (key === keys.ENTER || key === keys.SPACEBAR) {\n              if (that._isItem(target)) {\n                that._triggerSelect(target, ev);\n\n                if (key === keys.SPACEBAR) {\n                  ev.preventDefault();\n                }\n              }\n            }\n          },\n          _isItem: function (item) {\n            var that = this;\n            item = $(item);\n            return item.is(DOT + bottomNavigationStyles.item) && !!that.element.find(item).length;\n          },\n          items: function () {\n            var that = this;\n            return that.element.children();\n          },\n          select: function (item, state) {\n            var that = this,\n                selectedItem = that.items().filter(DOT + bottomNavigationStyles.selected);\n\n            if (!item) {\n              return selectedItem;\n            }\n\n            state = state !== false;\n\n            if (that._isItem(item)) {\n              selectedItem.removeClass(bottomNavigationStyles.selected);\n              $(item).toggleClass(bottomNavigationStyles.selected, state);\n            }\n          },\n          enable: function (item, state) {\n            var that = this;\n            state = state === false;\n\n            if (item && that._isItem(item)) {\n              $(item).toggleClass(bottomNavigationStyles.disabled, state);\n              $(item).attr(\"aria-disabled\", state);\n            }\n          },\n          item: function (index) {\n            var that = this;\n\n            if (isNaN(index)) {\n              return null;\n            }\n\n            return that.items().eq(index);\n          },\n          itemById: function (id) {\n            var that = this;\n            return that.element.find(\"#\" + id);\n          },\n          add: function (item, before) {\n            var that = this,\n                method = \"append\",\n                targetElement = that.element;\n\n            if (before && that._isItem(before)) {\n              method = \"before\";\n              targetElement = $(before);\n            }\n\n            if (item && isPlainObject(item) && !isEmptyObject(item)) {\n              targetElement[method](that._renderItem(item));\n            }\n          },\n          remove: function (item) {\n            var that = this;\n\n            if (item && that._isItem(item)) {\n              item.remove();\n            }\n          },\n          showText: function (toggle) {\n            var that = this,\n                textItems = that.items().find(DOT + bottomNavigationStyles.text);\n            toggle = toggle !== false;\n            textItems.toggle(toggle);\n          },\n          setOptions: function (options) {\n            var that = this;\n            Widget.fn.setOptions.call(this, options);\n\n            that._updateCssClasses();\n\n            if (\"items\" in options || \"template\" in options) {\n              that.element.empty();\n\n              that._items();\n            }\n          }\n        });\n        ui.plugin(BottomNavigation);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}