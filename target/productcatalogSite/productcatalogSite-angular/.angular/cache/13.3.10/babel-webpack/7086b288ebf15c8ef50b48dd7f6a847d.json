{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1402);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1137:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.tooltip\");\n    /***/\n  },\n\n  /***/\n  1402:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1137)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"popover\",\n        name: \"Popover\",\n        category: \"web\",\n        description: \"The Popover widget displays a popup with additional information for an element.\",\n        depends: [\"tooltip\"],\n        features: [{\n          id: \"popover-fx\",\n          name: \"Animation\",\n          description: \"Support for animation\",\n          depends: [\"fx\"]\n        }]\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            Popup = kendo.ui.Popup,\n            TooltipBase = kendo.ui.TooltipBase,\n            extend = $.extend,\n            DOCUMENT = $(document),\n            NS = \".kendoPopover\",\n            ARROWWIDTH = 28,\n            TEXTBUTTONTEMPLATE = '<button #=index# class=\"k-button k-button-md k-rounded-md k-button-flat k-button-flat-primary\"><span class=\"k-button-text\">#=text#</span></button>',\n            ICONTEXTBUTTONTEMPLATE = '<button #=index# class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\">' + '<span class=\"k-button-icon #=iconClass#\"></span>' + '<span class=\"k-button-text\">#=text#</span>' + '</button>',\n            ICONBUTTON = '<button #=index# class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button\"><span class=\"k-button-icon #=iconClass#\"></span></button>',\n            CARDTEMPLATE = '#if (header) {# <div class=\"k-popover-header\">#=header#</div> #}#' + '<div class=\"k-popover-body\">#=body#</div>' + '#if (actions){ #<div class=\"k-popover-actions k-actions k-hstack k-justify-content-#=positioning#\">#=actions#</div>#}#',\n            TEMPLATE = '<div role=\"tooltip\" class=\"k-popover k-widget\">' + '#if (callout){ #<div class=\"k-popover-callout k-callout-#=dir#\"></div>#}#' + '</div>',\n            SHOW = \"show\",\n            HIDE = \"hide\",\n            REVERSE = {\n          \"top\": \"bottom\",\n          \"bottom\": \"top\",\n          \"left\": \"right\",\n          \"right\": \"left\",\n          \"center\": \"center\"\n        },\n            POSITIONS = {\n          bottom: {\n            origin: \"bottom center\",\n            position: \"top center\"\n          },\n          top: {\n            origin: \"top center\",\n            position: \"bottom center\"\n          },\n          left: {\n            origin: \"center left\",\n            position: \"center right\",\n            collision: \"fit flip\"\n          },\n          right: {\n            origin: \"center right\",\n            position: \"center left\",\n            collision: \"fit flip\"\n          },\n          center: {\n            position: \"center center\",\n            origin: \"center center\"\n          }\n        },\n            DIRCLASSES = {\n          bottom: \"n\",\n          top: \"s\",\n          left: \"e\",\n          right: \"w\",\n          center: \"n\"\n        },\n            EVENTSCOUNTERPART = {\n          \"mouseenter\": \"mouseleave\",\n          \"focus\": \"blur\",\n          \"focusin\": \"focusout\"\n        },\n            DIMENSIONS = {\n          \"horizontal\": {\n            offset: \"top\",\n            size: \"outerHeight\"\n          },\n          \"vertical\": {\n            offset: \"left\",\n            size: \"outerWidth\"\n          }\n        };\n        var Popover = TooltipBase.extend({\n          init: function (element, options) {\n            var that = this,\n                axis;\n            TooltipBase.fn.init.call(that, element, options);\n            axis = that.options.position.match(/left|right/) ? \"horizontal\" : \"vertical\";\n            that.dimensions = DIMENSIONS[axis];\n            that._saveTitle = $.noop;\n            that._documentKeyDownHandler = that._documentKeyDown.bind(that);\n            that._actionsHandler = that._actionsClick.bind(that);\n\n            if (that.options.toggleOnClick && that._isShownOnClick()) {\n              that.element.on((kendo.support.touch ? kendo.support.mousedown : that.options.showOn) + NS, that.options.filter, that._showAction.bind(that));\n            }\n\n            if (!that._isShownOnClick()) {\n              that.element.on(EVENTSCOUNTERPART[that.options.showOn], that.options.filter, that._dismissAction.bind(that));\n            }\n          },\n          options: {\n            name: \"Popover\",\n            filter: \"\",\n            actions: [],\n            actionsLayout: \"center\",\n            position: \"bottom\",\n            showOn: \"mouseenter\",\n            toggleOnClick: false,\n            width: null,\n            height: null,\n            animation: {\n              open: {\n                effects: \"fade:in\",\n                duration: 0\n              },\n              close: {\n                duration: 40,\n                hide: true\n              }\n            }\n          },\n          events: [SHOW, HIDE],\n          _addAria: function () {\n            var that = this;\n            var options = that.options;\n            var id;\n\n            if (that._isShownOnClick() && that.wrapper.find(\"a,input,select,textarea,button\").length) {\n              that.wrapper.attr(\"role\", \"dialog\");\n              that._isDialog = true;\n\n              if (options.header) {\n                id = kendo.guid();\n                that.wrapper.attr(\"aria-labelledby\", id).find(\".k-popover-header\").attr(\"id\", id);\n              }\n\n              if (options.body) {\n                id = kendo.guid();\n                that.wrapper.attr(\"aria-describedby\", id).find(\".k-popover-body\").attr(\"id\", id);\n              }\n            } else {\n              that.wrapper.attr(\"role\", \"tooltip\");\n            }\n          },\n          _appendContent: function (target) {\n            var that = this,\n                options = that.options,\n                template = that.options.template;\n            that.wrapper.children(\":not(.k-popover-callout)\").remove();\n\n            if (template) {\n              that.wrapper.append(kendo.template(template)({\n                target: target\n              }));\n            } else {\n              that.wrapper.append(kendo.template(CARDTEMPLATE)({\n                header: kendo.template(options.header || \"\")({\n                  target: target\n                }),\n                body: kendo.template(options.body || \"\")({\n                  target: target\n                }),\n                actions: that._buildActions(options.actions),\n                positioning: options.actionsLayout\n              }));\n            }\n          },\n          _actionsClick: function (e) {\n            var that = this;\n            var actions = that.options.actions;\n            var button = $(e.currentTarget);\n            var action = actions[parseInt(button.attr(kendo.attr(\"index\")), 10)];\n\n            if (action.click) {\n              action.click.call(that, {\n                sender: that,\n                target: button\n              });\n            }\n          },\n          _attachActions: function () {\n            var that = this;\n            that.wrapper.on(\"click\" + NS, \".k-popover-actions .k-button\", that._actionsHandler);\n          },\n          _dettachActions: function () {\n            var that = this;\n\n            if (that.wrapper) {\n              that.wrapper.off(\"click\" + NS, that._actionsHandler);\n            }\n          },\n          _buildActions: function (actions) {\n            if (!actions.length) {\n              return;\n            }\n\n            var html = \"\";\n            var action;\n\n            for (var index = 0; index < actions.length; index++) {\n              action = actions[index];\n\n              if (action.text && action.iconClass) {\n                html += kendo.template(ICONTEXTBUTTONTEMPLATE)({\n                  text: action.text,\n                  index: kendo.attr(\"index\") + \"=\" + index,\n                  iconClass: action.iconClass\n                });\n              } else if (action.iconClass && !action.text) {\n                html += kendo.template(ICONBUTTON)({\n                  index: kendo.attr(\"index\") + \"=\" + index,\n                  iconClass: action.iconClass\n                });\n              } else {\n                html += kendo.template(TEXTBUTTONTEMPLATE)({\n                  text: action.text,\n                  index: kendo.attr(\"index\") + \"=\" + index\n                });\n              }\n            }\n\n            return html;\n          },\n          _documentKeyDown: function (e) {\n            if (e.keyCode === kendo.keys.ESC) {\n              this._shown = false;\n\n              this._dismissAction();\n            }\n\n            if (e.keyCode === kendo.keys.TAB) {\n              var allFocusables = this.wrapper.find(\":kendoFocusable\");\n              var firstFocusable = allFocusables.first();\n              var lastFocusable = allFocusables.last();\n\n              if (e.shiftKey) {\n                if (document.activeElement === firstFocusable[0]) {\n                  lastFocusable.trigger(\"focus\");\n                  e.preventDefault();\n                }\n              } else {\n                if (document.activeElement === lastFocusable[0]) {\n                  firstFocusable.trigger(\"focus\");\n                  e.preventDefault();\n                }\n              }\n            }\n          },\n          _initPopup: function () {\n            var that = this,\n                options = that.options,\n                wrapper = $(kendo.template(TEMPLATE)({\n              callout: options.callout && options.position !== \"center\",\n              dir: DIRCLASSES[options.position]\n            }));\n            that.wrapper = wrapper;\n            that.popup = new Popup(wrapper, extend({\n              activate: function () {\n                that._offset(that.options.position, that.options.offset, ARROWWIDTH);\n\n                that._positionCallout();\n\n                that._attachActions();\n\n                DOCUMENT.on(\"keydown\" + NS, that._documentKeyDownHandler);\n\n                if (that._isDialog) {\n                  that.wrapper.find(\":kendoFocusable\").first().trigger(\"focus\");\n                } else {\n                  that._addDescribedBy();\n                }\n\n                that.trigger(SHOW);\n                that.popup._hovered = undefined;\n              },\n              close: function (e) {\n                if (that.options.toggleOnClick && that._shown) {\n                  e.preventDefault();\n                  return;\n                }\n\n                that.trigger(HIDE);\n              },\n              copyAnchorStyles: false,\n              animation: options.animation\n            }, POSITIONS[options.position]));\n            wrapper.css({\n              width: options.width,\n              height: options.height\n            });\n\n            if (that._isShownOnMouseEnter()) {\n              wrapper.on(\"mouseleave\" + NS, that._dismissAction.bind(that));\n            }\n\n            that.arrow = wrapper.find(\".k-popover-callout\");\n          },\n          _dismissAction: function () {\n            var that = this;\n            clearTimeout(that.timeout);\n            that.timeout = setTimeout(function () {\n              if (that.popup && !that.popup._hovered) {\n                that.popup.close();\n              }\n            }, that.options.hideAfter);\n          },\n          _showAction: function () {\n            var that = this;\n            that._shown = !that._shown;\n\n            if (!that._shown) {\n              that.popup.close();\n            }\n          },\n          _show: function (target) {\n            var that = this,\n                current = that.target();\n\n            if (!that.popup) {\n              that._initPopup();\n            }\n\n            if (current && current[0] != target[0]) {\n              that.popup.close();\n              that.popup.element.kendoStop(true, true);\n            }\n\n            if (!current || current[0] != target[0]) {\n              that._appendContent(target);\n\n              that._addAria();\n\n              that.popup.options.anchor = target;\n            }\n\n            that.popup.one(\"deactivate\", function () {\n              DOCUMENT.off(\"keydown\" + NS, that._documentKeyDownHandler);\n\n              if (!that._isDialog) {\n                that._removeDescribedBy(that.target());\n\n                this.element.removeAttr(\"id\");\n              }\n\n              that._dettachActions();\n            });\n\n            that._openPopup();\n          },\n          _positionCallout: function () {\n            var that = this,\n                position = that.options.position,\n                popup = that.popup,\n                cssClass = DIRCLASSES[popup.flipped ? REVERSE[position] : position];\n            that.arrow.removeClass(\"k-callout-s k-callout-w k-callout-e k-callout-n\").addClass(\"k-callout-\" + cssClass);\n          },\n          destroy: function () {\n            this.element.off(NS);\n\n            this._dettachActions();\n\n            clearTimeout(this.timeout);\n            DOCUMENT.off(\"keydown\" + NS, this._documentKeyDownHandler);\n            TooltipBase.fn.destroy.call(this);\n          }\n        });\n        kendo.ui.plugin(Popover);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}