{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1019);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  982:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../main\");\n    /***/\n  },\n\n  /***/\n  1011:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./resizing-utils\");\n    /***/\n  },\n\n  /***/\n  1019:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(982), __webpack_require__(1020), __webpack_require__(1011)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      (function (kendo, undefined) {\n        var $ = kendo.jQuery;\n        var extend = $.extend;\n        var noop = $.noop;\n        var Editor = kendo.ui.editor;\n        var Class = kendo.Class;\n        var KEY_DOWN = \"keydown\";\n        var MOUSE_DOWN = \"mousedown\";\n        var MOUSE_ENTER = \"mouseenter\";\n        var MOUSE_LEAVE = \"mouseleave\";\n        var MOUSE_MOVE = \"mousemove\";\n        var MOUSE_UP = \"mouseup\";\n        var COMMA = \",\";\n        var DOT = \".\";\n        var LAST_CHILD = \":last-child\";\n        var TABLE = \"table\";\n        var TableElementResizing = Class.extend({\n          init: function (element, options) {\n            var that = this;\n            that.options = extend({}, that.options, options);\n            that.options.tags = Array.isArray(that.options.tags) ? that.options.tags : [that.options.tags];\n\n            if ($(element).is(TABLE)) {\n              that.element = element;\n\n              that._attachEventHandlers();\n            }\n          },\n          destroy: function () {\n            var that = this;\n            var eventNamespace = that.options.eventNamespace;\n\n            if (that.element) {\n              $(that.element).off(eventNamespace);\n              that.element = null;\n            }\n\n            $(that.options.rootElement).off(KEY_DOWN + eventNamespace);\n\n            that._destroyResizeHandle();\n          },\n          options: {\n            tags: [],\n            min: 0,\n            rootElement: null,\n            eventNamespace: \"\",\n            rtl: false,\n            handle: {\n              dataAttribute: \"\",\n              height: 0,\n              width: 0,\n              classNames: {},\n              template: \"\"\n            }\n          },\n          _attachEventHandlers: function () {\n            var that = this;\n            var options = that.options;\n            $(that.element).on(MOUSE_MOVE + options.eventNamespace, options.tags.join(COMMA), that.detectElementBorderHovering.bind(that));\n          },\n          resizingInProgress: function () {\n            var that = this;\n            var resizable = that._resizable;\n\n            if (resizable) {\n              return !!resizable.resizing;\n            }\n\n            return false;\n          },\n          resize: noop,\n          detectElementBorderHovering: function (e) {\n            var that = this;\n            var options = that.options;\n            var handleOptions = options.handle;\n            var tableElement = $(e.currentTarget);\n            var resizeHandle = that.resizeHandle;\n            var dataAttribute = handleOptions.dataAttribute;\n\n            if (!that.resizingInProgress()) {\n              if (!tableElement.is(LAST_CHILD) && that.elementBorderHovered(tableElement, e)) {\n                if (resizeHandle) {\n                  if (resizeHandle.data(dataAttribute) && resizeHandle.data(dataAttribute) !== tableElement[0]) {\n                    that.showResizeHandle(tableElement, e);\n                  }\n                } else {\n                  that.showResizeHandle(tableElement, e);\n                }\n              } else {\n                if (resizeHandle) {\n                  that._destroyResizeHandle();\n                }\n              }\n            }\n          },\n          elementBorderHovered: noop,\n          showResizeHandle: function (tableElement, e) {\n            var that = this;\n\n            if (e.buttons !== 0) {\n              //prevent showing when a mouse button is still being pressed\n              return;\n            }\n\n            that._initResizeHandle();\n\n            that.setResizeHandlePosition(tableElement);\n            that.setResizeHandleDimensions();\n            that.setResizeHandleDataAttributes(tableElement[0]);\n\n            that._attachResizeHandleEventHandlers();\n\n            that._initResizable(tableElement);\n\n            that._hideResizeMarker();\n\n            that.resizeHandle.show();\n          },\n          _initResizeHandle: function () {\n            var that = this;\n            var options = that.options;\n\n            that._destroyResizeHandle();\n\n            that.resizeHandle = $(options.handle.template).appendTo(options.rootElement);\n          },\n          setResizeHandlePosition: noop,\n          setResizeHandleDimensions: noop,\n          setResizeHandleDataAttributes: function (tableElement) {\n            var that = this;\n            that.resizeHandle.data(that.options.handle.dataAttribute, tableElement);\n          },\n          _attachResizeHandleEventHandlers: function () {\n            var that = this;\n            var options = that.options;\n            var eventNamespace = options.eventNamespace;\n            var markerClass = options.handle.classNames.marker;\n            var resizeHandle = that.resizeHandle;\n            that.resizeHandle.on(MOUSE_DOWN + eventNamespace, function () {\n              resizeHandle.find(DOT + markerClass).show();\n            }).on(MOUSE_UP + eventNamespace, function () {\n              resizeHandle.find(DOT + markerClass).hide();\n            });\n          },\n          _hideResizeMarker: function () {\n            var that = this;\n            that.resizeHandle.find(DOT + that.options.handle.classNames.marker).hide();\n          },\n          _destroyResizeHandle: function () {\n            var that = this;\n\n            if (that.resizeHandle) {\n              that._destroyResizable();\n\n              that.resizeHandle.off(that.options.eventNamespace).remove();\n              that.resizeHandle = null;\n            }\n          },\n          _initResizable: function (tableElement) {\n            var that = this;\n\n            if (!that.resizeHandle) {\n              return;\n            }\n\n            that._destroyResizable();\n\n            that._resizable = new kendo.ui.Resizable(tableElement, {\n              draggableElement: that.resizeHandle[0],\n              start: that.onResizeStart.bind(that),\n              resize: that.onResize.bind(that),\n              resizeend: that.onResizeEnd.bind(that)\n            });\n          },\n          _destroyResizable: function () {\n            var that = this;\n\n            if (that._resizable) {\n              that._resizable.destroy();\n\n              that._resizable = null;\n            }\n          },\n          onResizeStart: function () {\n            this._disableKeyboard();\n          },\n          onResize: function (e) {\n            this.setResizeHandleDragPosition(e);\n          },\n          setResizeHandleDragPosition: noop,\n          onResizeEnd: function (e) {\n            var that = this;\n            that.resize(e);\n\n            that._destroyResizeHandle();\n\n            that._enableKeyboard();\n          },\n          _enableKeyboard: function () {\n            var options = this.options;\n            $(options.rootElement).off(KEY_DOWN + options.eventNamespace);\n          },\n          _disableKeyboard: function () {\n            var options = this.options;\n            $(options.rootElement).on(KEY_DOWN + options.eventNamespace, function (e) {\n              e.preventDefault();\n            });\n          },\n          _forceResizing: function (e) {\n            var resizable = this._resizable;\n\n            if (resizable && resizable.userEvents) {\n              resizable.userEvents._end(e);\n            }\n          }\n        });\n        var ResizingFactory = Class.extend({\n          create: function (editor, options) {\n            var that = this;\n            var resizingName = options.name;\n            var NS = options.eventNamespace;\n            $(editor.body).on(MOUSE_ENTER + NS, TABLE, function (e) {\n              var table = e.currentTarget;\n              var resizing = editor[resizingName];\n              e.stopPropagation();\n\n              if (resizing) {\n                if (resizing.element !== table && !resizing.resizingInProgress()) {\n                  that._destroyResizing(editor, options);\n\n                  that._initResizing(editor, table, options);\n                }\n              } else {\n                that._initResizing(editor, table, options);\n              }\n            }).on(MOUSE_LEAVE + NS, TABLE, function (e) {\n              var parentTable;\n              var resizing = editor[resizingName];\n              e.stopPropagation();\n\n              if (resizing && !resizing.resizingInProgress() && !resizing.resizeHandle) {\n                parentTable = $(resizing.element).parents(TABLE)[0];\n\n                if (parentTable) {\n                  that._destroyResizing(editor, options);\n\n                  that._initResizing(editor, parentTable, options);\n                }\n              }\n            }).on(MOUSE_LEAVE + NS, function () {\n              var resizing = editor[resizingName];\n\n              if (resizing && !resizing.resizingInProgress()) {\n                that._destroyResizing(editor, options);\n              }\n            }).on(MOUSE_UP + NS, function (e) {\n              var resizing = editor[resizingName];\n              var parentTable;\n\n              if (resizing && resizing.resizingInProgress()) {\n                parentTable = $(e.target).parents(TABLE)[0];\n\n                if (parentTable) {\n                  resizing._forceResizing(e);\n\n                  that._destroyResizing(editor, options);\n\n                  that._initResizing(editor, parentTable, options);\n                }\n              }\n            });\n          },\n          dispose: function (editor, options) {\n            $(editor.body).off(options.eventNamespace);\n          },\n          _initResizing: function (editor, tableElement, options) {\n            var resizingName = options.name;\n            var resizingType = options.type;\n            editor[resizingName] = new resizingType(tableElement, {\n              rtl: kendo.support.isRtl(editor.element),\n              rootElement: editor.body\n            });\n          },\n          _destroyResizing: function (editor, options) {\n            var resizingName = options.name;\n\n            if (editor[resizingName]) {\n              editor[resizingName].destroy();\n              editor[resizingName] = null;\n            }\n          }\n        });\n        ResizingFactory.current = new ResizingFactory();\n\n        TableElementResizing.create = function (editor, options) {\n          ResizingFactory.current.create(editor, options);\n        };\n\n        TableElementResizing.dispose = function (editor, options) {\n          ResizingFactory.current.dispose(editor, options);\n        };\n\n        extend(Editor, {\n          TableElementResizing: TableElementResizing\n        });\n      })(window.kendo);\n    }, __webpack_require__(3));\n    /***/\n\n  },\n\n  /***/\n  1020:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../../kendo.resizable\");\n    /***/\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}