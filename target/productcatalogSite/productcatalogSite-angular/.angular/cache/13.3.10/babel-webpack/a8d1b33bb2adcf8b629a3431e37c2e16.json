{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(974);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  6:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../kendo.combobox\");\n    /***/\n  },\n\n  /***/\n  974:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n    /*jshint scripturl: true */\n\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(975), __webpack_require__(6), __webpack_require__(976), __webpack_require__(977), __webpack_require__(978)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      (function ($, undefined) {\n        // Imports ================================================================\n        var kendo = window.kendo,\n            Class = kendo.Class,\n            Widget = kendo.ui.Widget,\n            os = kendo.support.mobileOS,\n            browser = kendo.support.browser,\n            extend = $.extend,\n            deepExtend = kendo.deepExtend,\n            keys = kendo.keys;\n        var SELECT = \"select\";\n        var SELECT_OVERLAY_SELECTOR = \"select.k-select-overlay\";\n        var PLACEHOLDER_CLASS = \"k-placeholder\";\n        var PLACEHOLDER_TAG_ID = \"placeholder\";\n        var REFRESH_INTERVAL = 200;\n        var DEFAULT_LANGUAGE = \"en\"; // options can be: template (as string), cssClass, title, defaultValue\n\n        var ToolTemplate = Class.extend({\n          init: function (options) {\n            this.options = options;\n          },\n          getHtml: function () {\n            var options = this.options;\n            return kendo.template(options.template, {\n              useWithBlock: false\n            })(options);\n          }\n        });\n        var EditorUtils = {\n          editorWrapperTemplate: '<table cellspacing=\"0\" cellpadding=\"0\" class=\"k-widget k-editor\" role=\"presentation\">' + '<tbody>' + '<tr role=\"presentation\"><td class=\"k-editor-toolbar-wrap\" role=\"presentation\"><ul class=\"k-toolbar k-editor-toolbar\" role=\"toolbar\"></ul></td></tr>' + '<tr><td class=\"k-editable-area k-editor-content\"></td></tr>' + '</tbody>' + '</table>',\n          buttonTemplate: '# var iconCssClass = \"k-icon k-i-\" + kendo.toHyphens(data.cssClass.replace(\"k-\", \"\"));#' + '# var dataPopup = data.popup ? \"data-popup\" : \"\";#' + '<button type=\"button\" tabindex=\"0\" role=\"button\" class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-tool\" #= dataPopup # title=\"#= data.title #\" aria-label=\"#= data.title #\">' + '<span class=\"#= iconCssClass #\"></span>' + '<span class=\"k-tool-text k-button-text\">#= data.title #</span>' + '</button>',\n          iconTextButtonTemplate: '# var iconCssClass = \"k-icon k-i-\" + kendo.toHyphens(data.cssClass.replace(\"k-\", \"\"));#' + '# var dataPopup = data.popup ? \"data-popup\" : \"\";#' + '<button type=\"button\" tabindex=\"0\" role=\"button\" class=\"k-i-import k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\" #= dataPopup # title=\"#= data.title #\" aria-label=\"#= data.title #\">' + '<span class=\"k-button-icon #= iconCssClass #\"></span>' + '<span class=\"k-button-text\">#= data.title #</span>' + '</button>',\n          tableWizardButtonTemplate: '# var iconCssClass = \"k-icon k-i-\" + kendo.toHyphens(data.cssClass.replace(\"k-\", \"\"));#' + '# var dataPopup = data.popup ? \"data-popup\" : \"\";#' + '<button type=\"button\" tabindex=\"0\" role=\"button\" class=\"k-tool k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\" #= dataPopup # title=\"#= data.title #\" aria-label=\"#= data.title #\">' + '<span class=\"#= iconCssClass #\"></span>' + '<span class=\"k-tool-text\">#= data.title #</span>' + '</button>',\n          colorPickerTemplate: '<input class=\"k-colorpicker k-icon k-i-#= data.cssClass.replace(\"k-\", \"\") #\" />',\n          comboBoxTemplate: '<select title=\"#= data.title #\" aria-label=\"#= data.title #\" class=\"#= data.cssClass #\"></select>',\n          dropDownListTemplate: '<span class=\"k-editor-dropdown\"><select title=\"#= data.title #\" aria-label=\"#= data.title #\" class=\"#= data.cssClass #\"></select></span>',\n          separatorTemplate: '<span class=\"k-separator\"></span>',\n          overflowAnchorTemplate: '<button type=\"button\" tabindex=\"0\" role=\"button\" class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button k-tool k-overflow-anchor\" data-popup' + ' title=\"#= data.title #\" aria-label=\"#= data.title #\" aria-haspopup=\"true\" aria-expanded=\"false\">' + '<span class=\"k-icon k-i-more-vertical k-button-icon\"></span>' + '</button>',\n          formatByName: function (name, format) {\n            for (var i = 0; i < format.length; i++) {\n              if ($.inArray(name, format[i].tags) >= 0) {\n                return format[i];\n              }\n            }\n          },\n          getToolCssClass: function (name) {\n            var toolCssClassNames = {\n              superscript: \"sup-script\",\n              subscript: \"sub-script\",\n              justifyLeft: \"align-left\",\n              justifyCenter: \"align-center\",\n              justifyRight: \"align-right\",\n              justifyFull: \"align-justify\",\n              insertUnorderedList: \"list-unordered\",\n              insertOrderedList: \"list-ordered\",\n              insertUpperRomanList: \"list-roman-upper\",\n              insertLowerRomanList: \"list-roman-lower\",\n              \"import\": \"import\",\n              indent: \"indent-increase\",\n              outdent: \"indent-decrease\",\n              createLink: \"link-horizontal\",\n              unlink: \"unlink-horizontal\",\n              insertImage: \"image\",\n              insertFile: \"file-add\",\n              viewHtml: \"html\",\n              foreColor: \"foreground-color\",\n              backColor: \"paint\",\n              createTable: \"table-insert\",\n              addColumnLeft: \"table-column-insert-left\",\n              addColumnRight: \"table-column-insert-right\",\n              addRowAbove: \"table-row-insert-above\",\n              addRowBelow: \"table-row-insert-below\",\n              deleteRow: \"table-row-delete\",\n              deleteColumn: \"table-column-delete\",\n              mergeCellsHorizontally: \"cells-merge-horizontally\",\n              mergeCellsVertically: \"cells-merge-vertically\",\n              splitCellHorizontally: \"cell-split-horizontally\",\n              splitCellVertically: \"cell-split-vertically\",\n              tableWizard: \"table-properties\",\n              tableWizardInsert: \"table-wizard\",\n              tableAlignLeft: \"table-position-left\",\n              tableAlignCenter: \"table-position-center\",\n              tableAlignRight: \"table-position-right\",\n              cleanFormatting: \"clear-css\",\n              copyFormat: \"copy-format\",\n              applyFormat: \"apply-format\"\n            };\n            var cssClass = toolCssClassNames[name];\n\n            if (cssClass) {\n              return cssClass;\n            }\n\n            return name;\n          },\n          registerTool: function (toolName, tool) {\n            var toolOptions = tool.options;\n\n            if (toolOptions && toolOptions.template) {\n              toolOptions.template.options.cssClass = \"k-\" + EditorUtils.getToolCssClass(toolName);\n            }\n\n            if (!tool.name) {\n              tool.options.name = toolName;\n              tool.name = toolName.toLowerCase();\n            }\n\n            Editor.defaultTools[toolName] = tool;\n          },\n          registerFormat: function (formatName, format) {\n            Editor.fn.options.formats[formatName] = format;\n          },\n          cacheComments: function (content, comments) {\n            for (var index in comments) {\n              content = content.replace(comments[index], \"{\" + index + \"}\");\n            }\n\n            return content;\n          },\n          retrieveComments: function (content, comments) {\n            for (var index in comments) {\n              content = content.replace(\"{\" + index + \"}\", comments[index]);\n            }\n\n            return content;\n          }\n        };\n        var messages = {\n          bold: \"Bold\",\n          italic: \"Italic\",\n          underline: \"Underline\",\n          strikethrough: \"Strikethrough\",\n          superscript: \"Superscript\",\n          subscript: \"Subscript\",\n          justifyCenter: \"Center text\",\n          justifyLeft: \"Align text left\",\n          justifyRight: \"Align text right\",\n          justifyFull: \"Justify\",\n          insertUnorderedList: \"Insert unordered list\",\n          insertOrderedList: \"Insert ordered list\",\n          indent: \"Indent\",\n          outdent: \"Outdent\",\n          createLink: \"Insert hyperlink\",\n          unlink: \"Remove hyperlink\",\n          insertImage: \"Insert image\",\n          insertFile: \"Insert file\",\n          insertHtml: \"Insert HTML\",\n          viewHtml: \"View HTML\",\n          fontName: \"Select font family\",\n          fontNameInherit: \"(inherited font)\",\n          fontSize: \"Select font size\",\n          fontSizeInherit: \"(inherited size)\",\n          formatBlock: \"Format\",\n          formatting: \"Format\",\n          foreColor: \"Color\",\n          backColor: \"Background color\",\n          style: \"Styles\",\n          emptyFolder: \"Empty Folder\",\n          editAreaTitle: \"Editable area. Press F10 for toolbar.\",\n          uploadFile: \"Upload\",\n          overflowAnchor: \"More tools\",\n          orderBy: \"Arrange by:\",\n          orderBySize: \"Size\",\n          orderByName: \"Name\",\n          invalidFileType: \"The selected file \\\"{0}\\\" is not valid. Supported file types are {1}.\",\n          deleteFile: 'Are you sure you want to delete \"{0}\"?',\n          overwriteFile: 'A file with name \"{0}\" already exists in the current directory. Do you want to overwrite it?',\n          directoryNotFound: \"A directory with this name was not found.\",\n          imageWebAddress: \"Web address\",\n          imageAltText: \"Alternate text\",\n          imageWidth: \"Width (px)\",\n          imageHeight: \"Height (px)\",\n          fileWebAddress: \"Web address\",\n          fileTitle: \"Title\",\n          fileText: \"Text\",\n          linkWebAddress: \"Web address\",\n          linkText: \"Text\",\n          linkToolTip: \"ToolTip\",\n          linkOpenInNewWindow: \"Open link in new window\",\n          dialogUpdate: \"Update\",\n          dialogInsert: \"Insert\",\n          dialogOk: \"Ok\",\n          dialogCancel: \"Cancel\",\n          cleanFormatting: \"Clean formatting\",\n          createTable: \"Create a table\",\n          createTableHint: \"Create a {0} x {1} table\",\n          addColumnLeft: \"Add column on the left\",\n          addColumnRight: \"Add column on the right\",\n          addRowAbove: \"Add row above\",\n          addRowBelow: \"Add row below\",\n          deleteRow: \"Delete row\",\n          deleteColumn: \"Delete column\",\n          mergeCellsHorizontally: \"Merge cells horizontally\",\n          mergeCellsVertically: \"Merge cells vertically\",\n          splitCellHorizontally: \"Split cells horizontally\",\n          splitCellVertically: \"Split cells vertically\",\n          tableAlignLeft: \"Table Align Left\",\n          tableAlignCenter: \"Table Align Center\",\n          tableAlignRight: \"Table Align Right\",\n          tableWizard: \"Table Wizard\",\n          tableTab: \"Table\",\n          cellTab: \"Cell\",\n          accessibilityTab: \"Accessibility\",\n          caption: \"Caption\",\n          summary: \"Summary\",\n          width: \"Width\",\n          height: \"Height\",\n          units: \"Units\",\n          cellSpacing: \"Cell Spacing\",\n          cellPadding: \"Cell Padding\",\n          cellMargin: \"Cell Margin\",\n          alignment: \"Alignment\",\n          background: \"Background\",\n          cssClass: \"CSS Class\",\n          id: \"ID\",\n          border: \"Border\",\n          borderStyle: \"Border Style\",\n          collapseBorders: \"Collapse borders\",\n          wrapText: \"Wrap text\",\n          associateCellsWithHeaders: \"Associate headers\",\n          alignLeft: \"Align Left\",\n          alignCenter: \"Align Center\",\n          alignRight: \"Align Right\",\n          alignLeftTop: \"Align Left Top\",\n          alignCenterTop: \"Align Center Top\",\n          alignRightTop: \"Align Right Top\",\n          alignLeftMiddle: \"Align Left Middle\",\n          alignCenterMiddle: \"Align Center Middle\",\n          alignRightMiddle: \"Align Right Middle\",\n          alignLeftBottom: \"Align Left Bottom\",\n          alignCenterBottom: \"Align Center Bottom\",\n          alignRightBottom: \"Align Right Bottom\",\n          alignRemove: \"Remove Alignment\",\n          columns: \"Columns\",\n          rows: \"Rows\",\n          selectAllCells: \"Select All Cells\",\n          exportAs: \"Export As\",\n          \"import\": \"Import\",\n          print: \"Print\",\n          headerRows: \"Header Rows\",\n          headerColumns: \"Header Cols\",\n          tableSummaryPlaceholder: \"Summary attribute is not HTML5 compatible.\",\n          associateNone: \"None\",\n          associateScope: \"Associate using 'scope' attribute\",\n          associateIds: \"Associate using Ids\",\n          copyFormat: \"Copy format\",\n          applyFormat: \"Apply format\",\n          borderNone: \"None\",\n          undo: \"Undo\",\n          redo: \"Redo\"\n        };\n        var supportedBrowser = !os || os.ios && os.flatVersion >= 500 || !os.ios && typeof document.documentElement.contentEditable != 'undefined';\n        var toolGroups = {\n          basic: [\"bold\", \"italic\", \"underline\"],\n          alignment: [\"justifyLeft\", \"justifyCenter\", \"justifyRight\"],\n          lists: [\"insertUnorderedList\", \"insertOrderedList\"],\n          indenting: [\"indent\", \"outdent\"],\n          formatPainter: [\"copyFormat\", \"applyFormat\"],\n          links: [\"createLink\", \"unlink\"],\n          tables: [\"tableWizard\", \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\", \"mergeCellsHorizontally\", \"mergeCellsVertically\", \"splitCellHorizontally\", \"splitCellVertically\", \"tableAlignLeft\", \"tableAlignCenter\", \"tableAlignRight\"]\n        };\n        var Editor = Widget.extend({\n          init: function (element, options) {\n            var that = this,\n                value,\n                editorNS = kendo.ui.editor,\n                toolbarContainer,\n                toolbarOptions,\n                type,\n                comments;\n            var domElement;\n            var dom = editorNS.Dom;\n            /* suppress initialization in mobile webkit devices (w/o proper contenteditable support) */\n\n            if (!supportedBrowser) {\n              return;\n            }\n\n            Widget.fn.init.call(that, element, options);\n            that.options = deepExtend({}, that.options, options);\n            that.options.tools = that.options.tools.slice();\n            element = that.element;\n            domElement = element[0];\n            type = dom.name(domElement);\n\n            this._registerHandler(element.closest(\"form\"), \"submit\", that.update.bind(that, undefined));\n\n            toolbarOptions = extend({}, that.options);\n            toolbarOptions.editor = that;\n\n            if (type == \"textarea\") {\n              that._wrapTextarea();\n\n              toolbarContainer = that.wrapper.find(\".k-editor-toolbar\");\n\n              if (domElement.id) {\n                toolbarContainer.attr(\"aria-controls\", domElement.id);\n              }\n            } else {\n              that.element.attr(\"contenteditable\", true).addClass(\"k-widget k-editor k-editor-inline\");\n              toolbarOptions.popup = true;\n              toolbarContainer = $('<ul class=\"k-toolbar k-editor-toolbar\" role=\"toolbar\" />').insertBefore(element);\n            }\n\n            that.toolbar = new editorNS.Toolbar(toolbarContainer[0], toolbarOptions);\n            that.toolbar.bindTo(that);\n\n            if (type == \"textarea\") {\n              setTimeout(function () {\n                var heightStyle = that.wrapper[0].style.height;\n                var expectedHeight = parseInt(heightStyle, 10);\n                var actualHeight = that.wrapper.height();\n\n                if (heightStyle.indexOf(\"px\") > 0 && !isNaN(expectedHeight) && actualHeight > expectedHeight) {\n                  that.wrapper.height(expectedHeight - (actualHeight - expectedHeight));\n                }\n              });\n            }\n\n            that._resizable();\n\n            that._initializeContentElement(that);\n\n            that.keyboard = new editorNS.Keyboard([new editorNS.BackspaceHandler(that), new editorNS.TypingHandler(that), new editorNS.SystemHandler(that), new editorNS.SelectAllHandler(that)]);\n            that.clipboard = new editorNS.Clipboard(this);\n            that.undoRedoStack = new kendo.util.UndoRedoStack();\n\n            if (options && options.value) {\n              value = options.value;\n            } else if (that.textarea) {\n              // indented HTML introduces problematic ranges in IE\n              value = domElement.value;\n\n              if (!value.replace(/\\s/g, '').length) {\n                value = value.replace(/\\s/g, '');\n              } // revert encoding of value when content is fetched from cache\n\n\n              if (that.options.encoded && domElement.defaultValue && domElement.defaultValue.trim().length) {\n                value = domElement.defaultValue;\n              }\n\n              var deserializedRoot = editorNS.Serializer.htmlToDom(value, $(\"<div></div>\")[0], that.options.deserialization);\n              comments = dom.getAllComments(deserializedRoot);\n              value = EditorUtils.cacheComments(value, comments);\n              value = value.replace(/[\\r\\n\\v\\f\\t ]+/ig, \" \");\n              value = EditorUtils.retrieveComments(value, comments);\n            } else {\n              value = domElement.innerHTML;\n            }\n\n            that.value(value || '\\ufeff'); // using $.proxy here will break #5337\n\n            this._registerHandler(document, {\n              \"mousedown\": function () {\n                that._endTyping();\n              },\n              \"mouseup\": function (e) {\n                that._mouseup(e);\n              }\n            });\n\n            that._initializeImmutables();\n\n            that.toolbar.resize();\n            kendo.notify(that);\n          },\n          setOptions: function (options) {\n            var editor = this;\n            Widget.fn.setOptions.call(editor, options);\n\n            if (options.tools) {\n              editor.toolbar.bindTo(editor);\n            }\n\n            this._initializePlaceholder();\n          },\n          _togglePlaceholder: function (show) {\n            var that = this,\n                body = that.body,\n                $body = $(body),\n                placeholder = that.options.placeholder;\n\n            if (!that.textarea || !placeholder) {\n              return;\n            }\n\n            $body.attr('aria-label', function () {\n              return show ? placeholder : \"\";\n            });\n            $body.toggleClass(PLACEHOLDER_CLASS, show);\n          },\n          _endTyping: function () {\n            var keyboard = this.keyboard;\n\n            try {\n              if (keyboard.isTypingInProgress()) {\n                keyboard.endTyping(true);\n                this.saveSelection();\n              }\n            } catch (e) {}\n          },\n          _selectionChange: function () {\n            this._selectionStarted = false;\n            this.saveSelection();\n            this.trigger(\"select\", {});\n          },\n          _resizable: function () {\n            var resizable = this.options.resizable;\n            var isResizable = $.isPlainObject(resizable) ? resizable.content === undefined || resizable.content === true : resizable;\n\n            if (isResizable && this.textarea) {\n              var draggableElement = $(\"<div class='k-resize-handle'><span class='k-icon k-i-arrow-45-down-right'></span></div>\").insertAfter(this.textarea);\n              this.wrapper.addClass('k-resizable');\n              this.wrapper.kendoResizable(extend({}, this.options.resizable, {\n                draggableElement: draggableElement,\n                start: function (e) {\n                  var editor = this.editor = $(e.currentTarget).closest(\".k-editor\");\n                  this.initialSize = editor.height();\n                  editor.find(\"td\").last().append(\"<div class='k-overlay' />\");\n                },\n                resize: function (e) {\n                  var delta = e.y.initialDelta;\n                  var newSize = this.initialSize + delta;\n                  var min = this.options.min || 0;\n                  var max = this.options.max || Infinity;\n                  newSize = Math.min(max, Math.max(min, newSize));\n                  this.editor.height(newSize);\n                },\n                resizeend: function () {\n                  this.editor.find(\".k-overlay\").remove();\n                  this.editor = null;\n                }\n              }));\n\n              if (kendo.support.mobileOS.ios) {\n                var resizableWidget = this.wrapper.getKendoResizable();\n                resizableWidget.draggable.options.ignore = SELECT_OVERLAY_SELECTOR;\n              }\n            }\n          },\n          _initializeElementResizing: function () {\n            var editor = this;\n            kendo.ui.editor.ElementResizingFactory.current.create(editor);\n            editor._showElementResizeHandlesProxy = editor._showElementResizeHandles.bind(editor);\n            editor.bind(SELECT, editor._showElementResizeHandlesProxy);\n          },\n          _destroyElementResizing: function () {\n            var editor = this;\n            var elementResizing = editor.elementResizing;\n\n            if (elementResizing) {\n              elementResizing.destroy();\n              editor.elementResizing = null;\n            }\n\n            if (editor._showElementResizeHandlesProxy) {\n              editor.unbind(SELECT, editor._showElementResizeHandlesProxy);\n            }\n          },\n          _showElementResizeHandles: function () {\n            var editor = this;\n            var elementResizing = editor.elementResizing;\n\n            if (elementResizing && elementResizing.element && elementResizing.element.parentNode) {\n              elementResizing.showResizeHandles();\n            } else if (elementResizing && (!elementResizing.element || !elementResizing.element.parentNode)) {\n              editor._destroyElementResizing();\n            }\n          },\n          _initializeColumnResizing: function () {\n            kendo.ui.editor.ColumnResizing.create(this);\n          },\n          _destroyColumnResizing: function () {\n            var editor = this;\n\n            if (editor.columnResizing) {\n              editor.columnResizing.destroy();\n              editor.columnResizing = null;\n            }\n          },\n          _initializeRowResizing: function () {\n            kendo.ui.editor.RowResizing.create(this);\n          },\n          _destroyRowResizing: function () {\n            var editor = this;\n\n            if (editor.rowResizing) {\n              editor.rowResizing.destroy();\n              editor.rowResizing = null;\n            }\n          },\n          _wrapTextarea: function () {\n            var that = this,\n                textarea = that.element,\n                w = textarea[0].style.width,\n                h = textarea[0].style.height,\n                template = EditorUtils.editorWrapperTemplate,\n                editorWrap = $(template).insertBefore(textarea),\n                editArea = editorWrap.find(\".k-editable-area\");\n            editorWrap.css({\n              \"width\": w,\n              \"height\": h\n            });\n            textarea.attr(\"autocomplete\", \"off\").appendTo(editArea).addClass(\"k-content k-raw-content\").css(\"display\", \"none\");\n            that.textarea = textarea;\n            that.wrapper = editorWrap;\n          },\n          _createContentElement: function (stylesheets) {\n            var editor = this;\n            var iframe, wnd, doc;\n            var textarea = editor.textarea;\n            var specifiedDomain = editor.options.domain;\n            var domain = specifiedDomain || document.domain;\n            var domainScript = \"\";\n            var src = 'javascript:\"\"';\n            var lang = \"\";\n            textarea.hide();\n            iframe = $(\"<iframe />\", {\n              title: editor.options.messages.editAreaTitle,\n              frameBorder: \"0\"\n            })[0];\n            $(iframe).css(\"display\", \"\").addClass(\"k-content k-iframe\").attr(\"tabindex\", textarea[0].tabIndex).insertBefore(textarea); // automatically relax same-origin policy if document.domain != location.hostname,\n            // or forcefully relax if options.domain is specified (for document.domain = document.domain scenario)\n\n            if (specifiedDomain || domain != location.hostname) {\n              // relax same-origin policy\n              domainScript = \"<script>document.domain=\\\"\" + domain + \"\\\"</script>\";\n              src = \"javascript:document.write('\" + domainScript + \"')\";\n              iframe.src = src;\n            }\n\n            if (!iframe.src) {\n              iframe.src = \"\";\n            }\n\n            wnd = iframe.contentWindow || iframe;\n            doc = wnd.document || iframe.contentDocument;\n            $(iframe).one(\"load\", function () {\n              editor.toolbar.decorateFrom(doc.body);\n            });\n            lang = document.getElementsByTagName(\"html\")[0].getAttribute(\"lang\") || DEFAULT_LANGUAGE;\n            doc.open();\n            doc.write(\"<!DOCTYPE html><html lang='\" + lang + \"'><head>\" + \"<meta charset='utf-8' />\" + \"<title>Kendo UI Editor content</title>\" + \"<style>\" + \"html{padding:0;margin:0;height:100%;min-height:100%;cursor:text;}\" + \"body{padding:0;margin:0;}\" + \"body{box-sizing:border-box;font-size:12px;font-family:Verdana,Geneva,sans-serif;margin-top:-1px;padding:5px .4em 0;\" + \"word-wrap: break-word;-webkit-nbsp-mode: space;-webkit-line-break: after-white-space;\" + (kendo.support.isRtl(textarea) ? \"direction:rtl;\" : \"\") + (os.ios ? \"word-break:keep-all;\" : \"\") + (browser.edge || browser.chrome ? \"height:100%;\" : \"\") + \"}\" + \"h1{font-size:2em;margin:.67em 0}h2{font-size:1.5em}h3{font-size:1.16em}h4{font-size:1em}h5{font-size:.83em}h6{font-size:.7em}\" + \"p{margin:0 0 1em;}.k-marker{display:none;}.k-paste-container,.Apple-style-span{position:absolute;left:-10000px;width:1px;height:1px;overflow:hidden}\" + \"ul,ol{padding-left:2.5em}\" + \"span{-ms-high-contrast-adjust:none;}\" + \"a{color:#00a}\" + \"code{font-size:1.23em}\" + \"telerik\\\\3Ascript{display: none;}\" + \".k-table{width:100%;border-spacing:0;margin: 0 0 1em;}\" + \".k-table td{min-width:1px;padding:.2em .3em;}\" + \".k-table,.k-table td{outline:0;border: 1px dotted #ccc;}\" + \".k-table th{outline:0;border: 1px dotted #999;}\" + \".k-table p{margin:0;padding:0;}\" + \".k-column-resize-handle-wrapper {position: absolute; height: 10px; width:10px; cursor: col-resize; z-index: 2;}\" + \".k-column-resize-handle {width: 100%; height: 100%;}\" + \".k-column-resize-handle > .k-column-resize-marker {width:2px; height:100%; margin:0 auto; background-color:#00b0ff; display:none; opacity:0.8;}\" + \".k-row-resize-handle-wrapper {position: absolute; cursor: row-resize; z-index:2; width: 10px; height: 10px;}\" + \".k-row-resize-handle {display: table; width: 100%; height: 100%;}\" + \".k-row-resize-marker-wrapper{display: table-cell; height:100%; width:100%; margin:0; padding:0; vertical-align: middle;}\" + \".k-row-resize-marker{margin: 0; padding:0; width:100%; height:2px; background-color: #00b0ff; opacity:0.8; display:none;}\" + \".k-element-resize-handle-wrapper {position: absolute; background-color: #fff; border: 1px solid #000; z-index: 100; width: 5px; height: 5px;}\" + \".k-element-resize-handle {width: 100%; height: 100%;}\" + \".k-element-resize-handle.k-resize-east{cursor:e-resize;}\" + \".k-element-resize-handle.k-resize-north{cursor:n-resize;}\" + \".k-element-resize-handle.k-resize-northeast{cursor:ne-resize;}\" + \".k-element-resize-handle.k-resize-northwest{cursor:nw-resize;}\" + \".k-element-resize-handle.k-resize-south{cursor:s-resize;}\" + \".k-element-resize-handle.k-resize-southeast{cursor:se-resize;}\" + \".k-element-resize-handle.k-resize-southwest{cursor:sw-resize;}\" + \".k-element-resize-handle.k-resize-west{cursor:w-resize;}\" + \".k-table.k-element-resizing{opacity:0.6;}\" + \".k-placeholder{color:grey}\" + \"k\\\\:script{display:none;}\" + \"</style>\" + domainScript + $.map(stylesheets, function (href) {\n              return \"<link rel='stylesheet' href='\" + href + \"'>\";\n            }).join(\"\") + \"</head><body autocorrect='off' contenteditable='true'></body></html>\");\n            doc.close();\n            return wnd;\n          },\n          _blur: function () {\n            var textarea = this.textarea;\n            var old = textarea ? textarea.val() : this._oldValue;\n            var value = this.options.encoded ? this.encodedValue() : this.value();\n            this.update();\n\n            if (textarea) {\n              textarea.trigger(\"blur\");\n            }\n\n            if (value != old) {\n              this.trigger(\"change\");\n\n              if (textarea) {\n                textarea.trigger(\"change\");\n              }\n            }\n          },\n          _spellCorrect: function (editor) {\n            var beforeCorrection;\n            var falseTrigger = false;\n\n            this._registerHandler(editor.body, {\n              \"contextmenu\": function () {\n                editor.one(\"select\", function () {\n                  beforeCorrection = null;\n                });\n                editor._spellCorrectTimeout = setTimeout(function () {\n                  beforeCorrection = new kendo.ui.editor.RestorePoint(editor.getRange(), editor.body);\n                  falseTrigger = false;\n                }, 10);\n              },\n              \"input\": function () {\n                if (!beforeCorrection) {\n                  return;\n                }\n\n                if (kendo.support.browser.mozilla && !falseTrigger) {\n                  falseTrigger = true;\n                  return;\n                }\n\n                kendo.ui.editor._finishUpdate(editor, beforeCorrection);\n              }\n            });\n          },\n          _registerHandler: function (element, type, handler) {\n            var editor = this;\n            var NS = \".kendoEditor\";\n            var eventNames;\n            var i;\n            element = $(element);\n\n            if (!this._handlers) {\n              this._handlers = [];\n            }\n\n            if (element.length) {\n              if ($.isPlainObject(type)) {\n                for (var t in type) {\n                  if (type.hasOwnProperty(t)) {\n                    this._registerHandler(element, t, type[t]);\n                  }\n                }\n              } else {\n                //map the original event to handle interaction on mobile platforms\n                eventNames = kendo.applyEventMap(type).split(\" \");\n\n                for (i = 0; i < eventNames.length; i++) {\n                  editor._handlers.push({\n                    element: element,\n                    type: eventNames[i] + NS,\n                    handler: handler\n                  });\n\n                  element.on(eventNames[i] + NS, handler);\n                }\n              }\n            }\n          },\n          _deregisterHandlers: function () {\n            var handlers = this._handlers;\n\n            for (var i = 0; i < handlers.length; i++) {\n              var h = handlers[i];\n              h.element.off(h.type, h.handler);\n            }\n\n            this._handlers = [];\n          },\n          _initializeContentElement: function () {\n            var editor = this;\n            var doc;\n            var blurTrigger;\n            var mousedownTrigger;\n\n            if (editor.textarea) {\n              editor.window = editor._createContentElement(editor.options.stylesheets);\n              doc = editor.document = editor.window.contentDocument || editor.window.document; // Ensure that body exists as various Firefox plugins can cause a delay of the body creation\n              // https://github.com/telerik/kendo-ui-core/issues/3515\n\n              if (!doc.body) {\n                var body = doc.createElement(\"body\");\n                body.setAttribute(\"contenteditable\", \"true\");\n                body.setAttribute(\"autocorrect\", \"off\");\n                doc.getElementsByTagName(\"html\")[0].appendChild(body);\n                var interval = setInterval(function () {\n                  if ($(editor.document).find(\"body\").length > 1) {\n                    $(editor.document).find(\"body\").last().remove();\n                    window.clearInterval(interval);\n                  }\n                }, 10);\n              }\n\n              editor.body = doc.body;\n              blurTrigger = editor.window;\n              mousedownTrigger = doc;\n\n              this._registerHandler(doc, \"mouseup\", this._mouseup.bind(this));\n            } else {\n              editor.window = window;\n              doc = editor.document = document;\n              editor.body = editor.element[0];\n              blurTrigger = editor.body;\n              mousedownTrigger = editor.body;\n              editor.toolbar.decorateFrom(editor.body);\n            }\n\n            this._registerHandler(blurTrigger, \"blur\", this._blur.bind(this));\n\n            editor._registerHandler(mousedownTrigger, \"down\", editor._mousedown.bind(editor));\n\n            try {\n              doc.execCommand(\"enableInlineTableEditing\", null, false);\n            } catch (e) {}\n\n            if (kendo.support.touch) {\n              this._registerHandler(doc, {\n                \"keydown\": function () {\n                  // necessary in iOS when touch events are bound to the page\n                  if (kendo._activeElement() != doc.body) {\n                    editor.window.focus();\n                  }\n                }\n              });\n            }\n\n            this._initializePlaceholder();\n\n            this._spellCorrect(editor);\n\n            this._registerHandler(editor.document, {\n              \"mouseover dragenter\": function (e) {\n                var height = $(editor.body).height();\n                var htmlHeight = $(editor.body.parentElement).height();\n\n                if (htmlHeight > height && e.target.nodeName.toLowerCase() === \"html\") {\n                  editor._cachedHeight = \"\" + editor.body.style.height;\n                  editor.body.style.height = \"100%\";\n                }\n              },\n              \"mouseout dragleave drop contextmenu\": function (e) {\n                var restoreHeight = function () {\n                  if (editor._cachedHeight !== undefined && e.target === editor.body) {\n                    editor.body.style.height = editor._cachedHeight;\n                    delete editor._cachedHeight;\n                  }\n                };\n\n                if (e.type === \"contextmenu\") {\n                  setTimeout(function () {\n                    restoreHeight();\n                  }, 10);\n                } else {\n                  restoreHeight();\n                }\n              }\n            });\n\n            this._registerHandler(editor.body, {\n              \"keydown\": function (e) {\n                var range;\n\n                if ((e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) && editor.body.getAttribute(\"contenteditable\") !== \"true\") {\n                  return false;\n                }\n\n                if (e.keyCode === keys.F10) {\n                  // Handling with timeout to avoid the default IE menu\n                  setTimeout(editor.toolbar.focus.bind(editor.toolbar), 100);\n                  editor.toolbar.preventPopupHide = true;\n                  e.preventDefault();\n                  return;\n                } else if (e.keyCode == keys.LEFT || e.keyCode == keys.RIGHT) {\n                  // skip bom nodes when navigating with arrows\n                  range = editor.getRange();\n                  var left = e.keyCode == keys.LEFT;\n                  var container = range[left ? \"startContainer\" : \"endContainer\"];\n                  var offset = range[left ? \"startOffset\" : \"endOffset\"];\n                  var direction = left ? -1 : 1;\n                  var next = offset + direction;\n                  var nextChar = left ? next : offset;\n\n                  if (container.nodeType == 3 && container.nodeValue[nextChar] == \"\\ufeff\") {\n                    range.setStart(container, next);\n                    range.collapse(true);\n                    editor.selectRange(range);\n                  }\n                }\n\n                var tools = editor.toolbar.tools;\n                var toolName = editor.keyboard.toolFromShortcut(tools, e);\n                var toolOptions = toolName ? tools[toolName].options : {};\n\n                if (toolName && !toolOptions.keyPressCommand) {\n                  e.preventDefault();\n\n                  if (!/^(undo|redo)$/.test(toolName)) {\n                    editor.keyboard.endTyping(true);\n                  }\n\n                  editor.trigger(\"keydown\", e);\n                  editor.exec(toolName);\n\n                  editor._runPostContentKeyCommands(e);\n\n                  return false;\n                }\n\n                editor.keyboard.clearTimeout();\n                editor.keyboard.keydown(e);\n              },\n              \"keypress\": function (e) {\n                setTimeout(function () {\n                  editor._runPostContentKeyCommands(e);\n\n                  editor._showElementResizeHandles();\n                }, 0);\n              },\n              \"keyup\": function (e) {\n                var selectionCodes = [keys.BACKSPACE, keys.TAB, keys.PAGEUP, keys.PAGEDOWN, keys.END, keys.HOME, keys.LEFT, keys.UP, keys.RIGHT, keys.DOWN, keys.INSERT, keys.DELETE];\n\n                if ($.inArray(e.keyCode, selectionCodes) > -1 || e.keyCode == 65 && e.ctrlKey && !e.altKey && !e.shiftKey) {\n                  window.clearTimeout(this._refreshInterval);\n                  this._refreshInterval = window.setTimeout(function () {\n                    editor._selectionChange();\n                  }, REFRESH_INTERVAL);\n                }\n\n                editor.keyboard.keyup(e);\n              },\n              \"click\": function (e) {\n                var dom = kendo.ui.editor.Dom,\n                    range;\n\n                if (dom.name(e.target) === \"img\") {\n                  range = editor.createRange();\n                  range.selectNode(e.target);\n                  editor.selectRange(range);\n                }\n              },\n              \"cut copy paste drop dragover\": function (e) {\n                editor.clipboard[\"on\" + e.type](e);\n              },\n              \"focusin\": function () {\n                if (editor.body.hasAttribute(\"contenteditable\")) {\n                  $(this).addClass(\"k-state-active\");\n                  editor.toolbar.show();\n\n                  editor._togglePlaceholder(false);\n                }\n              },\n              \"focusout\": function () {\n                setTimeout(function () {\n                  var active = kendo._activeElement();\n\n                  var body = editor.body;\n                  var toolbar = editor.toolbar;\n\n                  if (toolbar.options.popup) {\n                    var toolbarContainerElement = toolbar.window.element.get(0);\n\n                    if (toolbarContainerElement && !($.contains(toolbarContainerElement, active) || toolbarContainerElement == active)) {\n                      toolbar.preventPopupHide = false;\n                    }\n                  }\n\n                  if (active != body && !$.contains(body, active) && !toolbar.focused() && !toolbar.preventPopupHide) {\n                    $(body).removeClass(\"k-state-active\");\n                    toolbar.hide();\n                  }\n\n                  editor._togglePlaceholder(!editor.value().trim());\n                }, 10);\n              }\n            });\n\n            editor._initializeColumnResizing();\n\n            editor._initializeRowResizing();\n\n            editor._initializeElementResizing();\n          },\n          _initializePlaceholder: function () {\n            var that = this,\n                placeholder = that.options.placeholder,\n                style,\n                $head;\n\n            if (!that.textarea || !placeholder) {\n              return;\n            }\n\n            style = \"<style id='\" + PLACEHOLDER_TAG_ID + \"'>.\" + PLACEHOLDER_CLASS + \":before { content: '\" + placeholder + \"'; }\" + \"</style>\";\n            $head = $(that.document.head);\n            $head.find(\"#\" + PLACEHOLDER_TAG_ID).remove();\n            $head.append(style);\n\n            that._togglePlaceholder(!that.value().trim());\n          },\n          _initializeImmutables: function () {\n            var that = this,\n                editorNS = kendo.ui.editor;\n\n            if (that.options.immutables) {\n              that.immutables = new editorNS.Immutables(that);\n            }\n          },\n          _mousedown: function (e) {\n            var editor = this;\n            editor._selectionStarted = true;\n\n            if ($(editor.body).parents('.k-window').length) {\n              e.stopPropagation();\n            } // handle middle-click and ctrl-click on links\n\n\n            if (browser.gecko) {\n              return;\n            }\n\n            var target = $(e.target).closest(\"a[href]\");\n\n            if ((e.which == 2 || e.which == 1 && e.ctrlKey) && target && target.is(\"a[href]\")) {\n              window.open(target.attr(\"href\"), \"_new\");\n            }\n\n            if (e.target.tagName && e.target.tagName.toLowerCase() === \"html\") {\n              setTimeout(function () {\n                editor.body.focus();\n              }, 0);\n            }\n          },\n          _mouseup: function (e) {\n            var that = this;\n\n            if (kendo.support.mobileOS.ios && e && $(e.target).is(SELECT_OVERLAY_SELECTOR)) {\n              return;\n            }\n\n            if (that._selectionStarted) {\n              setTimeout(function () {\n                that._selectionChange();\n              }, 1);\n            }\n          },\n          _runPostContentKeyCommands: function (e) {\n            var range = this.getRange();\n            var tools = this.keyboard.toolsFromShortcut(this.toolbar.tools, e);\n\n            for (var i = 0; i < tools.length; i++) {\n              var tool = tools[i];\n              var o = tool.options;\n\n              if (!o.keyPressCommand) {\n                continue;\n              }\n\n              var cmd = new o.command({\n                range: range\n              });\n\n              if (cmd.changesContent()) {\n                this.keyboard.endTyping(true);\n                this.exec(tool.name);\n              }\n            }\n          },\n          refresh: function () {\n            var that = this;\n\n            if (that.textarea) {\n              that._destroyResizings(); // preserve updated value before re-initializing\n              // don't use update() to prevent the editor from encoding the content too early\n\n\n              var value = that.value();\n              that.textarea.val(value);\n              that.wrapper.find(\"iframe\").remove();\n\n              that._initializeContentElement(that);\n\n              that.value(value);\n            }\n          },\n          events: [\"select\", \"change\", \"execute\", \"error\", \"paste\", \"keydown\", \"keyup\"],\n          options: {\n            name: \"Editor\",\n            messages: messages,\n            placeholder: \"\",\n            formats: {},\n            encoded: true,\n            domain: null,\n            resizable: false,\n            deserialization: {\n              custom: null\n            },\n            serialization: {\n              entities: true,\n              semantic: true,\n              scripts: false,\n              optimizeTags: false,\n              keepEOL: false\n            },\n            pasteCleanup: {\n              all: false,\n              css: false,\n              custom: null,\n              keepNewLines: false,\n              msAllFormatting: false,\n              msConvertLists: true,\n              msTags: true,\n              none: false,\n              span: false\n            },\n            stylesheets: [],\n            dialogOptions: {\n              modal: true,\n              resizable: false,\n              draggable: true,\n              animation: false\n            },\n            imageBrowser: null,\n            fileBrowser: null,\n            fontName: [{\n              text: \"Arial\",\n              value: \"Arial, Helvetica, sans-serif\"\n            }, {\n              text: \"Courier New\",\n              value: \"\\\"Courier New\\\", Courier, monospace\"\n            }, {\n              text: \"Georgia\",\n              value: \"Georgia, serif\"\n            }, {\n              text: \"Impact\",\n              value: \"Impact, Charcoal, sans-serif\"\n            }, {\n              text: \"Lucida Console\",\n              value: \"\\\"Lucida Console\\\", Monaco, monospace\"\n            }, {\n              text: \"Tahoma\",\n              value: \"Tahoma, Geneva, sans-serif\"\n            }, {\n              text: \"Times New Roman\",\n              value: \"\\\"Times New Roman\\\", Times, serif\"\n            }, {\n              text: \"Trebuchet MS\",\n              value: \"\\\"Trebuchet MS\\\", Helvetica, sans-serif\"\n            }, {\n              text: \"Verdana\",\n              value: \"Verdana, Geneva, sans-serif\"\n            }],\n            fontSize: [{\n              text: \"1 (8pt)\",\n              value: \"xx-small\"\n            }, {\n              text: \"2 (10pt)\",\n              value: \"x-small\"\n            }, {\n              text: \"3 (12pt)\",\n              value: \"small\"\n            }, {\n              text: \"4 (14pt)\",\n              value: \"medium\"\n            }, {\n              text: \"5 (18pt)\",\n              value: \"large\"\n            }, {\n              text: \"6 (24pt)\",\n              value: \"x-large\"\n            }, {\n              text: \"7 (36pt)\",\n              value: \"xx-large\"\n            }],\n            formatBlock: [{\n              text: \"Paragraph\",\n              value: \"p\"\n            }, {\n              text: \"Quotation\",\n              value: \"blockquote\"\n            }, {\n              text: \"Heading 1\",\n              value: \"h1\"\n            }, {\n              text: \"Heading 2\",\n              value: \"h2\"\n            }, {\n              text: \"Heading 3\",\n              value: \"h3\"\n            }, {\n              text: \"Heading 4\",\n              value: \"h4\"\n            }, {\n              text: \"Heading 5\",\n              value: \"h5\"\n            }, {\n              text: \"Heading 6\",\n              value: \"h6\"\n            }],\n            tools: [].concat.call([\"formatting\"], toolGroups.basic, [\"undo\", \"redo\"], toolGroups.alignment, toolGroups.formatPainter, toolGroups.lists, toolGroups.indenting, toolGroups.links, [\"insertImage\"], toolGroups.tables)\n          },\n          destroy: function () {\n            var editor = this;\n            Widget.fn.destroy.call(this);\n\n            this._endTyping(true);\n\n            this._deregisterHandlers();\n\n            clearTimeout(this._spellCorrectTimeout);\n\n            this._focusOutside();\n\n            this.toolbar.destroy();\n\n            editor._destroyUploadWidget();\n\n            editor._destroyResizings();\n\n            kendo.destroy(this.wrapper);\n          },\n          _destroyResizings: function () {\n            var editor = this;\n\n            editor._destroyElementResizing();\n\n            kendo.ui.editor.ElementResizingFactory.current.dispose(editor);\n\n            editor._destroyRowResizing();\n\n            kendo.ui.editor.RowResizing.dispose(editor);\n\n            editor._destroyColumnResizing();\n\n            kendo.ui.editor.ColumnResizing.dispose(editor);\n          },\n          _focusOutside: function () {\n            // move focus outside the Editor, see https://github.com/telerik/kendo/issues/3673\n            if (kendo.support.browser.msie && this.textarea) {\n              var tempInput = $(\"<input style='position:fixed;left:1px;top:1px;width:1px;height:1px;font-size:0;border:0;opacity:0' />\").appendTo(document.body).trigger(\"focus\");\n              tempInput.trigger(\"blur\").remove();\n            }\n          },\n          _destroyUploadWidget: function () {\n            var editor = this;\n\n            if (editor._uploadWidget) {\n              editor._uploadWidget.destroy();\n\n              editor._uploadWidget = null;\n            }\n          },\n          state: function (toolName) {\n            var tool = Editor.defaultTools[toolName];\n            var finder = tool && (tool.options.finder || tool.finder);\n            var RangeUtils = kendo.ui.editor.RangeUtils;\n            var range, textNodes;\n\n            if (finder) {\n              range = this.getRange();\n              textNodes = RangeUtils.textNodes(range);\n\n              if (!textNodes.length && range.collapsed) {\n                textNodes = [range.startContainer];\n              }\n\n              return finder.getFormat ? finder.getFormat(textNodes) : finder.isFormatted(textNodes);\n            }\n\n            return false;\n          },\n          value: function (html) {\n            var body = this.body,\n                editorNS = kendo.ui.editor,\n                options = this.options,\n                currentHtml = editorNS.Serializer.domToXhtml(body, options.serialization);\n\n            if (html === undefined) {\n              return currentHtml;\n            }\n\n            if (html == currentHtml) {\n              return;\n            }\n\n            editorNS.Serializer.htmlToDom(html, body, options.deserialization);\n            this.selectionRestorePoint = null;\n            this.update();\n            this.toolbar.refreshTools();\n          },\n          saveSelection: function (range) {\n            range = range || this.getRange();\n            var container = range.commonAncestorContainer,\n                body = this.body;\n\n            if (container == body || $.contains(body, container)) {\n              this.selectionRestorePoint = new kendo.ui.editor.RestorePoint(range, body);\n            }\n          },\n          _focusBody: function () {\n            var body = this.body;\n            var iframe = this.wrapper && this.wrapper.find(\"iframe\")[0];\n            var documentElement = this.document.documentElement;\n\n            var activeElement = kendo._activeElement();\n\n            var scrollTop;\n\n            if (!iframe && body.scrollHeight > body.clientHeight) {\n              scrollTop = body.scrollTop;\n              body.focus();\n              body.scrollTop = scrollTop;\n            } else if (activeElement != body && activeElement != iframe) {\n              scrollTop = documentElement.scrollTop;\n              body.focus();\n              documentElement.scrollTop = scrollTop;\n            }\n          },\n          restoreSelection: function () {\n            this._focusBody();\n\n            if (this.selectionRestorePoint) {\n              this.selectRange(this.selectionRestorePoint.toRange());\n            }\n          },\n          focus: function () {\n            this.restoreSelection();\n          },\n          update: function (value) {\n            value = value || this.options.encoded ? this.encodedValue() : this.value();\n\n            if (this.textarea) {\n              this.textarea.val(value);\n\n              this._togglePlaceholder(!value.trim());\n            } else {\n              this._oldValue = value;\n            }\n          },\n          encodedValue: function () {\n            return kendo.ui.editor.Dom.encode(this.value());\n          },\n          createRange: function (document) {\n            return kendo.ui.editor.RangeUtils.createRange(document || this.document);\n          },\n          getSelection: function () {\n            return kendo.ui.editor.SelectionUtils.selectionFromDocument(this.document);\n          },\n          selectRange: function (range) {\n            this._focusBody();\n\n            var selection = this.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(range);\n            this.saveSelection(range);\n          },\n          getRange: function () {\n            var selection = this.getSelection(),\n                range = selection && selection.rangeCount > 0 ? selection.getRangeAt(0) : this.createRange(),\n                doc = this.document;\n\n            if (range.startContainer == doc && range.endContainer == doc && !range.startOffset && !range.endOffset) {\n              range.setStart(this.body, 0);\n              range.collapse(true);\n            }\n\n            return range;\n          },\n          _containsRange: function (range) {\n            var dom = kendo.ui.editor.Dom;\n            var body = this.body;\n            return range && dom.isAncestorOrSelf(body, range.startContainer) && dom.isAncestorOrSelf(body, range.endContainer);\n          },\n          _deleteSavedRange: function () {\n            if (\"_range\" in this) {\n              delete this._range;\n            }\n          },\n          selectedHtml: function () {\n            return kendo.ui.editor.Serializer.domToXhtml(this.getRange().cloneContents());\n          },\n          paste: function (html, options) {\n            this.focus();\n            var command = new kendo.ui.editor.InsertHtmlCommand($.extend({\n              range: this.getRange(),\n              html: html\n            }, options));\n            command.editor = this;\n            command.exec();\n          },\n          exec: function (name, params) {\n            var that = this;\n            var command = null;\n            var range, tool, prevented;\n\n            if (!name) {\n              throw new Error(\"kendoEditor.exec(): `name` parameter cannot be empty\");\n            }\n\n            if (that.body.getAttribute(\"contenteditable\") !== \"true\" && name !== \"print\" && name !== \"pdf\" && name !== \"exportAs\") {\n              return false;\n            }\n\n            name = name.toLowerCase();\n\n            if (!that.keyboard.isTypingInProgress()) {\n              that._focusBody();\n\n              that.selectRange(that._range || that.getRange());\n            }\n\n            tool = that.toolbar.toolById(name);\n\n            if (!tool) {\n              // execute non-toolbar tool\n              for (var id in Editor.defaultTools) {\n                if (id.toLowerCase() == name) {\n                  tool = Editor.defaultTools[id];\n                  break;\n                }\n              }\n            }\n\n            if (tool) {\n              range = that.getRange();\n\n              if (tool.command) {\n                command = tool.command(extend({\n                  range: range,\n                  body: that.body,\n                  immutables: !!that.immutables\n                }, params));\n              }\n\n              prevented = that.trigger(\"execute\", {\n                name: name,\n                command: command\n              });\n\n              if (prevented) {\n                return;\n              }\n\n              if (/^(undo|redo)$/i.test(name)) {\n                that.undoRedoStack[name]();\n              } else if (command) {\n                that.execCommand(command);\n\n                if (command.async) {\n                  command.change = that._selectionChange.bind(that);\n                  return;\n                }\n              }\n\n              that._selectionChange();\n            }\n          },\n          execCommand: function (command) {\n            if (!command.managesUndoRedo) {\n              this.undoRedoStack.push(command);\n            }\n\n            command.editor = this;\n            command.exec();\n          }\n        });\n        Editor.defaultTools = {};\n        kendo.ui.plugin(Editor);\n        var Tool = Class.extend({\n          init: function (options) {\n            this.options = options;\n          },\n          initialize: function (ui, options) {\n            ui.attr({\n              unselectable: \"on\",\n              title: options.title,\n              \"aria-label\": options.title\n            });\n          },\n          command: function (commandArguments) {\n            return new this.options.command(commandArguments);\n          },\n          update: $.noop\n        });\n\n        Tool.exec = function (editor, name, value) {\n          editor.exec(name, {\n            value: value\n          });\n        };\n\n        var UndoTool = Tool.extend({\n          command: $.noop,\n          update: function (ui, nodes, undoRedoStack) {\n            var that = this,\n                name = that.options.name;\n\n            switch (name) {\n              case \"undo\":\n                ui.attr(\"disabled\", !undoRedoStack.canUndo());\n                break;\n\n              case \"redo\":\n                ui.attr(\"disabled\", !undoRedoStack.canRedo());\n                break;\n\n              default:\n                break;\n            }\n          }\n        });\n        EditorUtils.registerTool(\"separator\", new Tool({\n          template: new ToolTemplate({\n            template: EditorUtils.separatorTemplate\n          })\n        }));\n        EditorUtils.registerTool(\"undo\", new UndoTool({\n          key: \"Z\",\n          ctrl: true,\n          template: new ToolTemplate({\n            template: EditorUtils.buttonTemplate,\n            title: \"Undo\"\n          })\n        }));\n        EditorUtils.registerTool(\"redo\", new UndoTool({\n          key: \"Y\",\n          ctrl: true,\n          template: new ToolTemplate({\n            template: EditorUtils.buttonTemplate,\n            title: \"Redo\"\n          })\n        })); // Exports ================================================================\n\n        var emptyElementContent = '\\ufeff';\n        var emptyTableCellContent = emptyElementContent;\n\n        if (browser.msie || browser.edge) {\n          emptyTableCellContent = emptyElementContent = \"&nbsp;\";\n        }\n\n        extend(kendo.ui, {\n          editor: {\n            ToolTemplate: ToolTemplate,\n            EditorUtils: EditorUtils,\n            Tool: Tool,\n            emptyElementContent: emptyElementContent,\n            emptyTableCellContent: emptyTableCellContent\n          }\n        });\n\n        if (kendo.PDFMixin) {\n          kendo.PDFMixin.extend(Editor.prototype);\n\n          Editor.prototype._drawPDF = function () {\n            return kendo.drawing.drawDOM(this.body, this.options.pdf);\n          };\n\n          Editor.prototype.saveAsPDF = function () {\n            var progress = new $.Deferred();\n            var promise = progress.promise();\n            var args = {\n              promise: promise\n            };\n\n            if (this.trigger(\"pdfExport\", args)) {\n              return;\n            }\n\n            var options = this.options.pdf;\n\n            this._drawPDF(progress).then(function (root) {\n              return kendo.drawing.exportPDF(root, options);\n            }).done(function (dataURI) {\n              kendo.saveAs({\n                dataURI: dataURI,\n                fileName: options.fileName,\n                proxyURL: options.proxyURL,\n                proxyTarget: options.proxyTarget,\n                forceProxy: options.forceProxy\n              });\n              progress.resolve();\n            }).fail(function (err) {\n              progress.reject(err);\n            });\n\n            return promise;\n          };\n        }\n      })(window.kendo.jQuery);\n    }, __webpack_require__(3));\n    /***/\n\n  },\n\n  /***/\n  975:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../util/undoredostack\");\n    /***/\n  },\n\n  /***/\n  976:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../kendo.dropdownlist\");\n    /***/\n  },\n\n  /***/\n  977:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../kendo.window\");\n    /***/\n  },\n\n  /***/\n  978:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"../kendo.colorpicker\");\n    /***/\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}