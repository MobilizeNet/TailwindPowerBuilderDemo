{"ast":null,"code":"import { ChartElement } from '../../core';\nimport { X, Y } from '../../common/constants';\nimport { setDefaultOptions } from '../../common';\nimport { forEach, forEachReverse } from './utils';\n\nclass ClusterLayout extends ChartElement {\n  constructor(options) {\n    super(options);\n    this.forEach = options.rtl ? forEachReverse : forEach;\n  }\n\n  reflow(box) {\n    const {\n      vertical,\n      gap,\n      spacing\n    } = this.options;\n    const children = this.children;\n    const count = children.length;\n    const axis = vertical ? Y : X;\n    const slots = count + gap + spacing * (count - 1);\n    const slotSize = (vertical ? box.height() : box.width()) / slots;\n    let position = box[axis + 1] + slotSize * (gap / 2);\n    this.forEach(children, (child, idx) => {\n      const childBox = (child.box || box).clone();\n      childBox[axis + 1] = position;\n      childBox[axis + 2] = position + slotSize;\n      child.reflow(childBox);\n\n      if (idx < count - 1) {\n        position += slotSize * spacing;\n      }\n\n      position += slotSize;\n    });\n  }\n\n}\n\nsetDefaultOptions(ClusterLayout, {\n  vertical: false,\n  gap: 0,\n  spacing: 0\n});\nexport default ClusterLayout;","map":null,"metadata":{},"sourceType":"module"}