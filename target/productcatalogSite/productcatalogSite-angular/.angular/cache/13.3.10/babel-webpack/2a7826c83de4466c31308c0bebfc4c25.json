{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1408);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1051:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.core\");\n    /***/\n  },\n\n  /***/\n  1058:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.dom\");\n    /***/\n  },\n\n  /***/\n  1408:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1051), __webpack_require__(1058)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"rating\",\n        name: \"Rating\",\n        category: \"web\",\n        description: \"The Rating component.\",\n        depends: [\"core\"]\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            NS = \".kendoRating\",\n            Widget = ui.Widget,\n            extend = $.extend,\n            keys = kendo.keys,\n            parseFloat = kendo.parseFloat,\n            CHANGE = \"change\",\n            SELECT = \"select\",\n            SELECTED = \"selected\",\n            HOVERED = \"hovered\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            KEYDOWN = \"keydown\" + NS,\n            CLICK = \"click\" + NS,\n            MOUSEENTER = \"mouseenter\" + NS,\n            MOUSELEAVE = \"mouseleave\" + NS,\n            MOUSEMOVE = \"mousemove\" + NS,\n            MOUSEDOWN = \"mousedown\" + NS,\n            FOCUS = \"focus\" + NS,\n            BLUR = \"blur\" + NS,\n            ARIA_LABEL = \"aria-label\",\n            ARIA_LABELLEDBY = \"aria-labelledby\",\n            ARIA_VALUEMIN = \"aria-valuemin\",\n            ARIA_VALUEMAX = \"aria-valuemax\",\n            ARIA_VALUENOW = \"aria-valuenow\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_READONLY = \"aria-readonly\",\n            PRECISION_PART = \"k-rating-precision-part\",\n            PRECISION_COMPLEMENT = \"k-rating-precision-complement\",\n            PRECISION_HALF_VALUE = 0.5,\n            LABELIDPART = \"_label\",\n            KITEM = \"k-rating-item\",\n            FOCUSED = \"k-state-focused\",\n            TABINDEX = \"tabindex\",\n            DOT = \".\",\n            ROLE = \"role\",\n            MIN = \"min\",\n            MAX = \"max\";\n        var ratingSelection = {\n          single: \"single\",\n          continuous: \"continuous\"\n        };\n        var ratingPrecision = {\n          item: \"item\",\n          half: \"half\"\n        };\n        var ratingItemTemplates = {\n          item: \"itemTemplate\",\n          hovered: \"hoveredTemplate\",\n          selected: \"selectedTemplate\"\n        };\n        var ratingItemStates = {\n          selected: \"k-state-selected\",\n          hovered: \"k-state-hover\",\n          hoveredPrecise: \"k-state-hover-precise\"\n        };\n        var ratingItemAttributes = {\n          partValue: \"part-value\",\n          dataValue: \"data-value\",\n          value: \"value\",\n          title: \"title\"\n        };\n        var ratingStyles = {\n          widget: \"k-rating k-widget\",\n          container: \"k-rating-container\",\n          item: \"k-rating-item\",\n          icon: \"k-icon k-i-star-outline\",\n          iconSelected: \"k-icon k-i-star\",\n          label: \"k-rating-label\",\n          disabled: \"k-state-disabled\",\n          readonly: \"k-state-readonly\",\n          active: \"k-state-active\",\n          hidden: \"k-hidden\"\n        };\n        var RATING_TEMPLATE = kendo.template('<span class=\"#:styles.widget#\"></span>');\n        var RATING_CONTAINER_TEMPLATE = kendo.template('<span class=\"#:styles.container#\"></span>');\n        var RATING_LABEL_WRAPPER_TEMPLATE = kendo.template('<span class=\"#:styles.label#\"></span>');\n        var RATING_LABEL_TEMPLATE = kendo.template('<span>#:value# / #:maxValue#</span>');\n        var RATING_ITEM_WRAPPER_TEMPLATE = kendo.template('<span class=\"#:styles.item#\" data-value=\"#:value#\"></span>');\n        var RATING_ITEM_TEMPLATE = kendo.template('<span class=\"#:icon#\"></span>');\n        var Rating = Widget.extend({\n          init: function (element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            that.options = extend({}, that.options, options);\n\n            that._element();\n\n            that._wrapper();\n\n            that._aria();\n\n            that._initSettings();\n\n            that._renderItems();\n\n            that._renderTooltip();\n\n            that._renderLabel();\n\n            that._selectInitial();\n\n            that._attachEvents();\n\n            kendo.notify(this);\n          },\n          events: [SELECT, CHANGE],\n          options: {\n            name: \"Rating\",\n            messages: {},\n            min: 1,\n            max: 5,\n            selection: ratingSelection.continuous,\n            precision: ratingPrecision.item,\n            tooltip: true,\n            label: true,\n            readonly: false,\n            enabled: true,\n            selectValueOnFocus: null,\n            itemTemplate: null,\n            selectedTemplate: null,\n            hoveredTemplate: null\n          },\n          _element: function () {\n            var that = this;\n            that.element.addClass(ratingStyles.hidden);\n          },\n          _wrapper: function () {\n            var that = this;\n            that.wrapper = $(RATING_TEMPLATE({\n              styles: ratingStyles\n            }));\n            that.wrapper = that.element.wrap(that.wrapper).parent();\n            that.wrapper.addClass(that.element[0].className.replace(ratingStyles.hidden, \"\")).append($(RATING_CONTAINER_TEMPLATE({\n              styles: ratingStyles\n            })));\n            that.wrapper[0].style.cssText = that.element[0].style.cssText;\n            that.container = that.wrapper.find(DOT + ratingStyles.container);\n          },\n          _aria: function () {\n            var that = this,\n                wrapper = that.wrapper,\n                element = that.element,\n                id = element.attr(\"id\"),\n                labelFor = $(\"label[for=\\\"\" + id + \"\\\"]\"),\n                ariaLabel = element.attr(ARIA_LABEL),\n                ariaLabelledBy = element.attr(ARIA_LABELLEDBY),\n                min = parseFloat(that.element.attr(MIN)) || that.options.min,\n                max = parseFloat(that.element.attr(MAX)) || that.options.max;\n            that.wrapper.attr(TABINDEX, 0).attr(ROLE, \"slider\").attr(ARIA_VALUEMIN, min).attr(ARIA_VALUEMAX, max).attr(ARIA_VALUENOW, that.options.value || (min + max) / 2);\n\n            if (ariaLabel) {\n              wrapper.attr(ARIA_LABEL, ariaLabel);\n            } else if (ariaLabelledBy) {\n              wrapper.attr(ARIA_LABELLEDBY, ariaLabelledBy);\n            } else if (labelFor.length) {\n              var labelId = labelFor.attr(\"id\");\n\n              if (!labelId) {\n                labelId = (id || kendo.guid()) + LABELIDPART;\n                labelFor.attr(\"id\", labelId);\n              }\n\n              wrapper.attr(ARIA_LABELLEDBY, labelId);\n            }\n          },\n          _initSettings: function () {\n            var that = this,\n                isPrecise = that.options.precision != ratingPrecision.item,\n                options = that.options;\n            options.value = parseFloat(options.value);\n\n            if (options.value === null) {\n              options.value = parseFloat(that.element.val());\n            }\n\n            options.min = parseFloat(that.element.attr(MIN)) || that.options.min;\n            options.max = parseFloat(that.element.attr(MAX)) || that.options.max;\n            that._valueMin = isPrecise ? that.options.min - PRECISION_HALF_VALUE : that.options.min;\n            options.enabled = options.enabled && !that.element.attr(DISABLED);\n            options.readonly = options.readonly || !!that.element.attr(READONLY);\n\n            that._setState();\n          },\n          _renderItems: function () {\n            var that = this,\n                container = that.container,\n                min = that.options.min,\n                max = that.options.max,\n                itemTemplate = that.options.itemTemplate ? kendo.template(that.options.itemTemplate) : RATING_ITEM_TEMPLATE;\n\n            for (var i = min; i <= max; i += 1) {\n              var itemWrapper = $(RATING_ITEM_WRAPPER_TEMPLATE({\n                styles: ratingStyles,\n                value: i\n              }));\n              itemWrapper.append(itemTemplate({\n                icon: ratingStyles.icon,\n                index: i\n              }));\n              container.append(itemWrapper);\n            }\n          },\n          _renderTooltip: function () {\n            var that = this,\n                items = that.container.find(DOT + KITEM),\n                enabled = that.options.tooltip === true;\n\n            if (!enabled) {\n              items.removeAttr(ratingItemAttributes.title);\n              return;\n            }\n\n            for (var i = 0; i < items.length; i += 1) {\n              $(items[i]).attr(ratingItemAttributes.title, $(items[i]).data(ratingItemAttributes.value));\n            }\n          },\n          _renderLabel: function () {\n            var that = this,\n                label = that.wrapper.find(DOT + ratingStyles.label),\n                enabled = that.options.label === true || that.options.label.template !== undefined,\n                template = that.options.label && that.options.label.template ? kendo.template(that.options.label.template) : RATING_LABEL_TEMPLATE;\n\n            if (!enabled || that.value() === null) {\n              label.remove();\n              that.label = null;\n              return;\n            }\n\n            if (!label.length) {\n              that.label = label = $(RATING_LABEL_WRAPPER_TEMPLATE({\n                styles: ratingStyles\n              }));\n              that.wrapper.append(label);\n            }\n\n            label.html(template({\n              styles: ratingStyles,\n              value: that.value() % 1 === 0 ? that.value() : that._format(that.value()),\n              maxValue: that.options.max\n            }));\n          },\n          _selectInitial: function () {\n            var that = this;\n\n            if (!isNaN(that.options.value)) {\n              that.value(that.options.value);\n            }\n          },\n          _attachEvents: function () {\n            var that = this,\n                isHalfPrecision = that.options.precision == ratingPrecision.half;\n            that.wrapper.on(FOCUS, that._focus.bind(that)).on(BLUR, that._blur.bind(that)).on(KEYDOWN, that._keydown.bind(that));\n            that.container.on(CLICK, DOT + KITEM, that._click.bind(that)).on(MOUSEENTER, DOT + KITEM, that._mouseenter.bind(that)).on(MOUSELEAVE, DOT + KITEM, that._mouseleave.bind(that)).on(MOUSEDOWN, that._mousedown.bind(that));\n\n            if (isHalfPrecision) {\n              that.container.on(MOUSEMOVE, DOT + KITEM, that._mousemove.bind(that));\n            }\n          },\n          _focus: function () {\n            var that = this,\n                container = that.container,\n                wrapper = that.wrapper,\n                focusedItems = that.container.find(DOT + FOCUSED),\n                selectValueOnFocus = that.options.selectValueOnFocus,\n                firstElement = container.children().first(),\n                selectedElement,\n                hoveredElement,\n                itemToFocus;\n\n            if (!that.options.enabled || that.options.readonly || that.preventFocus) {\n              if (that.options.readonly) {\n                that.wrapper.addClass(FOCUSED);\n              }\n\n              return;\n            }\n\n            wrapper.addClass(FOCUSED);\n            focusedItems.removeClass(FOCUSED);\n\n            if (that.value() === null && selectValueOnFocus !== null) {\n              that.value(selectValueOnFocus);\n            }\n\n            selectedElement = container.find(DOT + ratingItemStates.selected).last();\n            hoveredElement = container.find(DOT + ratingItemStates.hovered).last();\n            itemToFocus = selectedElement.length ? selectedElement : hoveredElement;\n            itemToFocus = itemToFocus.length ? itemToFocus : firstElement;\n            itemToFocus.addClass(FOCUSED);\n          },\n          _blur: function () {\n            var that = this;\n            that.preventFocus = false;\n            that.wrapper.removeClass(FOCUSED);\n            that.container.find(DOT + FOCUSED).removeClass(FOCUSED);\n            that.element.trigger(\"blur\");\n          },\n          _mousedown: function () {\n            var that = this;\n            that.preventFocus = true;\n          },\n          _keydown: function (e) {\n            var that = this,\n                container = that.container,\n                currentValue = that.parsedValue,\n                isPrecise = that.options.precision != ratingPrecision.item,\n                step = isPrecise ? PRECISION_HALF_VALUE : 1,\n                focusableItems = container.find(DOT + KITEM),\n                focusedElement = container.find(DOT + FOCUSED),\n                currentIndex = focusableItems.index(focusedElement),\n                isRtl = kendo.support.isRtl(that.wrapper),\n                isEmpty = isNaN(currentValue),\n                keyCode = e.keyCode,\n                left,\n                right,\n                itemToFocus,\n                itemValue;\n\n            if (!that.options.enabled || that.options.readonly) {\n              return;\n            }\n\n            left = keyCode === keys.RIGHT && isRtl || keyCode === keys.LEFT && !isRtl;\n            right = keyCode === keys.LEFT && isRtl || keyCode === keys.RIGHT && !isRtl;\n\n            if (left || keyCode === keys.DOWN) {\n              itemToFocus = isEmpty ? focusableItems.eq(0) : $(focusableItems[currentIndex - 1]);\n              itemValue = isEmpty ? that._valueMin : currentValue - step;\n\n              that._select(itemToFocus, itemValue);\n\n              e.preventDefault();\n            } else if (right || keyCode === keys.UP) {\n              itemToFocus = isEmpty ? focusableItems.eq(0) : $(focusableItems[currentIndex + 1]);\n              itemValue = isEmpty ? that._valueMin : currentValue + step;\n\n              that._select(itemToFocus, itemValue);\n\n              e.preventDefault();\n            } else if (keyCode === keys.HOME) {\n              itemToFocus = focusableItems.eq(0);\n\n              that._select(itemToFocus, that._valueMin);\n\n              e.preventDefault();\n            } else if (keyCode === keys.END) {\n              itemToFocus = focusableItems.eq(focusableItems.length - 1);\n\n              that._select(itemToFocus);\n\n              e.preventDefault();\n            }\n          },\n          _getTemplateType: function (type) {\n            var that = this,\n                template;\n\n            if (that.options[type]) {\n              template = kendo.template(that.options[type]);\n            } else {\n              template = RATING_ITEM_TEMPLATE;\n            }\n\n            return template;\n          },\n          _renderTemplate: function (target, type) {\n            var that = this,\n                template = that._getTemplateType(type),\n                defaultIcon = ratingStyles.icon;\n\n            if (type == ratingItemTemplates.selected || type == ratingItemTemplates.hovered) {\n              defaultIcon = ratingStyles.iconSelected;\n            }\n\n            for (var i = 0; i < target.length; i += 1) {\n              $(target[i]).html(template({\n                icon: defaultIcon,\n                index: $(target[i]).index()\n              }));\n            }\n          },\n          _updateItemTemplates: function (state, target) {\n            var that = this,\n                isSingle = ratingSelection.single == that.options.selection,\n                isHalfPrecision = that.options.precision == ratingPrecision.half,\n                previousSelection = that.container.find(DOT + ratingItemStates.selected),\n                currentSelection = isSingle ? target : target.prevAll().addBack(),\n                resetItems = isSingle ? previousSelection : target.nextAll(),\n                templateType = ratingItemTemplates[state],\n                stateClass = ratingItemStates[state];\n            resetItems.removeClass(stateClass);\n            currentSelection.addClass(stateClass);\n\n            that._renderTemplate(currentSelection, templateType);\n\n            if (!isSingle || isSingle && state == SELECTED && currentSelection.get(0) != previousSelection.get(0)) {\n              that._renderTemplate(resetItems, ratingItemTemplates.item);\n            }\n\n            if (isHalfPrecision) {\n              that._renderTemplate(target, ratingItemTemplates.item);\n            }\n          },\n          _change: function (target, newValue) {\n            var that = this,\n                currentValue = that.value();\n            that.value(newValue);\n            that.trigger(CHANGE, {\n              target: target,\n              oldValue: currentValue,\n              newValue: that.value()\n            });\n          },\n          _click: function (e) {\n            var that = this,\n                target = $(e.target).closest(DOT + KITEM),\n                valueToSelect = target.attr(ratingItemAttributes.dataValue);\n\n            if (!that.options.enabled || that.options.readonly) {\n              return;\n            }\n\n            if (target.data(ratingItemAttributes.partValue)) {\n              valueToSelect = target.data(ratingItemAttributes.partValue);\n            }\n\n            that._select(target, valueToSelect);\n          },\n          _select: function (target, newValue) {\n            var that = this,\n                value = isNaN(newValue) ? target.attr(ratingItemAttributes.dataValue) : newValue;\n\n            if (value == that.value() || value < that._valueMin || value > that.options.max) {\n              return;\n            }\n\n            that.trigger(SELECT, {\n              target: target\n            });\n\n            that._change(target, value);\n\n            that._focus();\n          },\n          _mouseenter: function (e) {\n            var that = this,\n                target = $(e.target),\n                item = target.closest(DOT + KITEM);\n\n            if (!that.options.enabled || that.options.readonly) {\n              return;\n            }\n\n            that.enableMove = true;\n\n            if (target.is(DOT + KITEM)) {\n              that._updateItemTemplates(HOVERED, item);\n            }\n          },\n          _mouseleave: function (e) {\n            var that = this,\n                selection = that.options.selection,\n                isHalfPrecision = that.options.precision == ratingPrecision.half,\n                isSingle = selection == ratingSelection.single,\n                item = $(e.target).closest(DOT + KITEM),\n                items = that.container.find(DOT + KITEM),\n                hasPart,\n                template;\n            that.enableMove = false;\n\n            var setTemplate = function (item) {\n              hasPart = that.parsedValue % 1 !== 0 && item.is(that.container.find(\"[data-value=\" + Math.ceil(that.parsedValue) + \"]\"));\n              template = (item.hasClass(ratingItemStates.selected) || item.hasClass(ratingItemStates.hovered)) && !hasPart ? ratingItemTemplates.selected : ratingItemTemplates.item;\n\n              that._renderTemplate(item, template);\n\n              if (isHalfPrecision && hasPart && item.hasClass(ratingItemStates.selected)) {\n                that._togglePrecisionElements(item, SELECTED);\n              }\n            };\n\n            items.removeClass(ratingItemStates.hovered);\n\n            if (isSingle) {\n              setTemplate(item);\n            } else {\n              for (var i = 0; i < items.length; i += 1) {\n                var currentItem = $(items[i]);\n                setTemplate(currentItem);\n              }\n            }\n          },\n          _mousemove: function (e) {\n            var that = this,\n                item = $(e.target).closest(DOT + KITEM),\n                mousePosition,\n                itemOffset,\n                partSize;\n\n            if (!that.enableMove) {\n              return;\n            }\n\n            if (item.length) {\n              mousePosition = e.clientX;\n              itemOffset = item.offset().left;\n              partSize = Math.abs(mousePosition - itemOffset);\n\n              that._togglePrecisionElements(item, HOVERED);\n\n              that._updatePrecisionElements(item, partSize);\n            }\n\n            e.preventDefault();\n          },\n          _togglePrecisionElements: function (item, templateType) {\n            var that = this,\n                part = item.find(DOT + PRECISION_PART),\n                partTemplate = that._getTemplateType(ratingItemTemplates[templateType]),\n                isFraction,\n                itemSize;\n\n            if (!part.length) {\n              isFraction = that.parsedValue % 1 !== 0;\n              itemSize = that._getItemWidth(item);\n              part = $(\"<span></span>\").addClass(PRECISION_PART);\n              part.append(partTemplate({\n                icon: ratingStyles.iconSelected\n              }));\n              part.width(isFraction ? itemSize / 2 : itemSize);\n              item.append(part);\n              item.append($(\"<span></span>\").css({\n                \"width\": itemSize,\n                \"height\": itemSize,\n                \"display\": \"block\"\n              }));\n\n              that._createUpdatePrecisionComplement(item, isFraction);\n            } else {\n              part.html(partTemplate({\n                icon: ratingStyles.iconSelected\n              }));\n            }\n          },\n          _createUpdatePrecisionComplement: function (item, isHalf) {\n            var that = this,\n                complement = item.find(DOT + PRECISION_COMPLEMENT),\n                iconElement = item.children().first(),\n                isRtl = kendo.support.isRtl(that.wrapper),\n                dir = !isRtl ? \"left\" : \"right\";\n\n            if (!complement.length) {\n              complement = iconElement.wrap($(\"<span></span>\").addClass(PRECISION_COMPLEMENT)).parent();\n            }\n\n            complement.width(isHalf ? that._getItemWidth(item) / 2 : 0);\n            complement.css(dir, isHalf || isRtl ? \"50%\" : 0);\n          },\n          _calculateItemWidthFromStyles: function (item) {\n            if (!item) {\n              return;\n            }\n\n            return parseFloat(item.find(\".k-icon\").css(\"font-size\"));\n          },\n          _getItemWidth: function (item) {\n            if (!item) {\n              return;\n            }\n\n            return item.width() || this._calculateItemWidthFromStyles(item) || 0;\n          },\n          _updatePrecisionElements: function (item, partSize) {\n            var that = this,\n                itemPart = item.find(DOT + PRECISION_PART),\n                itemValue = kendo.parseFloat(item.data(ratingItemAttributes.value)),\n                isRtl = kendo.support.isRtl(this.wrapper),\n                itemWidth = item.width(),\n                halfWidth = itemWidth / 2,\n                halfOffset = parseFloat(item.outerWidth() / 2),\n                isHalf = !isRtl ? partSize < halfOffset : partSize > halfOffset;\n\n            if (item.length && itemPart.length) {\n              itemPart.width(isHalf ? halfWidth : itemWidth);\n\n              if (this.options.tooltip) {\n                item.attr(ratingItemAttributes.title, isHalf ? that._format(itemValue - PRECISION_HALF_VALUE) : itemValue);\n              }\n\n              item.data(ratingItemAttributes.partValue, isHalf ? itemValue - PRECISION_HALF_VALUE : itemValue);\n\n              that._createUpdatePrecisionComplement(item, isHalf);\n            }\n          },\n          _updateElement: function (value) {\n            var that = this,\n                elementValue = value === null ? \"\" : value,\n                min = parseFloat(that.element.attr(MIN)) || that.options.min,\n                max = parseFloat(that.element.attr(MAX)) || that.options.max;\n            that.element.val(that._format(elementValue));\n            that.wrapper.attr(ARIA_VALUENOW, that._format(value) || (min + max) / 2);\n          },\n          _updateItemsRendering: function (value) {\n            var that = this,\n                isHalfPrecision = that.options.precision == ratingPrecision.half,\n                updateTemplate = value === null ? \"item\" : SELECTED,\n                valueItem = value === null ? that.container.find(DOT + ratingItemStates.selected).last() : that.container.find(DOT + KITEM + \"[data-value='\" + Math.ceil(value) + \"']\");\n\n            if (value === null) {\n              that.container.find(DOT + KITEM).removeClass(ratingItemStates.selected);\n            }\n\n            that._updateItemTemplates(updateTemplate, valueItem);\n\n            if (isHalfPrecision && value !== null) {\n              that._togglePrecisionElements(valueItem, SELECTED);\n            }\n\n            that._renderLabel();\n          },\n          _setState: function () {\n            var that = this,\n                element = that.element,\n                wrapper = that.wrapper,\n                readonly = that.options.readonly,\n                enabled = that.options.enabled;\n\n            if (readonly && enabled) {\n              element.attr(READONLY, READONLY);\n              wrapper.attr(ARIA_READONLY, true);\n            } else {\n              element.prop(READONLY, false);\n              wrapper.removeAttr(ARIA_READONLY);\n            }\n\n            if (enabled) {\n              element.prop(DISABLED, false);\n              wrapper.removeAttr(ARIA_DISABLED);\n              wrapper.attr(TABINDEX, 0);\n            } else {\n              element.attr(DISABLED, DISABLED);\n              wrapper.attr(ARIA_DISABLED, true);\n              wrapper.removeAttr(TABINDEX);\n            }\n\n            wrapper.toggleClass(ratingStyles.disabled, !enabled);\n            wrapper.toggleClass(ratingStyles.readonly, readonly && enabled);\n          },\n          _format: function (value) {\n            return kendo.toString(value, \"n1\", kendo.getCulture().name);\n          },\n          value: function (value) {\n            var that = this,\n                isHalfPrecision = that.options.precision == ratingPrecision.half;\n\n            if (value === null) {\n              that._updateElement(value);\n\n              that._updateItemsRendering(value);\n\n              return;\n            }\n\n            value = parseFloat(value);\n\n            if (value === null) {\n              value = parseFloat(that.element.val());\n              return value;\n            }\n\n            value = Math.max(that._valueMin, Math.min(value, that.options.max));\n\n            if (isHalfPrecision) {\n              that.parsedValue = parseFloat(that._format(Math.ceil(value * 2) / 2));\n            } else {\n              that.parsedValue = Math.round(value);\n            }\n\n            that._updateElement(value);\n\n            that._updateItemsRendering(value);\n          },\n          reset: function () {\n            var that = this;\n            that.value(null);\n          },\n          enable: function (enable) {\n            var that = this;\n\n            if (typeof enable == \"undefined\") {\n              enable = true;\n            }\n\n            that.options.enabled = enable;\n            that.options.readonly = false;\n\n            that._setState();\n          },\n          readonly: function (readonly) {\n            var that = this;\n\n            if (typeof readonly == \"undefined\") {\n              readonly = true;\n            }\n\n            that.options.readonly = readonly;\n            that.options.enabled = true;\n\n            that._setState();\n          },\n          setOptions: function (options) {\n            var that = this;\n            that.options = $.extend(that.options, options);\n\n            if (options.enabled !== undefined) {\n              that.enable(options.enabled);\n            }\n\n            if (options.readonly !== undefined) {\n              that.readonly(options.readonly);\n            }\n\n            if (options.label !== undefined) {\n              that._renderLabel();\n            }\n\n            if (options.tooltip !== undefined) {\n              that._renderTooltip();\n            }\n\n            if (options.value !== undefined) {\n              that.value(options.value);\n            }\n\n            if (options.min || options.max !== undefined || options.itemTemplate !== undefined || options.selectedTemplate !== undefined || options.hoveredTemplate !== undefined) {\n              that.container.empty();\n\n              that._renderItems();\n\n              that._renderLabel();\n\n              that._renderTooltip();\n\n              that._selectInitial();\n            }\n          },\n          destroy: function () {\n            var that = this;\n            that.wrapper.off(NS);\n            that.container.off(NS);\n            Widget.fn.destroy.call(that);\n          }\n        });\n        ui.plugin(Rating);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}