{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1498);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1063:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.data\");\n    /***/\n  },\n\n  /***/\n  1136:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./kendo.draganddrop\");\n    /***/\n  },\n\n  /***/\n  1498:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1063), __webpack_require__(1136)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"treeview.draganddrop\",\n        name: \"Hierarchical Drag & Drop\",\n        category: \"framework\",\n        depends: [\"core\", \"draganddrop\"],\n        advanced: true\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo;\n        var ui = kendo.ui;\n        var extend = $.extend;\n        var VISIBILITY = \"visibility\";\n        var KSTATEHOVER = \"k-state-hover\";\n        var INPUTSELECTOR = \"input,a:not(.k-in),textarea,.k-multiselect-wrap,select,button,a.k-button>.k-icon,button.k-button>.k-icon,span.k-icon.k-i-arrow-60-right,span.k-icon.k-i-arrow-45-down-right\";\n        var DROPHINTTEMPLATE = \"<div class='k-drop-hint k-drop-hint-h'>\" + \"<div class='k-drop-hint-start'></div>\" + \"<div class='k-drop-hint-line'></div>\" + \"</div>\";\n        ui.HierarchicalDragAndDrop = kendo.Class.extend({\n          init: function (element, options) {\n            this.element = element;\n            this.hovered = element;\n            this.options = extend({\n              dragstart: $.noop,\n              drag: $.noop,\n              drop: $.noop,\n              dragend: $.noop\n            }, options);\n            this._draggable = new ui.Draggable(element, {\n              ignore: INPUTSELECTOR,\n              filter: options.filter,\n              autoScroll: options.autoScroll,\n              cursorOffset: {\n                left: 10,\n                top: kendo.support.mobileOS ? -40 / kendo.support.zoomLevel() : 10\n              },\n              hint: this._hint.bind(this),\n              dragstart: this.dragstart.bind(this),\n              dragcancel: this.dragcancel.bind(this),\n              drag: this.drag.bind(this),\n              dragend: this.dragend.bind(this),\n              $angular: options.$angular,\n              holdToDrag: options.holdToDrag\n            });\n          },\n          _hint: function (element) {\n            return \"<div class='k-drag-clue'>\" + \"<span class='k-icon k-drag-status'></span>\" + this.options.hintText(element) + \"</div>\";\n          },\n          _removeTouchHover: function () {\n            if (kendo.support.touch && this.hovered) {\n              this.hovered.find(\".\" + KSTATEHOVER).removeClass(KSTATEHOVER);\n              this.hovered = false;\n            }\n          },\n          _hintStatus: function (newStatus) {\n            var statusElement = this._draggable.hint.find(\".k-drag-status\")[0];\n\n            if (newStatus) {\n              statusElement.className = \"k-icon k-drag-status \" + newStatus;\n            } else {\n              return kendo.trim(statusElement.className.replace(/(p|k)-(icon|drag-status)/g, \"\"));\n            }\n          },\n          dragstart: function (e) {\n            this.source = e.currentTarget.closest(this.options.itemSelector);\n\n            if (this.options.dragstart(this.source)) {\n              e.preventDefault();\n            }\n\n            if (this.options.reorderable) {\n              this.dropHint = $(DROPHINTTEMPLATE).css(VISIBILITY, \"hidden\").appendTo(this.element);\n            } else {\n              this.dropHint = $();\n            }\n          },\n          drag: function (e) {\n            var options = this.options;\n            var source = this.source;\n            var target = this.dropTarget = $(kendo.eventTarget(e));\n            var container = target.closest(options.allowedContainers);\n            var hoveredItem, itemHeight, itemTop, itemContent, delta;\n            var insertOnTop, insertOnBottom, addChild;\n            var itemData, position, status;\n\n            if (!container.length) {\n              // dragging outside of allowed elements\n              status = \"k-i-cancel\";\n\n              this._removeTouchHover();\n            } else if (source[0] == target[0] || options.contains(source[0], target[0])) {\n              // dragging item within itself\n              status = \"k-i-cancel\";\n            } else {\n              // moving or reordering item\n              status = \"k-i-insert-middle\";\n              itemData = options.itemFromTarget(target);\n              hoveredItem = itemData.item;\n\n              if (hoveredItem.length) {\n                this._removeTouchHover();\n\n                itemHeight = kendo._outerHeight(hoveredItem);\n                itemContent = itemData.content;\n\n                if (options.reorderable) {\n                  delta = itemHeight / (itemContent.length > 0 ? 4 : 2);\n                  itemTop = kendo.getOffset(hoveredItem).top;\n                  insertOnTop = e.y.location < itemTop + delta;\n                  insertOnBottom = itemTop + itemHeight - delta < e.y.location;\n                  addChild = itemContent.length && !insertOnTop && !insertOnBottom;\n                } else {\n                  addChild = true;\n                  insertOnTop = false;\n                  insertOnBottom = false;\n                }\n\n                this.hovered = addChild ? container : false;\n                this.dropHint.css(VISIBILITY, addChild ? \"hidden\" : \"visible\");\n\n                if (this._lastHover && this._lastHover[0] != itemContent[0]) {\n                  this._lastHover.removeClass(KSTATEHOVER);\n                }\n\n                this._lastHover = itemContent.toggleClass(KSTATEHOVER, addChild);\n\n                if (addChild) {\n                  status = \"k-i-plus\";\n                } else {\n                  position = hoveredItem.position();\n                  position.top += insertOnTop ? 0 : itemHeight;\n                  this.dropHint.css(position)[insertOnTop ? \"prependTo\" : \"appendTo\"](options.dropHintContainer(hoveredItem));\n\n                  if (insertOnTop && itemData.first) {\n                    status = \"k-i-insert-up\";\n                  }\n\n                  if (insertOnBottom && itemData.last) {\n                    status = \"k-i-insert-down\";\n                  }\n                }\n              } else if (target[0] != this.dropHint[0]) {\n                if (this._lastHover) {\n                  this._lastHover.removeClass(KSTATEHOVER);\n                }\n\n                if (!$.contains(this.element[0], container[0])) {\n                  // moving node to different element\n                  status = \"k-i-plus\";\n                } else {\n                  status = \"k-i-cancel\";\n                }\n              }\n            }\n\n            this.options.drag({\n              originalEvent: e.originalEvent,\n              source: source,\n              target: target,\n              pageY: e.y.location,\n              pageX: e.x.location,\n              status: status.substring(2),\n              setStatus: function (value) {\n                status = value;\n              }\n            });\n\n            if (status.indexOf(\"k-i-insert\") !== 0) {\n              this.dropHint.css(VISIBILITY, \"hidden\");\n            }\n\n            this._hintStatus(status);\n          },\n          dragcancel: function () {\n            this.dropHint.remove();\n          },\n          dragend: function (e) {\n            var position = \"over\",\n                source = this.source,\n                destination,\n                dropHint = this.dropHint,\n                dropTarget = this.dropTarget,\n                eventArgs,\n                dropPrevented;\n\n            if (dropHint.css(VISIBILITY) == \"visible\") {\n              position = this.options.dropPositionFrom(dropHint);\n              destination = dropHint.closest(this.options.itemSelector);\n            } else if (dropTarget) {\n              destination = dropTarget.closest(this.options.itemSelector); // moving node to root element\n\n              if (!destination.length) {\n                destination = dropTarget.closest(this.options.allowedContainers);\n              }\n            }\n\n            eventArgs = {\n              originalEvent: e.originalEvent,\n              source: source[0],\n              destination: destination[0],\n              valid: this._hintStatus() != \"k-i-cancel\",\n              setValid: function (newValid) {\n                this.valid = newValid;\n              },\n              dropTarget: dropTarget[0],\n              position: position\n            };\n            dropPrevented = this.options.drop(eventArgs);\n            dropHint.remove();\n\n            this._removeTouchHover();\n\n            if (this._lastHover) {\n              this._lastHover.removeClass(KSTATEHOVER);\n            }\n\n            if (!eventArgs.valid || dropPrevented) {\n              this._draggable.dropped = eventArgs.valid;\n              return;\n            }\n\n            this._draggable.dropped = true;\n            this.options.dragend({\n              originalEvent: e.originalEvent,\n              source: source,\n              destination: destination,\n              position: position\n            });\n          },\n          destroy: function () {\n            this._lastHover = this.hovered = null;\n\n            this._draggable.destroy();\n          }\n        });\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}