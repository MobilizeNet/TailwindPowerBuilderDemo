{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(1318);\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = function () {\n      throw new Error(\"define cannot be used indirect\");\n    };\n    /***/\n\n  },\n\n  /***/\n  1318:\n  /***/\n  function (module, exports, __webpack_require__) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (f, define) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1319), __webpack_require__(1320)], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    })(function () {\n      var __meta__ = {\n        // jshint ignore:line\n        id: \"imageeditor\",\n        name: \"ImageEditor\",\n        category: \"web\",\n        depends: [\"core\"]\n      };\n\n      (function ($, undefined) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            isPlainObject = $.isPlainObject,\n            Widget = kendo.ui.Widget,\n            ui = kendo.ui,\n            NS = \".kendoImageEditor\",\n            outerHeight = kendo._outerHeight,\n            ERROR = \"error\",\n            IMAGELOADED = \"imageLoaded\",\n            IMAGERENDERED = \"imageRendered\",\n            EXECUTE = \"execute\";\n        var imageEditorStyles = {\n          wrapper: \"k-widget k-imageeditor\",\n          header: \"k-imageeditor-header\",\n          toolbar: \"k-imageeditor-toolbar\",\n          paneWrapper: \"k-imageeditor-action-pane\",\n          contentWrapper: \"k-imageeditor-content\",\n          canvasWrapper: \"k-imageeditor-canvas-container\",\n          canvasContainer: \"k-imageeditor-canvas\"\n        };\n        var ImageEditor = Widget.extend({\n          init: function (element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            options = $.extend(true, {}, options);\n\n            that._wrapper();\n\n            that._renderHeader();\n\n            that._contentWrapper();\n\n            that._keyHandler();\n\n            if (options.imageUrl) {\n              that._drawCanvas();\n            }\n\n            that._initUndoRedoStack();\n\n            that._toggleTools();\n\n            kendo.notify(that);\n          },\n          options: {\n            name: 'ImageEditor',\n            width: \"100%\",\n            height: 570,\n            imageUrl: \"\",\n            toolbar: {},\n            saveAs: {\n              fileName: \"image.png\"\n            },\n            messages: {\n              toolbar: {\n                open: \"Open Image\",\n                save: \"Save Image\",\n                undo: \"Undo\",\n                redo: \"Redo\",\n                crop: \"Crop\",\n                resize: \"Resize\",\n                zoomIn: \"Zoom In\",\n                zoomOut: \"Zoom Out\",\n                zoomDropdown: \"Zoom options\",\n                zoomActualSize: \"Show actual size\",\n                zoomFitToScreen: \"Fit to screen\"\n              },\n              panes: {\n                crop: {\n                  title: \"Crop Image\",\n                  aspectRatio: \"Aspect Ratio:\",\n                  aspectRatioItems: {\n                    \"originalRatio\": \"Original ratio\",\n                    \"1:1\": \"1:1 (Square)\",\n                    \"4:5\": \"4:5 (8:10)\",\n                    \"5:7\": \"5:7\",\n                    \"2:3\": \"2:3 (4:6)\",\n                    \"16:9\": \"16:9\"\n                  },\n                  orientation: \"Orientation:\",\n                  portrait: \"Portrait\",\n                  landscape: \"Landscape\"\n                },\n                resize: {\n                  title: \"Resize image\",\n                  pixels: \"Pixels\",\n                  percents: \"Percents\"\n                }\n              },\n              common: {\n                width: \"Width:\",\n                height: \"Height:\",\n                cancel: \"Cancel\",\n                confirm: \"Confirm\",\n                lockAspectRatio: \"Lock aspect ratio\"\n              }\n            }\n          },\n          events: [ERROR, IMAGELOADED, IMAGERENDERED, EXECUTE],\n          _wrapper: function () {\n            var that = this,\n                options = that.options,\n                width = options.width,\n                height = options.height;\n            that.wrapper = that.element.addClass(imageEditorStyles.wrapper);\n\n            if (width) {\n              that.wrapper.width(width);\n            }\n\n            if (height) {\n              that.wrapper.height(height);\n            }\n\n            that._resizeHandler = kendo.onResize(function () {\n              that.resize(true);\n            });\n          },\n          _renderHeader: function () {\n            var that = this,\n                options = that.options;\n            that.header = $(\"<div />\").addClass(imageEditorStyles.header);\n\n            if (options.toolbar) {\n              that.header.append(that._initToolbar().element);\n            }\n\n            that.wrapper.append(that.header);\n          },\n          _initToolbar: function () {\n            var that = this,\n                options = that.options,\n                toolbarElement = $(\"<div></div>\").addClass(imageEditorStyles.toolbar),\n                toolbarOptions = extend({}, options.toolbar, {\n              messages: options.messages.toolbar,\n              action: that.executeCommand.bind(that)\n            });\n            that.toolbar = new ui.imageeditor.ToolBar(toolbarElement, toolbarOptions);\n            return that.toolbar;\n          },\n          _contentWrapper: function () {\n            var that = this,\n                contentWrapper = $(\"<div></div>\").addClass(imageEditorStyles.contentWrapper),\n                canvasWrapper = $(\"<div></div>\").addClass(imageEditorStyles.canvasWrapper),\n                canvasContainer = $(\"<div></div>\").addClass(imageEditorStyles.canvasContainer),\n                paneWrapper = $(\"<div></div>\").addClass(imageEditorStyles.paneWrapper).hide(),\n                toolbarHeight = outerHeight(that.header);\n            that.canvasWrapper = canvasWrapper;\n            that.canvasContainer = canvasContainer;\n            that.paneWrapper = paneWrapper;\n            canvasWrapper.append(canvasContainer);\n            contentWrapper.height(outerHeight(that.wrapper) - toolbarHeight);\n            contentWrapper.append(canvasWrapper).append(paneWrapper);\n            that.wrapper.append(contentWrapper);\n          },\n          _keyHandler: function () {\n            var that = this,\n                prevent = false;\n            that.wrapper.on(\"keydown\" + NS, function (ev) {\n              if (ev.ctrlKey) {\n                switch (ev.keyCode) {\n                  case 48:\n                    // ctrl+0\n                    that.executeCommand({\n                      command: \"ZoomImageEditorCommand\",\n                      options: \"fitToScreen\"\n                    });\n                    prevent = true;\n                    break;\n\n                  case 189:\n                    // ctrl+-\n                    that.executeCommand({\n                      command: \"ZoomImageEditorCommand\",\n                      options: \"zoomOut\"\n                    });\n                    prevent = true;\n                    break;\n\n                  case 187:\n                    // ctrl++\n                    that.executeCommand({\n                      command: \"ZoomImageEditorCommand\",\n                      options: \"zoomIn\"\n                    });\n                    prevent = true;\n                    break;\n\n                  case 90:\n                    // ctrl+z\n                    that.executeCommand({\n                      command: \"UndoImageEditorCommand\"\n                    });\n                    prevent = true;\n                    break;\n\n                  case 89:\n                    // ctrl+y\n                    that.executeCommand({\n                      command: \"RedoImageEditorCommand\"\n                    });\n                    prevent = true;\n                    break;\n                }\n\n                if (prevent) {\n                  ev.preventDefault();\n                }\n              }\n            });\n          },\n          _drawCanvas: function () {\n            var that = this;\n            var imageUrl = that.options.imageUrl;\n            that.drawImage(imageUrl).done(function (image) {\n              if (!that.trigger(IMAGELOADED, {\n                image: image\n              })) {\n                that.drawCanvas(image);\n              }\n            }).fail(function (ev) {\n              that.trigger(ERROR, ev);\n            });\n          },\n          _initUndoRedoStack: function () {\n            var that = this;\n            that.undoStack = [];\n            that.redoStack = [];\n          },\n          _toggleTools: function () {\n            var that = this,\n                canRedo = that.redoStack.length > 0,\n                canUndo = that.undoStack.length > 0,\n                hasImage = !!that._image,\n                canExport = true;\n\n            try {\n              that._canvas.toDataURL();\n            } catch (error) {\n              canExport = false;\n            }\n\n            that.toolbar.toggleTools({\n              redo: canRedo,\n              undo: canUndo,\n              enable: hasImage,\n              canExport: canExport\n            });\n          },\n          drawImage: function (imageUrl) {\n            var that = this,\n                deferred = new $.Deferred(),\n                image = new Image();\n\n            image.onload = function () {\n              kendo.ui.progress(that.canvasContainer, false);\n              deferred.resolve(image);\n            };\n\n            image.onerror = function () {\n              kendo.ui.progress(that.canvasContainer, false);\n              deferred.reject(arguments);\n            };\n\n            kendo.ui.progress(that.canvasContainer, true);\n            image.src = imageUrl;\n            return deferred.promise();\n          },\n          drawCanvas: function (image) {\n            var that = this;\n            var canvas = $(\"<canvas>Canvas element</canvas>\")[0];\n            var ctx = canvas.getContext('2d');\n\n            if (that._canvas) {\n              $(that._canvas).remove();\n            }\n\n            if (that._image) {\n              that.undoStack.push(that._image);\n            }\n\n            that._canvas = canvas;\n            that._ctx = ctx;\n            that._image = image;\n            canvas.width = image.width;\n            canvas.height = image.height;\n            ctx.drawImage(image, 0, 0);\n            that.canvasContainer.append(canvas);\n\n            if (image.height > that.canvasWrapper.height()) {\n              that.executeCommand({\n                command: \"ZoomImageEditorCommand\",\n                options: \"fitToScreen\"\n              });\n            } else {\n              that.executeCommand({\n                command: \"ZoomImageEditorCommand\",\n                options: that.getZoomLevel()\n              });\n            }\n\n            that.trigger(IMAGERENDERED, {\n              canvas: canvas,\n              ctx: ctx,\n              image: image\n            });\n\n            that._toggleTools();\n          },\n          getCanvasElement: function () {\n            return this._canvas;\n          },\n          getCurrent2dContext: function () {\n            return this._ctx;\n          },\n          getCurrentImage: function () {\n            return this._image;\n          },\n          executeCommand: function (args) {\n            var commandName = args.command,\n                commandOptions = extend({\n              imageeditor: this\n            }, isPlainObject(args.options) ? args.options : {\n              value: args.options\n            }),\n                command = new ui.imageeditor.commands[commandName](commandOptions);\n\n            if (!this.trigger(EXECUTE, args)) {\n              this._toggleTools();\n\n              return command.exec();\n            }\n          },\n          getZoomLevel: function () {\n            return this._zoomLevel || 1;\n          },\n          destroy: function () {\n            var that = this;\n            that.element.off(NS);\n\n            if (that.currentPaneTool) {\n              that.currentPaneTool.destroy();\n            }\n\n            if (that.toolbar) {\n              that.toolbar.destroy();\n            }\n\n            if (that._upload) {\n              that._upload.destroy();\n            }\n\n            Widget.fn.destroy.call(that);\n          }\n        });\n        ui.plugin(ImageEditor);\n      })(window.kendo.jQuery);\n\n      return window.kendo;\n    }, __webpack_require__(3));\n    /***/\n\n  },\n\n  /***/\n  1319:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./imageeditor/toolbar\");\n    /***/\n  },\n\n  /***/\n  1320:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"./imageeditor/commands\");\n    /***/\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}