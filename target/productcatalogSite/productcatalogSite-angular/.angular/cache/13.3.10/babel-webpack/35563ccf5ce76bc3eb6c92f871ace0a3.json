{"ast":null,"code":"import filterSeriesByType from '../utils/filter-series-by-type';\nimport { Class } from '../../common';\n\nclass PlotAreaFactory extends Class {\n  constructor() {\n    super();\n    this._registry = [];\n  }\n\n  register(type, seriesTypes) {\n    this._registry.push({\n      type: type,\n      seriesTypes: seriesTypes\n    });\n  }\n\n  create(srcSeries, options, chartService) {\n    const registry = this._registry;\n    let match = registry[0];\n    let series;\n\n    for (let idx = 0; idx < registry.length; idx++) {\n      const entry = registry[idx];\n      series = filterSeriesByType(srcSeries, entry.seriesTypes);\n\n      if (series.length > 0) {\n        match = entry;\n        break;\n      }\n    }\n\n    return new match.type(series, options, chartService);\n  }\n\n}\n\nPlotAreaFactory.current = new PlotAreaFactory();\nexport default PlotAreaFactory;","map":null,"metadata":{},"sourceType":"module"}